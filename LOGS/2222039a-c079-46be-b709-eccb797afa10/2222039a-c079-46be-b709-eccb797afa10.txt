2023-07-24 10:02:38+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-07-24 10:02:38+0530 - sLogger - DEBUG - process_main_pages started
2023-07-24 10:03:13+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-07-24 10:03:13+0530 - sLogger - DEBUG - process_main_pages started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-07-24 10:03:14+0530 - sLogger - DEBUG - set_section_details started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD current assets | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD current liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD noncurrent assets | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD noncurrent liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD non current assets | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD non current liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD equity and liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD equity | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('equity', 33), ('noncurrent liabilities', 31), ('liabilities', 22)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('liabilities', 29), ('equity liabilities', 21), ('assets', 10), ('equity', 0)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Income tax payable | [('liabilities', 36), ('equity liabilities', 34), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equity and liabilities', 30), ('current assets', 21), ('assets', 19), ('equity', 18), ('noncurrent assets', 14)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current assets | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current liabilities | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent assets | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent liabilities | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current assets | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current liabilities | score 44
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity and liabilities | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Totalnoncurrent liabilities | [('noncurrent liabilities', 85), ('noncurrent assets', 56), ('liabilities', 48), ('current assets', 38), ('equity liabilities', 38), ('current liabilities', 36), ('equity and liabilities', 33), ('assets', 17), ('equity', 16)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD current assets | score 58
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD current liabilities | score 83
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD noncurrent assets | score 64
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD noncurrent liabilities | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD non current assets | score 62
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD non current liabilities | score 88
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total equity attributable to holders of ordinary shares of Spicers Limited | [('equity and liabilities', 38), ('equity liabilities', 35), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 23), ('noncurrent assets', 23), ('equity', 19), ('assets', 16), ('liabilities', 16)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD current assets | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD noncurrent assets | score 35
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD noncurrent liabilities | score 37
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD non current assets | score 43
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD non current liabilities | score 39
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD equity and liabilities | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD equity | score 60
2023-07-24 10:03:14+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-07-24 10:03:14+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-07-24 10:03:14+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-07-24 10:03:14+0530 - sLogger - DEBUG - set_section_details started
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net proceeds from the disposal of | adiustments for movements in working capital
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Property, plant and equipment | changes in operating assets and liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Short term deposits (acquired)yredeemed | operating profit before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of: | working capital adjustments
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Controlled entities and businesses (net of cash acquired) | adjustments for increase decrease in operating liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Property, plant and equipment and intangibles | changes in operating assets and liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of principal portion of lease liabilities | operating profit before changes in assets and liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from borrowings | operating cash flow before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from financing activities | operating cash flow before working capital changes
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net decrease in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the period | changes in operating assets and liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effect of exchange rate changes on cash held | changes in assets liabilities
2023-07-24 10:03:14+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the period | changes in operating assets and liabilities
2023-07-24 10:03:17+0530 - sLogger - DEBUG - process_main_pages completed
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 14212.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [14212.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 7748.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [7748.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [7748.0, 7748.0, 14212.0, 14212.0], 'label': ['None Cash on hand and at bank', 'None Total cash and cash equivalents', 'None Cash on hand and at bank', 'None Total cash and cash equivalents'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:23+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 135952.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [135952.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 160196.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [160196.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 4, 6, 7], 'score': [100, 100, 100, 100, 100, 100], 'value': [171488.0, 160196.0, 160196.0, 142834.0, 135952.0, 135952.0], 'label': ['None Finished goods', 'None Net finished goods', 'None Total inventories', 'None Finished goods', 'None Net finished goods', 'None Total inventories'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:23+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:23+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:23+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 10:03:23+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 137397.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 69253.0, 68144.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 144408.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 75882.0, 68526.0]}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 6, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [564.0, 0.0, 1962.0, 75882.0, 518.0, 441.0, 1721.0, 69253.0], 'label': ['None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables', 'None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 10:03:23+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:23+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:23+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7, 13, 18, 24, 28, 34, 39, 45, 49, 55, 60], 'score': [86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86], 'value': [-293.0, 0.0, 197.0, 0.0, -17.0, 15.0, 6.0, -5.0, -310.0, 15.0, 203.0, -5.0], 'label': ['Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 64287.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [54969.0, 9318.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 73368.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [65418.0, 7950.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [37900.0, 15518.0, 12000.0, 65418.0, 27800.0, 15169.0, 12000.0, 54969.0], 'label': ['Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan', 'Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 5, 9], 'score': [80, 89, 80, 89], 'value': [54969.0, 65418.0, 41267.0, 54969.0], 'label': ['None Balance at beginning of period', 'None Balance at end of period', 'None Balance at beginning of period', 'None Balance at end of period'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 82, 82, 82, 100, 82, 82, 82], 'value': [65418.0, 65418.0, -7748.0, 57670.0, 54969.0, 54969.0, -14212.0, 40757.0], 'label': ['None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan', 'None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [104455.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [92263.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 6, 7, 13], 'score': [100, 100, 100, 100], 'value': [75810.0, 92263.0, 79697.0, 104455.0], 'label': ['None Trade creditors', 'None Total trade and other payables', 'None Trade creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 104455.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 92263.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 8], 'score': [100, 100], 'value': [762.0, 2782.0], 'label': ['None Accrued expenses', 'None Accrued expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 2289.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [2289.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 1529.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [1529.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 112591.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 104455.0, 6853.0, 1283.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 100887.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 92263.0, 6961.0, 1663.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 4, 5, 6, 9, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [2148.0, 1977.0, 252.0, 11314.0, 92263.0, 2280.0, 1666.0, 0.0, 18030.0, 104455.0], 'label': ['None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables', 'None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], 'score': [100, 100, 100, 100, 100, 90, 100, 100, 100, 100, 100, 90], 'value': [5232.0, 1729.0, 6961.0, 2022.0, 0.0, 633.0, 5146.0, 1707.0, 6853.0, 2021.0, 0.0, 572.0], 'label': ['Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits', 'Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35], 'score': [100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [84.0, 84.0, 65.0, 65.0, -79.0, -79.0, 70.0, 70.0, 0.0, 0.0, 113.0, 113.0, -396.0, -396.0, 367.0, 367.0, 84.0, 84.0, 199.0, 199.0, 0.0, 0.0, -6.0, -6.0, 193.0, 193.0, 625.0, 625.0, 0.0, 0.0, -59.0, -59.0, -367.0, -367.0, 199.0, 199.0, 1000.0, 1000.0, 400.0, 400.0, 0.0, 0.0, 1400.0, 1400.0, 1000.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000.0, 1000.0, 1283.0, 1283.0, 465.0, 465.0, -85.0, -85.0, 1663.0, 1663.0, 1625.0, 1625.0, 113.0, 113.0, -455.0, -455.0, 0.0, 0.0, 1283.0, 1283.0], 'label': ['Current Balance at 1 January 2022', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Balance at 31 2022', 'Restruct- uring', 'Current Balance at 1 January 2021', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Transfers', 'Restruct- uring', 'Current Balance at 31 December 2021', 'Restruct- uring', 'Current Balance at 1 January 2022', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Balance at 31 2022', 'Warranty', 'Current Balance at 1 January 2021', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Transfers', 'Warranty', 'Current Balance at 31 December 2021', 'Warranty', 'Current Balance at 1 January 2022', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Balance at 31 2022', 'Other', 'Current Balance at 1 January 2021', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Transfers', 'Other', 'Current Balance at 31 December 2021', 'Other', 'Current Balance at 1 January 2022', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Balance at 31 2022', 'Total', 'Current Balance at 1 January 2021', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Transfers', 'Total', 'Current Balance at 31 December 2021', 'Total'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 572.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 572.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 633.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 633.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6, 9, 13], 'score': [90, 100, 90, 100], 'value': [6961.0, 633.0, 6853.0, 572.0], 'label': ['Current Total current employee benefits', 'Non-current Total non-current employee benefits', 'Current Total current employee benefits', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1871914.0, 1871914.0, 1871914.0, 1871914.0], 'label': ['Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital', 'Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5761.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5761.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5450.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5450.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1742610.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1742610.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1715016.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1715016.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 69253.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [69253.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 75882.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [75882.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 7, 9, 12], 'score': [94, 100, 100, 94, 100, 100], 'value': [75442.0, 73356.0, 1962.0, 68077.0, 66573.0, 1721.0], 'label': ['None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments', 'None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 10:03:24+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 10:03:24+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 367104.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [367104.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 430461.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [430461.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:24+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 10:03:24+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -310815.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-271328.0, -39487.0]}
2023-07-24 10:03:24+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:24+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 10:03:24+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -359196.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-316176.0, -43020.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -31350.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-22578.0, -1075.0, -7697.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -39589.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-28893.0, -1719.0, -8977.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 1761.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1761.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 552.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [552.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -348.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [1761.0, -2109.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -2661.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [552.0, -3213.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest income', 79), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest income', 64), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest income', 71), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest income', 79), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest income', 64), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest income', 71), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains'] , match_type = partial , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 4337.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [4337.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': -1421.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [-1421.0]}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 10:03:25+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 10:03:25+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 10:03:25+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 10:03:25+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 10:03:25+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-07-24 11:20:50+0530 - sLogger - DEBUG - process_main_pages started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-07-24 11:20:50+0530 - sLogger - DEBUG - set_section_details started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equity liabilities', 35), ('assets', 31), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrent liabilities', 23), ('liabilities', 22)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD current assets | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD current liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD noncurrent assets | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD noncurrent liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD non current assets | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD non current liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD equity and liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text assets | MATCH WORD equity | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity and liabilities', 41), ('equity liabilities', 40), ('current liabilities', 38), ('equity', 33), ('noncurrent liabilities', 31), ('liabilities', 22)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 42
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 59
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 57
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 46
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 21), ('equity', 19), ('liabilities', 10)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Loans and borrowings | [('equity and liabilities', 44), ('current assets', 36), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('liabilities', 29), ('equity liabilities', 21), ('assets', 10), ('equity', 0)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current assets | score 28
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD current liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent assets | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD noncurrent liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current assets | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD non current liabilities | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity and liabilities | score 41
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Loans and borrowings | MATCH WORD equity | score 15
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Income tax payable | [('liabilities', 36), ('equity liabilities', 34), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equity and liabilities', 30), ('current assets', 21), ('assets', 19), ('equity', 18), ('noncurrent assets', 14)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current assets | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current liabilities | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent assets | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent liabilities | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current assets | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current liabilities | score 44
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity and liabilities | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('current liabilities', 34), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('assets', 20)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Totalnoncurrent liabilities | [('noncurrent liabilities', 85), ('noncurrent assets', 56), ('liabilities', 48), ('current assets', 38), ('equity liabilities', 38), ('current liabilities', 36), ('equity and liabilities', 33), ('assets', 17), ('equity', 16)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD current assets | score 58
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD current liabilities | score 83
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD noncurrent assets | score 64
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD noncurrent liabilities | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD non current assets | score 62
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD non current liabilities | score 88
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Totalnoncurrent liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Accumulated losses | [('assets', 35), ('current liabilities', 31), ('noncurrent liabilities', 31), ('equity and liabilities', 28), ('current assets', 24), ('noncurrent assets', 24), ('equity liabilities', 24), ('liabilities', 22), ('equity', 11)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current assets | score 50
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent assets | score 46
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD noncurrent liabilities | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current assets | score 44
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD non current liabilities | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity and liabilities | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Accumulated losses | MATCH WORD equity | score 30
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total equity attributable to holders of ordinary shares of Spicers Limited | [('equity and liabilities', 38), ('equity liabilities', 35), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 23), ('noncurrent assets', 23), ('equity', 19), ('assets', 16), ('liabilities', 16)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD current assets | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD noncurrent assets | score 35
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD noncurrent liabilities | score 37
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD non current assets | score 43
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD non current liabilities | score 39
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD equity and liabilities | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity attributable to holders of ordinary shares of Spicers Limited | MATCH WORD equity | score 60
2023-07-24 11:20:50+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-07-24 11:20:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-07-24 11:20:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-07-24 11:20:50+0530 - sLogger - DEBUG - set_section_details started
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes paid | changes in working capital
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (used in)/from operating activities | adjustments for increase decrease in operating assets
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net proceeds from the disposal of | adiustments for movements in working capital
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Property, plant and equipment | changes in operating assets and liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Short term deposits (acquired)yredeemed | operating profit before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of: | working capital adjustments
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Controlled entities and businesses (net of cash acquired) | adjustments for increase decrease in operating liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Property, plant and equipment and intangibles | changes in operating assets and liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of principal portion of lease liabilities | operating profit before changes in assets and liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from borrowings | operating cash flow before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from financing activities | operating cash flow before working capital changes
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net decrease in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the period | changes in operating assets and liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Effect of exchange rate changes on cash held | changes in assets liabilities
2023-07-24 11:20:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the period | changes in operating assets and liabilities
2023-07-24 11:20:53+0530 - sLogger - DEBUG - process_main_pages completed
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 14212.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [14212.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 7748.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [7748.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [7748.0, 7748.0, 14212.0, 14212.0], 'label': ['None Cash on hand and at bank', 'None Total cash and cash equivalents', 'None Cash on hand and at bank', 'None Total cash and cash equivalents'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 135952.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [135952.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 160196.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [160196.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 4, 6, 7], 'score': [100, 100, 100, 100, 100, 100], 'value': [171488.0, 160196.0, 160196.0, 142834.0, 135952.0, 135952.0], 'label': ['None Finished goods', 'None Net finished goods', 'None Total inventories', 'None Finished goods', 'None Net finished goods', 'None Total inventories'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 137397.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 69253.0, 68144.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 144408.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 75882.0, 68526.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 6, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [564.0, 0.0, 1962.0, 75882.0, 518.0, 441.0, 1721.0, 69253.0], 'label': ['None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables', 'None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7, 13, 18, 24, 28, 34, 39, 45, 49, 55, 60], 'score': [86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86], 'value': [-293.0, 0.0, 197.0, 0.0, -17.0, 15.0, 6.0, -5.0, -310.0, 15.0, 203.0, -5.0], 'label': ['Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:53+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:53+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-07-24 11:20:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:53+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 11:20:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 64287.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [54969.0, 9318.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 73368.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [65418.0, 7950.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [37900.0, 15518.0, 12000.0, 65418.0, 27800.0, 15169.0, 12000.0, 54969.0], 'label': ['Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan', 'Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 5, 9], 'score': [80, 89, 80, 89], 'value': [54969.0, 65418.0, 41267.0, 54969.0], 'label': ['None Balance at beginning of period', 'None Balance at end of period', 'None Balance at beginning of period', 'None Balance at end of period'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 82, 82, 82, 100, 82, 82, 82], 'value': [65418.0, 65418.0, -7748.0, 57670.0, 54969.0, 54969.0, -14212.0, 40757.0], 'label': ['None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan', 'None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [104455.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [92263.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 6, 7, 13], 'score': [100, 100, 100, 100], 'value': [75810.0, 92263.0, 79697.0, 104455.0], 'label': ['None Trade creditors', 'None Total trade and other payables', 'None Trade creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 104455.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 92263.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 8], 'score': [100, 100], 'value': [762.0, 2782.0], 'label': ['None Accrued expenses', 'None Accrued expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 2289.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [2289.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 1529.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [1529.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 112591.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 104455.0, 6853.0, 1283.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 100887.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 92263.0, 6961.0, 1663.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 4, 5, 6, 9, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [2148.0, 1977.0, 252.0, 11314.0, 92263.0, 2280.0, 1666.0, 0.0, 18030.0, 104455.0], 'label': ['None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables', 'None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], 'score': [100, 100, 100, 100, 100, 90, 100, 100, 100, 100, 100, 90], 'value': [5232.0, 1729.0, 6961.0, 2022.0, 0.0, 633.0, 5146.0, 1707.0, 6853.0, 2021.0, 0.0, 572.0], 'label': ['Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits', 'Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35], 'score': [100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [84.0, 84.0, 65.0, 65.0, -79.0, -79.0, 70.0, 70.0, 0.0, 0.0, 113.0, 113.0, -396.0, -396.0, 367.0, 367.0, 84.0, 84.0, 199.0, 199.0, 0.0, 0.0, -6.0, -6.0, 193.0, 193.0, 625.0, 625.0, 0.0, 0.0, -59.0, -59.0, -367.0, -367.0, 199.0, 199.0, 1000.0, 1000.0, 400.0, 400.0, 0.0, 0.0, 1400.0, 1400.0, 1000.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000.0, 1000.0, 1283.0, 1283.0, 465.0, 465.0, -85.0, -85.0, 1663.0, 1663.0, 1625.0, 1625.0, 113.0, 113.0, -455.0, -455.0, 0.0, 0.0, 1283.0, 1283.0], 'label': ['Current Balance at 1 January 2022', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Balance at 31 2022', 'Restruct- uring', 'Current Balance at 1 January 2021', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Transfers', 'Restruct- uring', 'Current Balance at 31 December 2021', 'Restruct- uring', 'Current Balance at 1 January 2022', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Balance at 31 2022', 'Warranty', 'Current Balance at 1 January 2021', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Transfers', 'Warranty', 'Current Balance at 31 December 2021', 'Warranty', 'Current Balance at 1 January 2022', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Balance at 31 2022', 'Other', 'Current Balance at 1 January 2021', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Transfers', 'Other', 'Current Balance at 31 December 2021', 'Other', 'Current Balance at 1 January 2022', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Balance at 31 2022', 'Total', 'Current Balance at 1 January 2021', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Transfers', 'Total', 'Current Balance at 31 December 2021', 'Total'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 572.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 572.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 633.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 633.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6, 9, 13], 'score': [90, 100, 90, 100], 'value': [6961.0, 633.0, 6853.0, 572.0], 'label': ['Current Total current employee benefits', 'Non-current Total non-current employee benefits', 'Current Total current employee benefits', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1871914.0, 1871914.0, 1871914.0, 1871914.0], 'label': ['Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital', 'Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5761.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5761.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5450.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5450.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1742610.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1742610.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1715016.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1715016.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 69253.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [69253.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 75882.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [75882.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 7, 9, 12], 'score': [94, 100, 100, 94, 100, 100], 'value': [75442.0, 73356.0, 1962.0, 68077.0, 66573.0, 1721.0], 'label': ['None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments', 'None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 11:20:54+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 11:20:54+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 367104.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [367104.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 430461.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [430461.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -310815.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-271328.0, -39487.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -359196.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-316176.0, -43020.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -31350.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-22578.0, -1075.0, -7697.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -39589.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-28893.0, -1719.0, -8977.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 1761.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1761.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 552.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [552.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:54+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 11:20:54+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -348.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [1761.0, -2109.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -2661.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [552.0, -3213.0]}
2023-07-24 11:20:54+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:54+0530 - sLogger - DEBUG - keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 11:20:54+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Interest income', ' Lease liabilities interest expense'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest income', 79), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest income', 64), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest income', 71), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest income', 79), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest income', 64), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest income', 71), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Interest income', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains'] , match_type = partial , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 4337.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [4337.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': -1421.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [-1421.0]}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 11:20:55+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 11:20:55+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 11:20:55+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 11:20:55+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 11:20:55+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 14212.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [14212.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', ' cash and cash equivalents'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and short term deposits', 35), ('cash and cash equivalents', 29), (' cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), (' cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), (' cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('bank balances other than above', 22), ('cash and cash equivalents', 20), (' cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), (' cash and cash equivalents', 31), ('cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other bank balances', 44), ('cash and short term deposits', 43), ('bank balances other than cash and cash equivalents', 41), ('cash and cash equivalents', 40), (' cash and cash equivalents', 40), ('bank balances other than above', 39), ('cash and bank balances', 36)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('cash and short term deposits', 33), ('cash and cash equivalents', 28), (' cash and cash equivalents', 28), ('bank balances other than cash and cash equivalents', 24), ('bank balances other than above', 19), ('other bank balances', 19), ('cash and bank balances', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('cash and cash equivalents', 36), (' cash and cash equivalents', 36), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 31), ('cash and bank balances', 31), ('cash and short term deposits', 31), ('other bank balances', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('cash and short term deposits', 38), ('bank balances other than cash and cash equivalents', 34), ('cash and cash equivalents', 33), ('bank balances other than above', 33), (' cash and cash equivalents', 33), ('other bank balances', 25), ('cash and bank balances', 23)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 7748.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['10'], 'line_item_value': [7748.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['cash on hand', ' cash at bank', ' cash at bank and on hand', ' short term deposits', ' cash at banks earns interest at floating rates based on daily bank deposit rates', ' cash and cash equivalents', ' cash on hand and at bank'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' short term deposits', 44), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' cash and cash equivalents', 44), (' cash on hand and at bank', 44), ('cash on hand', 33), (' cash at bank', 33), (' cash at bank and on hand', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none cash on hand and at bank , res_fuzz_match = [('cash on hand', 100), (' cash on hand and at bank', 100), (' cash at bank', 78), (' cash at bank and on hand', 78), (' cash and cash equivalents', 62), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 52), (' short term deposits', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total cash and cash equivalents , res_fuzz_match = [(' cash and cash equivalents', 100), ('cash on hand', 89), (' cash at bank', 78), (' cash on hand and at bank', 61), (' cash at bank and on hand', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates', 44), (' short term deposits', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates', 45), (' cash and cash equivalents', 45), ('cash on hand', 44), (' cash at bank and on hand', 36), (' short term deposits', 36), (' cash on hand and at bank', 36), (' cash at bank', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [7748.0, 7748.0, 14212.0, 14212.0], 'label': ['None Cash on hand and at bank', 'None Total cash and cash equivalents', 'None Cash on hand and at bank', 'None Total cash and cash equivalents'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:32+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 135952.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [135952.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('inventories', 33)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('inventories', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 160196.0, 'line_item_label': ['Inventories'], 'note_numbers': ['12'], 'line_item_value': [160196.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['raw materials', ' finished goods', ' finished goods at cost', ' stores and other consumables at cost', ' raw materials', ' work in progress', ' finished goods', ' goods in transit', ' provision for inventory obsolescence', ' inventories', ' cranes', ' cranes - in transit', ' spare parts'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' stores and other consumables at cost', 44), (' provision for inventory obsolescence', 44), (' cranes - in transit', 38), (' goods in transit', 33), (' inventories', 33), (' work in progress', 23), ('raw materials', 20), (' raw materials', 20), (' cranes', 20), (' spare parts', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' provision for inventory obsolescence', 59), (' work in progress', 54), ('raw materials', 50), (' raw materials', 50), (' spare parts', 50), (' inventories', 44), (' stores and other consumables at cost', 41), (' finished goods at cost', 38), (' cranes - in transit', 38), (' finished goods', 36), (' finished goods', 36), (' goods in transit', 33), (' cranes', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net finished goods , res_fuzz_match = [(' finished goods', 100), (' finished goods', 100), (' finished goods at cost', 81), (' cranes - in transit', 46), (' provision for inventory obsolescence', 45), (' inventories', 44), (' stores and other consumables at cost', 40), (' cranes', 40), (' goods in transit', 33), ('raw materials', 30), (' raw materials', 30), (' spare parts', 30), (' work in progress', 23)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total inventories , res_fuzz_match = [(' inventories', 100), (' provision for inventory obsolescence', 65), (' cranes - in transit', 46), (' goods in transit', 42), ('raw materials', 40), (' raw materials', 40), (' cranes', 40), (' stores and other consumables at cost', 35), (' finished goods at cost', 31), (' finished goods', 27), (' finished goods', 27), (' work in progress', 23), (' spare parts', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' cranes', 40), (' finished goods at cost', 33), (' stores and other consumables at cost', 33), (' provision for inventory obsolescence', 33), ('raw materials', 17), (' finished goods', 17), (' raw materials', 17), (' work in progress', 17), (' finished goods', 17), (' goods in transit', 17), (' inventories', 17), (' cranes - in transit', 17), (' spare parts', 17)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 3, 4, 6, 7], 'score': [100, 100, 100, 100, 100, 100], 'value': [171488.0, 160196.0, 160196.0, 142834.0, 135952.0, 135952.0], 'label': ['None Finished goods', 'None Net finished goods', 'None Total inventories', 'None Finished goods', 'None Net finished goods', 'None Total inventories'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:32+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid', 'other prepayments']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets', 'prepayments'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50), ('prepayments', 21)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('other assets', 31), ('other current assets', 30), ('other financial assets', 30), ('other current financial assets', 29), ('prepayments', 15)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39), ('prepayments', 21)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28), ('prepayments', 13)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31), ('prepayments', 18)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other current assets', 42), ('other financial assets', 42), ('other assets', 40), ('other current financial assets', 39), ('prepayments', 20)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54), ('other current assets', 53), ('other financial assets', 47), ('other current financial assets', 43), ('prepayments', 10)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other financial assets', 65), ('other assets', 61), ('other current assets', 52), ('other current financial assets', 51), ('prepayments', 22)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), ('other current assets', 53), ('other financial assets', 53), ('other current financial assets', 48), ('prepayments', 19)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:32+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:32+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-07-24 12:18:32+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 137397.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 69253.0, 68144.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other assets', ' financial assets', ' income tax receivable from related parties', ' other current assets', ' biological assets', ' deferred operating expenditure', ' other financial assets', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), (' other current assets', 81), ('other assets', 58), (' financial assets', 54), (' other financial assets', 50), (' biological assets', 48), (' trade and other receivables', 34), (' income tax receivable from related parties', 30), (' deferred operating expenditure', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets', 36), (' financial assets', 35), (' income tax receivable from related parties', 33), ('other assets', 31), ('other current assets', 30), (' other current assets', 30), (' other financial assets', 30), (' deferred operating expenditure', 19)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties', 47), (' deferred operating expenditure', 47), ('other assets', 42), ('other current assets', 39), (' other current assets', 39), (' other financial assets', 39), (' financial assets', 29), (' biological assets', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), (' financial assets', 36), (' other current assets', 36), (' other financial assets', 36), (' deferred operating expenditure', 33), (' biological assets', 29), (' trade and other receivables', 26), (' income tax receivable from related parties', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), (' biological assets', 59), (' financial assets', 56), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), (' trade and other receivables', 22), (' income tax receivable from related parties', 16), (' deferred operating expenditure', 15)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' deferred operating expenditure', 49), (' trade and other receivables', 43), ('other current assets', 42), (' other current assets', 42), (' other financial assets', 42), ('other assets', 40), (' income tax receivable from related parties', 39), (' financial assets', 32), (' biological assets', 28)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' biological assets', 59), ('other assets', 54), ('other current assets', 53), (' other current assets', 53), (' financial assets', 50), (' other financial assets', 47), (' trade and other receivables', 32), (' deferred operating expenditure', 28), (' income tax receivable from related parties', 25)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [(' financial assets', 80), (' biological assets', 67), (' other financial assets', 65), ('other assets', 61), ('other current assets', 52), (' other current assets', 52), (' trade and other receivables', 35), (' income tax receivable from related parties', 27), (' deferred operating expenditure', 24)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('other assets', 62), (' financial assets', 57), ('other current assets', 53), (' other current assets', 53), (' other financial assets', 53), (' biological assets', 44), (' trade and other receivables', 43), (' income tax receivable from related parties', 42), (' deferred operating expenditure', 39)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 8], 'score': 80, 'value': 144408.0, 'line_item_label': ['Current assets', 'Trade and other receivables', 'Intangible assets'], 'note_numbers': [nan, '11', '15'], 'line_item_value': [0.0, 75882.0, 68526.0]}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' income tax receivable from related parties', 56), (' long service leave receivable', 56), (' other deposits receivable - related party', 56), (' amount receivable from controlling entity', 56), (' interest receivable', 56), (' related party receivable', 56), (' other debtors and prepayments', 56), ('foreign exchange derivatives at fair value', 44), (' electricity derivatives at fair value', 44), (' related party disclosures', 44), (' other receivables - related party', 44), (' accrued rebates', 44), (' forward exchange contracts', 44), (' other', 40), (' accrued interest', 33), (' derivative contracts - fair value', 33), (' bank guarantee', 33), (' rental bond', 33), (' share of jv prepayments', 33), (' current investments', 33), (' foreign exchange forward contracts', 33), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 24), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' other debtors and prepayments', 59), (' other deposits receivable - related party', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' electricity derivatives at fair value', 41), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' long service leave receivable', 41), (' other receivables - related party', 41), (' amount receivable from controlling entity', 41), (' forward exchange contracts', 41), (' other', 40), (' interest receivable', 40), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), (' related party disclosures', 35), (' related party receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' deposits', 57), (' derivative contracts - fair value', 50), (' interest receivable', 47), (' other receivables - related party', 46), (' electricity derivatives at fair value', 45), ('foreign exchange derivatives at fair value', 44), (' related party disclosures', 44), (' condensate', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' other deposits receivable - related party', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), ('other assets', 36), (' accrued interest', 36), (' related party receivable', 33), (' lng', 33), (' current investments', 29), (' forward exchange contracts', 29), (' rental bond', 27), (' accrued rebates', 27), (' bank guarantee', 23), ('current', 14)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' condensate', 57), (' other debtors and prepayments', 48), (' interest receivable', 47), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' foreign exchange forward contracts', 43), (' related party disclosures', 41), (' other', 40), (' related party receivable', 39), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' amount receivable from controlling entity', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' accrued interest', 36), (' current investments', 36), (' share of jv prepayments', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' accrued rebates', 100), (' accrued interest', 72), ('current', 57), (' share of jv prepayments', 52), (' income tax receivable from related parties', 50), (' other receivables - related party', 50), (' derivative contracts - fair value', 44), (' long service leave receivable', 44), (' other deposits receivable - related party', 44), (' amount receivable from controlling entity', 44), (' related party receivable', 44), (' foreign exchange forward contracts', 44), (' other debtors and prepayments', 44), (' condensate', 43), (' interest receivable', 41), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' current investments', 36), (' lng', 33), (' related party disclosures', 31), (' deposits', 29), (' rental bond', 27)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' lng', 67), (' foreign exchange forward contracts', 66), (' other', 60), ('foreign exchange derivatives at fair value', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), ('other assets', 45), (' amount receivable from controlling entity', 45), (' rental bond', 45), (' accrued rebates', 45), (' accrued interest', 44), ('current', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' income tax receivable from related parties', 41), (' interest receivable', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' current investments', 36), (' electricity derivatives at fair value', 32), (' deposits', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other', 100), (' other debtors and prepayments', 100), ('other assets', 73), (' share of jv prepayments', 67), (' other receivables - related party', 51), (' other deposits receivable - related party', 50), (' bank guarantee', 46), (' electricity derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), ('foreign exchange derivatives at fair value', 41), (' derivative contracts - fair value', 40), (' interest receivable', 40), (' related party receivable', 40), (' income tax receivable from related parties', 39), (' foreign exchange forward contracts', 39), (' forward exchange contracts', 38), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other receivables - related party', 50), (' long service leave receivable', 48), (' other debtors and prepayments', 48), (' bank guarantee', 46), (' forward exchange contracts', 46), (' rental bond', 45), (' accrued rebates', 45), (' other deposits receivable - related party', 44), (' accrued interest', 43), (' deposits', 43), (' amount receivable from controlling entity', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), ('foreign exchange derivatives at fair value', 39), (' derivative contracts - fair value', 38), (' current investments', 36), (' related party disclosures', 33), (' lng', 33), ('current', 29)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' other deposits receivable - related party', 55), (' amount receivable from controlling entity', 55), (' interest receivable', 55), (' related party receivable', 55), (' related party disclosures', 45), (' income tax receivable from related parties', 45), (' long service leave receivable', 45), (' other receivables - related party', 45), (' other', 40), ('foreign exchange derivatives at fair value', 36), (' electricity derivatives at fair value', 36), (' bank guarantee', 36), (' share of jv prepayments', 36), (' accrued rebates', 36), (' forward exchange contracts', 36), (' deposits', 31), ('current', 29), (' condensate', 29), ('other assets', 27), (' accrued interest', 27), (' derivative contracts - fair value', 27), (' rental bond', 27), (' current investments', 27), (' foreign exchange forward contracts', 27), (' other debtors and prepayments', 27), (' lng', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 6, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [564.0, 0.0, 1962.0, 75882.0, 518.0, 441.0, 1721.0, 69253.0], 'label': ['None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables', 'None Accrued rebates', 'None Forward exchange contracts', 'None Other debtors and prepayments', 'None Total trade and other receivables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 12:18:32+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:32+0530 - sLogger - DEBUG - keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:32+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [('other assets', 45), (' rental bond', 45), ('current', 43), (' current investments', 43), (' income tax receivable from related parties', 41), (' derivative contracts - fair value', 41), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' foreign exchange forward contracts', 36), (' accrued rebates', 36), (' related party receivable', 33), (' share of jv prepayments', 33), (' lng', 33), ('foreign exchange derivatives at fair value', 32), (' forward exchange contracts', 32), (' other debtors and prepayments', 32), (' deposits', 29), (' condensate', 29), (' long service leave receivable', 27), (' other receivables - related party', 27), (' other deposits receivable - related party', 27), (' interest receivable', 27), (' bank guarantee', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' income tax receivable from related parties', 48), ('other assets', 45), (' forward exchange contracts', 44), ('current', 43), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' current investments', 43), (' share of jv prepayments', 42), (' amount receivable from controlling entity', 41), (' other', 40), (' related party disclosures', 38), (' other receivables - related party', 38), (' foreign exchange forward contracts', 38), (' rental bond', 36), (' accrued rebates', 36), (' other debtors and prepayments', 35), (' other deposits receivable - related party', 34), (' interest receivable', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' bank guarantee', 31), (' long service leave receivable', 30), (' deposits', 29), (' condensate', 29), ('foreign exchange derivatives at fair value', 28), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' related party disclosures', 48), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), ('other assets', 36), (' accrued interest', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' other debtors and prepayments', 48), (' rental bond', 45), ('foreign exchange derivatives at fair value', 43), (' income tax receivable from related parties', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' foreign exchange forward contracts', 42), (' electricity derivatives at fair value', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' related party disclosures', 48), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' other deposits receivable - related party', 34), (' income tax receivable from related parties', 33), (' interest receivable', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' current investments', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' condensate', 57), (' related party disclosures', 48), (' interest receivable', 47), (' rental bond', 45), (' related party receivable', 44), ('current', 43), (' accrued interest', 43), (' long service leave receivable', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' amount receivable from controlling entity', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' lng', 67), (' bank guarantee', 54), (' other deposits receivable - related party', 50), (' other receivables - related party', 46), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 42), (' derivative contracts - fair value', 42), (' amount receivable from controlling entity', 42), (' other', 40), (' long service leave receivable', 39), (' other debtors and prepayments', 39), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' rental bond', 36), (' current investments', 36), (' accrued rebates', 36), (' forward exchange contracts', 34), ('foreign exchange derivatives at fair value', 33), (' related party disclosures', 33), (' interest receivable', 33), (' related party receivable', 33), (' foreign exchange forward contracts', 33), ('current', 29), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' derivative contracts - fair value', 53), (' amount receivable from controlling entity', 47), (' foreign exchange forward contracts', 47), (' forward exchange contracts', 47), ('other assets', 45), (' deposits', 43), (' condensate', 43), (' income tax receivable from related parties', 41), (' electricity derivatives at fair value', 40), (' other', 40), (' related party disclosures', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' other debtors and prepayments', 40), (' current investments', 37), (' rental bond', 36), (' accrued rebates', 36), (' interest receivable', 34), ('foreign exchange derivatives at fair value', 33), (' long service leave receivable', 33), (' related party receivable', 33), ('current', 29), (' accrued interest', 29), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [('other assets', 45), (' accrued rebates', 45), (' accrued interest', 43), (' derivative contracts - fair value', 43), (' other deposits receivable - related party', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' interest receivable', 40), (' foreign exchange forward contracts', 40), (' amount receivable from controlling entity', 39), (' current investments', 36), (' forward exchange contracts', 36), (' income tax receivable from related parties', 35), (' other receivables - related party', 35), (' related party disclosures', 33), (' related party receivable', 33), (' electricity derivatives at fair value', 32), (' long service leave receivable', 31), ('foreign exchange derivatives at fair value', 30), (' other debtors and prepayments', 30), ('current', 29), (' rental bond', 27), (' share of jv prepayments', 25), (' bank guarantee', 23), (' lng', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' interest receivable', 47), (' foreign exchange forward contracts', 47), ('other assets', 45), (' rental bond', 45), (' other deposits receivable - related party', 44), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' derivative contracts - fair value', 42), (' other receivables - related party', 42), (' amount receivable from controlling entity', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other', 40), (' income tax receivable from related parties', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' related party disclosures', 38), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' accrued rebates', 36), (' lng', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' lng', 67), ('other assets', 45), (' rental bond', 45), (' accrued rebates', 45), (' income tax receivable from related parties', 43), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other', 40), (' other deposits receivable - related party', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other debtors and prepayments', 39), (' bank guarantee', 38), (' accrued interest', 36), (' current investments', 36), ('foreign exchange derivatives at fair value', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' interest receivable', 33), (' other receivables - related party', 30), (' forward exchange contracts', 30), ('current', 29), (' related party disclosures', 29), (' electricity derivatives at fair value', 27), (' share of jv prepayments', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), (' bank guarantee', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' related party disclosures', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' income tax receivable from related parties', 42), (' other', 40), (' long service leave receivable', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' accrued rebates', 36), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other receivables - related party', 42), (' other deposits receivable - related party', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' income tax receivable from related parties', 39), (' related party receivable', 39), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' amount receivable from controlling entity', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), ('current', 43), (' accrued interest', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' foreign exchange forward contracts', 41), (' other', 40), (' interest receivable', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' forward exchange contracts', 38), (' income tax receivable from related parties', 37), ('other assets', 36), (' electricity derivatives at fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' long service leave receivable', 35), (' other deposits receivable - related party', 35), (' amount receivable from controlling entity', 34), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [('current', 86), (' current investments', 64), (' related party disclosures', 48), (' interest receivable', 47), (' foreign exchange forward contracts', 47), (' derivative contracts - fair value', 46), (' rental bond', 45), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' share of jv prepayments', 42), (' forward exchange contracts', 42), (' other deposits receivable - related party', 41), (' other', 40), (' long service leave receivable', 39), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), ('other assets', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' accrued rebates', 36), (' lng', 33), (' electricity derivatives at fair value', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' rental bond', 45), (' accrued rebates', 45), (' related party disclosures', 43), (' long service leave receivable', 43), (' deposits', 43), (' other debtors and prepayments', 43), (' other', 40), (' related party receivable', 39), (' other receivables - related party', 38), (' bank guarantee', 38), (' foreign exchange forward contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' current investments', 36), (' income tax receivable from related parties', 33), (' amount receivable from controlling entity', 33), (' interest receivable', 33), (' share of jv prepayments', 33), (' lng', 33), (' forward exchange contracts', 33), (' other deposits receivable - related party', 31), ('current', 29), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' related party disclosures', 48), (' derivative contracts - fair value', 46), (' bank guarantee', 46), (' rental bond', 45), (' accrued rebates', 45), ('current', 43), (' deposits', 43), (' current investments', 43), (' other debtors and prepayments', 43), ('foreign exchange derivatives at fair value', 42), (' other', 40), (' interest receivable', 40), (' amount receivable from controlling entity', 39), (' related party receivable', 39), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' foreign exchange forward contracts', 38), (' forward exchange contracts', 38), ('other assets', 36), (' electricity derivatives at fair value', 36), (' accrued interest', 36), (' income tax receivable from related parties', 36), (' long service leave receivable', 35), (' share of jv prepayments', 33), (' lng', 33), (' condensate', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' derivative contracts - fair value', 50), (' foreign exchange forward contracts', 50), (' electricity derivatives at fair value', 46), ('other assets', 45), (' income tax receivable from related parties', 45), (' amount receivable from controlling entity', 45), ('current', 43), (' current investments', 43), (' share of jv prepayments', 42), ('foreign exchange derivatives at fair value', 40), (' other', 40), (' accrued interest', 36), (' rental bond', 36), (' accrued rebates', 36), (' forward exchange contracts', 35), (' other debtors and prepayments', 35), (' lng', 33), (' bank guarantee', 31), (' related party disclosures', 30), (' long service leave receivable', 30), (' other receivables - related party', 30), (' other deposits receivable - related party', 30), (' deposits', 29), (' condensate', 29), (' related party receivable', 28), (' interest receivable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 7, 13, 18, 24, 28, 34, 39, 45, 49, 55, 60], 'score': [86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86, 86], 'value': [-293.0, 0.0, 197.0, 0.0, -17.0, 15.0, 6.0, -5.0, -310.0, 15.0, 203.0, -5.0], 'label': ['Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisation and impairment losses: Foreign currency movements', 'Cost or cost: Foreign currency movements', 'Amortisationand impairment losses: Foreign currency movements'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software goodwill , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software computer software , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses (1) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 1 january 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: balance at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisation and impairment losses: carrying amount as at 31 december 2022 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: additions , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = cost or cost: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 1 january 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: amortisation (2) , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: acquisition of businesses , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: foreign currency movements , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: balance at 31 december 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = amortisationand impairment losses: carrying amount as at 31 2021 , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = computer software total , res_fuzz_match = [(' ', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('current assets', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('current assets', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('current assets', 64)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('current assets', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', 'finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total. properties', ' warehouse and office equipment', ' motor vehicles']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other assets', 'non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 64287.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [54969.0, 9318.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities', ' loans and borrowings', ' bank overdraft', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), (' loans and borrowings', 34), (' leases', 22), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), (' bank overdraft', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings', 49), (' bank overdraft', 44), ('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21), (' leases', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' loans and borrowings', 100), ('borrowings', 57), ('shortterm borrowings', 52), (' bank overdraft', 48), ('short-term debt', 34), ('shortterm debt', 34), ('short term debt', 33), ('lease liabilities', 31), (' leases', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), (' leases', 53), (' loans and borrowings', 31), (' bank overdraft', 24), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' loans and borrowings', 32), ('lease liabilities', 30), (' bank overdraft', 27), ('short-term debt', 20), ('shortterm debt', 20), (' leases', 20), ('short term debt', 19), ('shortterm borrowings', 19), ('borrowings', 9)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('short-term debt', 34), ('shortterm debt', 34), (' bank overdraft', 34), ('short term debt', 33), (' loans and borrowings', 27), ('shortterm borrowings', 26), ('lease liabilities', 23), (' leases', 21), ('borrowings', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), (' bank overdraft', 20), (' leases', 20), (' loans and borrowings', 19), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [14, 15], 'score': 100, 'value': 73368.0, 'line_item_label': ['Loans and borrowings', 'Lease liabilities'], 'note_numbers': ['19', '14'], 'line_item_value': [65418.0, 7950.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at 31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current bank loans unsecured aud 0.9% to 4.2% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' leases', 50), (' bank overdraft', 50), (' balance at the end of period', 48), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' lease liabilities - current', 42), (' loans from related party', 38), (' lease liabilities', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current bank loans nan nzd 2.1% to 5.6% (1) , res_fuzz_match = [('current', 100), (' current', 100), (' secured long-term bank loans', 62), ('bank borrowings', 55), (' bank overdraft', 50), (' not later than 1 year', 47), (' utilised – bank borrowings', 45), (' balance at the end of period', 43), (' lease liabilities - current', 37), (' lease liabilities', 36), (' loans from related party', 33), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other loans nan various 1.1% to 4.0% (2) , res_fuzz_match = [('current', 100), (' current', 100), (' not later than 1 year', 58), (' secured long-term bank loans', 58), (' leases', 50), (' loans from related party', 48), ('bank borrowings', 45), (' bank overdraft', 43), (' balance at the end of period', 43), (' utilised – bank borrowings', 40), (' lease liabilities', 36), (' lease liabilities - current', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total loans and borrowings total loans and borrowings nan nan nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 65), (' not later than 1 year', 53), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' secured long-term bank loans', 42), (' lease liabilities - current', 42), (' lease liabilities', 36), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = december $000 , res_fuzz_match = [(' secured long-term bank loans', 50), (' balance at the end of period', 33), (' leases', 25), ('current', 17), ('bank borrowings', 17), (' utilised – bank borrowings', 17), (' not later than 1 year', 17), (' current', 17), (' loans from related party', 17), (' lease liabilities - current', 17), (' lease liabilities', 17), (' bank overdraft', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [37900.0, 15518.0, 12000.0, 65418.0, 27800.0, 15169.0, 12000.0, 54969.0], 'label': ['Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan', 'Current Bank loans unsecured AUD 0.9% to 4.2% (1)', 'Current Bank loans nan NZD 2.1% to 5.6% (1)', 'Current Other loans nan various 1.1% to 4.0% (2)', 'Current Total loans and borrowings Total loans and borrowings nan nan nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none balance at beginning of period , res_fuzz_match = [(' balance at the end of period', 80), (' leases', 50), ('bank borrowings', 45), (' lease liabilities', 45), ('current', 43), (' current', 43), (' loans from related party', 43), (' bank overdraft', 43), (' not later than 1 year', 42), (' lease liabilities - current', 42), (' utilised – bank borrowings', 40), (' secured long-term bank loans', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none net drawdowns , res_fuzz_match = [(' secured long-term bank loans', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' not later than 1 year', 41), (' loans from related party', 41), (' balance at the end of period', 41), (' utilised – bank borrowings', 35), (' lease liabilities - current', 29), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total changes from financing cash flows , res_fuzz_match = [(' not later than 1 year', 53), (' loans from related party', 52), (' leases', 50), ('bank borrowings', 45), (' secured long-term bank loans', 42), (' utilised – bank borrowings', 40), (' balance at the end of period', 38), (' lease liabilities - current', 37), (' lease liabilities', 36), (' bank overdraft', 36), ('current', 29), (' current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none effect of changes in foreignexchange rates , res_fuzz_match = [(' loans from related party', 48), (' not later than 1 year', 47), ('bank borrowings', 45), ('current', 43), (' current', 43), (' bank overdraft', 43), (' secured long-term bank loans', 42), (' lease liabilities - current', 37), (' utilised – bank borrowings', 35), (' balance at the end of period', 33), (' lease liabilities', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none balance at end of period , res_fuzz_match = [(' balance at the end of period', 89), (' not later than 1 year', 53), (' leases', 50), (' bank overdraft', 50), ('current', 43), (' current', 43), (' loans from related party', 43), (' secured long-term bank loans', 41), (' lease liabilities - current', 37), ('bank borrowings', 36), (' lease liabilities', 36), (' utilised – bank borrowings', 35)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4, 5, 9], 'score': [80, 89, 80, 89], 'value': [54969.0, 65418.0, 41267.0, 54969.0], 'label': ['None Balance at beginning of period', 'None Balance at end of period', 'None Balance at beginning of period', 'None Balance at end of period'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'bank borrowings', ' utilised – bank borrowings', ' leases', ' not later than 1 year', ' current', ' secured long-term bank loans', ' loans from related party', ' lease liabilities - current', ' lease liabilities', ' bank overdraft', ' balance at the end of period'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' secured long-term bank loans', 44), ('bank borrowings', 33), (' utilised – bank borrowings', 33), (' not later than 1 year', 33), (' loans from related party', 33), (' lease liabilities - current', 33), (' lease liabilities', 33), (' bank overdraft', 33), (' balance at the end of period', 33), ('current', 29), (' current', 29), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none current loans and borrowings nan , res_fuzz_match = [('current', 100), (' current', 100), ('bank borrowings', 82), (' utilised – bank borrowings', 60), (' secured long-term bank loans', 54), (' leases', 50), (' bank overdraft', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' balance at the end of period', 43), (' lease liabilities - current', 42), (' lease liabilities', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings totalloans and borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' leases', 50), (' secured long-term bank loans', 50), (' bank overdraft', 50), (' loans from related party', 48), (' balance at the end of period', 48), (' not later than 1 year', 47), (' lease liabilities', 45), (' lease liabilities - current', 42)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings cash and cash equivalents 10 , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' lease liabilities', 55), (' secured long-term bank loans', 54), (' leases', 50), (' loans from related party', 48), (' not later than 1 year', 47), (' bank overdraft', 43), (' balance at the end of period', 38), (' lease liabilities - current', 37)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current loans and borrowings net borrowings nan , res_fuzz_match = [('bank borrowings', 82), (' utilised – bank borrowings', 60), ('current', 57), (' current', 57), (' secured long-term bank loans', 54), (' loans from related party', 52), (' leases', 50), (' bank overdraft', 50), (' not later than 1 year', 47), (' lease liabilities - current', 47), (' lease liabilities', 45), (' balance at the end of period', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' lease liabilities - current', 45), (' balance at the end of period', 45), (' utilised – bank borrowings', 36), (' secured long-term bank loans', 36), (' lease liabilities', 36), ('current', 29), (' current', 29), (' loans from related party', 29), ('bank borrowings', 27), (' not later than 1 year', 27), (' bank overdraft', 27), (' leases', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 82, 82, 82, 100, 82, 82, 82], 'value': [65418.0, 65418.0, -7748.0, 57670.0, 54969.0, 54969.0, -14212.0, 40757.0], 'label': ['None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan', 'None Current loans and borrowings nan', 'Non-current loans and borrowings Totalloans and borrowings nan', 'Non-current loans and borrowings Cash and cash equivalents 10', 'Non-current loans and borrowings Net borrowings nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('note payable(debt)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('note payable(debt)', 62)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('note payable(debt)', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [104455.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('trade and other payables', 33), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other than micro and small enterprises', 43), ('micro enterprises and small enterprises', 36), ('outstanding dues of micro enterprises and small enterprises', 35), ('accounts payable', 34), ('outstanding dues of creditors other than', 34), ('micro enterprises', 33), ('small enterprises', 33), ('total outstanding due of other creditors other than micro and small', 32), ('trade payable', 30), ('other trade payables', 30), ('outstanding dues of creditors other than micro enterprises and small enterprises', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('trade and other payables', 30), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63), ('accounts payable', 60), ('other than micro and small enterprises', 35), ('outstanding dues of creditors other than', 29), ('total outstanding due of other creditors other than micro and small', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of creditors other than micro enterprises and small enterprises', 26), ('small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('micro enterprises', 47), ('small enterprises', 47), ('accounts payable', 34), ('trade and other payables', 32), ('micro enterprises and small enterprises', 32), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('outstanding dues of creditors other than', 30), ('outstanding dues of micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('trade payable', 22), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('trade and other payables', 14), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['18'], 'line_item_value': [92263.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'trade creditors', ' trade and other payables', ' related party payables', ' trade payables', ' trade payables - related parties', ' trade payables - other parties', ' trade payables', ' amounts payable to controlling entity', ' other trade payables'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('trade creditors', 100), ('current', 57), (' trade payables', 50), (' trade payables', 50), (' other trade payables', 50), (' amounts payable to controlling entity', 43), (' trade and other payables', 42), (' trade payables - related parties', 42), (' trade payables - other parties', 37), (' related party payables', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('current', 43), ('trade creditors', 36), (' trade and other payables', 35), (' related party payables', 35), (' trade payables - related parties', 35), (' amounts payable to controlling entity', 35), (' other trade payables', 35), (' trade payables - other parties', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' other trade payables', 50), ('trade creditors', 38), (' trade and other payables', 38), (' trade payables - other parties', 38), (' amounts payable to controlling entity', 38), ('current', 29), (' related party payables', 25), (' trade payables', 25), (' trade payables - related parties', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('trade creditors', 50), (' trade payables - related parties', 50), (' trade payables - other parties', 50), (' amounts payable to controlling entity', 50), (' other trade payables', 50), ('current', 43), (' trade and other payables', 40), (' related party payables', 40), (' trade payables', 30), (' trade payables', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' trade and other payables', 50), (' trade payables - other parties', 46), (' other trade payables', 44), ('current', 43), ('trade creditors', 43), (' amounts payable to controlling entity', 43), (' trade payables', 42), (' trade payables', 42), (' trade payables - related parties', 38), (' related party payables', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('trade creditors', 79), ('current', 57), (' trade payables - other parties', 51), (' other trade payables', 50), (' trade and other payables', 44), (' amounts payable to controlling entity', 43), (' trade payables - related parties', 37), (' related party payables', 29), (' trade payables', 25), (' trade payables', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' trade and other payables', 100), (' trade payables', 75), (' trade payables', 75), (' trade payables - other parties', 67), (' other trade payables', 67), (' related party payables', 61), ('trade creditors', 57), (' trade payables - related parties', 50), (' amounts payable to controlling entity', 39), ('current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('trade creditors', 45), (' related party payables', 36), (' trade payables', 36), (' trade payables - related parties', 36), (' trade payables - other parties', 36), (' trade payables', 36), (' amounts payable to controlling entity', 36), (' other trade payables', 36), ('current', 29), (' trade and other payables', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 6, 7, 13], 'score': [100, 100, 100, 100], 'value': [75810.0, 92263.0, 79697.0, 104455.0], 'label': ['None Trade creditors', 'None Total trade and other payables', 'None Trade creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 104455.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 104455.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46), ('trade and other payables', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('trade and other payables', 49), ('other financial liabilities', 34), ('other liabilities', 30), ('other current liabilities', 29), ('other current financial liabilities', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46), ('trade and other payables', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63), ('other financial liabilities', 50), ('other liabilities', 43), ('other current financial liabilities', 41), ('other current liabilities', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other current liabilities', 40), ('other current financial liabilities', 37), ('other liabilities', 37), ('other financial liabilities', 34), ('trade and other payables', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('trade and other payables', 14), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13], 'score': 100, 'value': 92263.0, 'line_item_label': ['Current liabilities', 'Trade and other payables'], 'note_numbers': [nan, '18'], 'line_item_value': [0.0, 92263.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['accrued expenses', 'interest accrued'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('accrued expenses', 100), ('interest accrued', 57)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('accrued expenses', 50), ('interest accrued', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [('interest accrued', 50), ('accrued expenses', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [('interest accrued', 43), ('accrued expenses', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('interest accrued', 38), ('accrued expenses', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 8], 'score': [100, 100], 'value': [762.0, 2782.0], 'label': ['None Accrued expenses', 'None Accrued expenses'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities', ' income tax payable', 'tax']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 2289.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [2289.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current tax liabilities', ' income tax payable', 'tax'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities', 71), (' income tax payable', 43), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67), (' income tax payable', 62), ('current tax liabilities', 44)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current tax liabilities', 33), (' income tax payable', 33), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities', 73), (' income tax payable', 48), ('tax', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable', 100), ('tax', 100), ('current tax liabilities', 56)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('tax', 33), ('current tax liabilities', 27), (' income tax payable', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current tax liabilities', 17), (' income tax payable', 17), ('tax', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 1529.0, 'line_item_label': ['Income tax payable'], 'note_numbers': [nan], 'line_item_value': [1529.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 112591.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 104455.0, 6853.0, 1283.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' financial liabilities', 57), (' foreign exchange contract liability', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), ('provisions', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [(' trade and other payables', 49), (' foreign exchange contract liability', 35), (' financial liabilities', 34), (' other financial liabilities', 34), (' deferred revenue', 30), ('other current liabilities', 29), (' other current liabilities', 29), (' employee benefits', 27), (' customer deposits', 21), ('provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' foreign exchange contract liability', 30), (' employee benefits', 26), ('provisions', 9), (' deferred revenue', 7)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12, 13, 17, 18], 'score': 100, 'value': 100887.0, 'line_item_label': ['Current liabilities', 'Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': [nan, '18', '20', '21'], 'line_item_value': [0.0, 92263.0, 6961.0, 1663.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 63), (' rebates', 60), ('current', 57), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 47), (' loans from related party', 47), (' employee benefits - current', 47), (' abandonment and decommissioning costs', 47), (' total current employee benefits', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' ultimate parent entity', 37), (' secured long-term bank loans', 37), (' share of joint venture payables', 37), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none accrued expenses , res_fuzz_match = [('other creditors and accruals', 47), (' abandonment and decommissioning costs', 47), ('current', 43), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 41), (' secured long-term bank loans', 41), (' loans from related party', 41), (' gst payable and accruals', 41), (' employee benefits - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' provisions - current', 36), (' ultimate parent entity', 35), (' other related parties', 35), (' derivative contracts - at fair value', 35), (' current - liability for annual and long service leave', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' employee benefits - payroll', 35), (' provision for associate funding', 35), (' gst', 33), (' make good provisions', 31), (' restructuring', 30), (' arising from service contracts', 29), (' warranty', 25), (' gst payables', 20), (' gst liabilities', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none gst , res_fuzz_match = [(' gst', 100), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' abandonment and decommissioning costs', 50), (' forward exchange contracts', 50), (' rebates', 40), (' other', 40), ('other creditors and accruals', 38), (' ultimate parent entity', 38), (' other related parties', 38), (' other creditors', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' other creditors', 38), (' employee benefits - current', 38), (' contract liabilites - current', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' other creditors', 38), (' restructuring', 38), (' total current employee benefits', 38), ('current', 29), (' gst payable and accruals', 25), (' provisions - current', 25), (' warranty', 25), (' gst payables', 12), (' gst liabilities', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none rebates , res_fuzz_match = [(' rebates', 100), (' other related parties', 60), (' loans from related party', 60), (' other', 60), ('other creditors and accruals', 50), (' other creditors', 50), (' derivative contracts - at fair value', 50), (' secured long-term bank loans', 50), (' other creditors', 50), (' contract liabilites - current', 50), (' share of joint venture payables', 50), (' abandonment and decommissioning costs', 50), (' arising from service contracts', 50), (' forward exchange contracts', 50), (' other creditors', 50), ('current', 43), (' ultimate parent entity', 40), (' loan payable to relayed party under tax funding agreement', 40), (' gst payable and accruals', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' provisions - current', 40), (' employee benefits - payroll', 40), (' provision for associate funding', 40), (' total current employee benefits', 40), (' warranty', 38), (' gst', 33), (' make good provisions', 30), (' restructuring', 30), (' gst payables', 21), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [(' forward exchange contracts', 100), (' arising from service contracts', 60), (' rebates', 60), (' other', 60), (' abandonment and decommissioning costs', 50), (' derivative contracts - at fair value', 46), (' current - liability for annual and long service leave', 45), ('current', 43), (' loans from related party', 43), ('other creditors and accruals', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' restructuring', 40), (' employee benefits - current', 39), (' warranty', 38), (' ultimate parent entity', 37), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' provisions - current', 36), (' share of joint venture payables', 36), (' provision for associate funding', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 34), (' total current employee benefits', 34), (' gst', 33), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payables', 30), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none other creditors , res_fuzz_match = [(' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), ('other creditors and accruals', 74), (' other related parties', 65), (' rebates', 60), ('current', 57), (' restructuring', 50), (' loans from related party', 47), (' employee benefits - current', 47), (' provisions - current', 43), (' total current employee benefits', 43), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' make good provisions', 38), (' warranty', 38), (' loan payable to relayed party under tax funding agreement', 37), (' secured long-term bank loans', 37), (' contract liabilites - current', 37), (' abandonment and decommissioning costs', 37), (' provision for associate funding', 37), (' forward exchange contracts', 37), (' gst', 33), (' ultimate parent entity', 32), (' gst payable and accruals', 21), (' gst payables', 20), (' gst liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = none total trade and other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 60), (' forward exchange contracts', 50), (' total current employee benefits', 49), (' loan payable to relayed party under tax funding agreement', 48), (' other related parties', 47), ('other creditors and accruals', 46), (' gst payable and accruals', 45), (' current - liability for annual and long service leave', 45), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' derivative contracts - at fair value', 42), (' secured long-term bank loans', 42), (' employee benefits - payroll', 41), (' gst liabilities', 40), (' rebates', 40), (' abandonment and decommissioning costs', 38), (' make good provisions', 38), (' warranty', 38), (' ultimate parent entity', 37), (' provisions - current', 36), (' arising from service contracts', 36), (' employee benefits - current', 35), (' gst', 33), (' provision for associate funding', 32), (' restructuring', 30), ('current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 4, 5, 6, 9, 10, 11, 12, 13], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [2148.0, 1977.0, 252.0, 11314.0, 92263.0, 2280.0, 1666.0, 0.0, 18030.0, 104455.0], 'label': ['None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables', 'None GST', 'None Rebates', 'None Forward exchange contracts', 'None Other creditors', 'None Total trade and other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), ('other creditors and accruals', 44), (' ultimate parent entity', 44), (' other creditors', 44), (' loan payable to relayed party under tax funding agreement', 44), (' secured long-term bank loans', 44), (' other creditors', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' forward exchange contracts', 44), (' other creditors', 44), (' total current employee benefits', 44), (' rebates', 40), (' other', 40), (' other related parties', 33), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' gst payable and accruals', 33), (' current - liability for annual and long service leave', 33), (' provisions - current', 33), (' share of joint venture payables', 33), (' gst payables', 33), (' employee benefits - payroll', 33), (' arising from service contracts', 33), (' make good provisions', 33), (' gst liabilities', 33), ('current', 29), (' provision for associate funding', 22), (' restructuring', 22), (' warranty', 12), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [('current', 100), (' total current employee benefits', 68), (' current - liability for annual and long service leave', 63), (' rebates', 60), (' ultimate parent entity', 58), (' warranty', 50), (' other related parties', 47), (' secured long-term bank loans', 47), (' contract liabilites - current', 47), (' share of joint venture payables', 47), (' other creditors', 44), (' other creditors', 44), (' other creditors', 44), (' loans from related party', 43), (' provisions - current', 43), (' employee benefits - current', 42), (' employee benefits - payroll', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' gst liabilities', 40), (' other', 40), ('other creditors and accruals', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' gst', 33), (' abandonment and decommissioning costs', 32), (' gst payables', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('current', 100), (' other', 100), (' other creditors', 69), (' other creditors', 69), (' other creditors', 69), (' total current employee benefits', 65), (' rebates', 60), (' ultimate parent entity', 58), (' secured long-term bank loans', 55), (' current - liability for annual and long service leave', 55), (' other related parties', 53), (' restructuring', 50), (' warranty', 50), ('other creditors and accruals', 45), (' share of joint venture payables', 45), (' employee benefits - current', 43), (' provisions - current', 43), (' loans from related party', 40), (' contract liabilites - current', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' forward exchange contracts', 40), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' gst', 33), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' gst payables', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [('current', 100), (' total current employee benefits', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 65), (' provisions - current', 64), (' rebates', 60), (' contract liabilites - current', 56), (' other creditors', 50), (' other creditors', 50), (' other creditors', 50), (' warranty', 50), (' ultimate parent entity', 49), (' current - liability for annual and long service leave', 49), (' share of joint venture payables', 48), (' other related parties', 47), (' loans from related party', 43), (' secured long-term bank loans', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' gst', 33), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 82), (' provisions - current', 78), (' total current employee benefits', 73), (' employee benefits - current', 64), (' contract liabilites - current', 64), (' rebates', 60), ('other creditors and accruals', 55), (' ultimate parent entity', 55), (' other related parties', 55), (' warranty', 50), (' derivative contracts - at fair value', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' employee benefits - payroll', 45), (' other creditors', 38), (' other creditors', 38), (' other creditors', 38), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' other', 20), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [('current', 71), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' secured long-term bank loans', 47), (' employee benefits - current', 47), (' current - liability for annual and long service leave', 47), (' loans from related party', 43), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' arising from service contracts', 42), (' forward exchange contracts', 42), (' rebates', 40), (' other', 40), ('other creditors and accruals', 37), (' other creditors', 37), (' derivative contracts - at fair value', 37), (' loan payable to relayed party under tax funding agreement', 37), (' other creditors', 37), (' other creditors', 37), (' gst', 33), (' provision for associate funding', 32), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 26), (' gst payables', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total current employee benefits', 90), (' employee benefits - payroll', 81), ('current', 71), (' employee benefits - current', 65), (' contract liabilites - current', 48), (' share of joint venture payables', 48), (' ultimate parent entity', 47), (' other creditors', 43), (' other creditors', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' loans from related party', 38), (' forward exchange contracts', 38), (' warranty', 38), (' gst payable and accruals', 36), (' other related parties', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' gst liabilities', 30), (' arising from service contracts', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' gst', 67), (' abandonment and decommissioning costs', 55), (' loan payable to relayed party under tax funding agreement', 45), (' total current employee benefits', 45), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' ultimate parent entity', 36), (' other creditors', 36), (' secured long-term bank loans', 36), (' other creditors', 36), (' gst payable and accruals', 36), (' employee benefits - current', 36), (' current - liability for annual and long service leave', 36), (' provisions - current', 36), (' contract liabilites - current', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' restructuring', 30), ('current', 29), (' other related parties', 29), (' loans from related party', 29), (' derivative contracts - at fair value', 27), (' share of joint venture payables', 27), (' employee benefits - payroll', 27), (' make good provisions', 27), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 6, 7, 8, 9, 10, 11, 13], 'score': [100, 100, 100, 100, 100, 90, 100, 100, 100, 100, 100, 90], 'value': [5232.0, 1729.0, 6961.0, 2022.0, 0.0, 633.0, 5146.0, 1707.0, 6853.0, 2021.0, 0.0, 572.0], 'label': ['Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits', 'Current Leave entitlements', 'Current Other entitlements', 'Current Total current employee benefits', 'Current nan', 'Current nan', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current', 'other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = restruct- uring , res_fuzz_match = [(' restructuring', 90), (' gst', 67), (' rebates', 60), ('current', 57), (' derivative contracts - at fair value', 50), (' employee benefits - current', 50), (' provisions - current', 50), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' other related parties', 42), (' other creditors', 42), (' loan payable to relayed party under tax funding agreement', 42), (' secured long-term bank loans', 42), (' loans from related party', 42), (' other creditors', 42), (' current - liability for annual and long service leave', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' arising from service contracts', 42), (' other creditors', 42), (' total current employee benefits', 42), (' other', 40), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' warranty', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = warranty , res_fuzz_match = [(' warranty', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), ('current', 57), (' employee benefits - current', 53), (' provisions - current', 53), (' ultimate parent entity', 50), (' other related parties', 50), (' derivative contracts - at fair value', 50), (' loan payable to relayed party under tax funding agreement', 50), (' loans from related party', 50), (' contract liabilites - current', 50), (' total current employee benefits', 50), ('other creditors and accruals', 38), (' other creditors', 38), (' secured long-term bank loans', 38), (' other creditors', 38), (' gst payable and accruals', 38), (' share of joint venture payables', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' forward exchange contracts', 38), (' other creditors', 38), (' gst', 33), (' gst payables', 25), (' employee benefits - payroll', 25), (' abandonment and decommissioning costs', 25), (' make good provisions', 25), (' gst liabilities', 25), (' restructuring', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = other , res_fuzz_match = [('other creditors and accruals', 100), (' other related parties', 100), (' other creditors', 100), (' other creditors', 100), (' other creditors', 100), (' other', 100), (' derivative contracts - at fair value', 60), (' secured long-term bank loans', 60), (' contract liabilites - current', 60), (' forward exchange contracts', 60), (' loan payable to relayed party under tax funding agreement', 40), (' loans from related party', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' arising from service contracts', 40), (' make good provisions', 40), (' restructuring', 40), (' total current employee benefits', 40), ('current', 20), (' ultimate parent entity', 20), (' gst payable and accruals', 20), (' provisions - current', 20), (' gst payables', 20), (' gst liabilities', 20), (' rebates', 20), (' warranty', 20), (' gst', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2022 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 2022 , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 71), (' total current employee benefits', 64), (' rebates', 60), (' secured long-term bank loans', 52), ('other creditors and accruals', 50), (' employee benefits - current', 50), (' provisions - current', 50), (' contract liabilites - current', 50), (' warranty', 50), (' other related parties', 44), (' ultimate parent entity', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' share of joint venture payables', 43), (' employee benefits - payroll', 43), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 36), (' loan payable to relayed party under tax funding agreement', 36), (' abandonment and decommissioning costs', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' gst', 33), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 14)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 1 january 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 59), (' secured long-term bank loans', 55), (' total current employee benefits', 55), ('other creditors and accruals', 51), (' warranty', 50), (' other related parties', 47), (' gst payable and accruals', 45), (' loans from related party', 43), (' provisions - current', 43), (' loan payable to relayed party under tax funding agreement', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' gst payables', 40), (' gst liabilities', 40), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' forward exchange contracts', 36), (' provision for associate funding', 33), (' gst', 33), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' abandonment and decommissioning costs', 27), (' arising from service contracts', 27), (' make good provisions', 25), (' other', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current provided during the year , res_fuzz_match = [('current', 100), (' provisions - current', 71), (' rebates', 60), (' other', 60), (' total current employee benefits', 55), (' current - liability for annual and long service leave', 50), (' warranty', 50), (' loans from related party', 48), (' other related parties', 47), (' share of joint venture payables', 44), (' make good provisions', 44), (' other creditors', 43), (' loan payable to relayed party under tax funding agreement', 43), (' other creditors', 43), (' provision for associate funding', 43), (' other creditors', 43), (' contract liabilites - current', 40), (' gst payables', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 37), (' gst payable and accruals', 36), (' arising from service contracts', 36), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' abandonment and decommissioning costs', 31), (' gst liabilities', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current paid during the year , res_fuzz_match = [('current', 100), (' rebates', 60), (' other', 60), (' current - liability for annual and long service leave', 54), (' total current employee benefits', 53), (' provisions - current', 50), (' warranty', 50), (' ultimate parent entity', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 46), (' contract liabilites - current', 44), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' other creditors', 43), (' share of joint venture payables', 42), (' gst payable and accruals', 41), ('other creditors and accruals', 40), (' gst payables', 40), (' gst liabilities', 40), (' derivative contracts - at fair value', 38), (' employee benefits - payroll', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 34), (' arising from service contracts', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' make good provisions', 31), (' restructuring', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current transfers , res_fuzz_match = [('current', 100), (' current - liability for annual and long service leave', 62), (' rebates', 60), (' total current employee benefits', 56), (' secured long-term bank loans', 50), (' restructuring', 50), (' warranty', 50), (' other related parties', 48), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loans from related party', 44), (' employee benefits - current', 44), (' contract liabilites - current', 44), (' provisions - current', 43), (' ultimate parent entity', 40), (' other', 40), (' loan payable to relayed party under tax funding agreement', 38), (' share of joint venture payables', 38), (' employee benefits - payroll', 38), (' forward exchange contracts', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst', 33), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' arising from service contracts', 31), (' gst payables', 30), (' gst liabilities', 30), (' gst payable and accruals', 25), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current balance at 31 december 2021 , res_fuzz_match = [('current', 100), (' rebates', 60), (' current - liability for annual and long service leave', 57), (' total current employee benefits', 57), (' warranty', 50), (' secured long-term bank loans', 48), ('other creditors and accruals', 43), (' loan payable to relayed party under tax funding agreement', 43), (' provisions - current', 43), (' abandonment and decommissioning costs', 43), (' gst payables', 40), (' gst liabilities', 40), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' ultimate parent entity', 37), (' other related parties', 35), (' employee benefits - current', 33), (' share of joint venture payables', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' restructuring', 30), (' other creditors', 29), (' derivative contracts - at fair value', 29), (' loans from related party', 29), (' other creditors', 29), (' employee benefits - payroll', 29), (' arising from service contracts', 29), (' other creditors', 29), (' other', 20), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' total current employee benefits', 100), ('other creditors and accruals', 60), (' derivative contracts - at fair value', 60), (' contract liabilites - current', 60), (' arising from service contracts', 60), (' forward exchange contracts', 60), (' other', 44), (' ultimate parent entity', 40), (' other related parties', 40), (' other creditors', 40), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' loans from related party', 40), (' other creditors', 40), (' gst payable and accruals', 40), (' current - liability for annual and long service leave', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' employee benefits - payroll', 40), (' abandonment and decommissioning costs', 40), (' provision for associate funding', 40), (' gst liabilities', 40), (' other creditors', 40), (' restructuring', 40), (' gst', 33), ('current', 20), (' employee benefits - current', 20), (' provisions - current', 20), (' make good provisions', 20), (' rebates', 20), (' warranty', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 9, 10, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 16, 17, 17, 18, 18, 19, 19, 20, 20, 21, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 31, 32, 32, 33, 33, 34, 34, 35, 35], 'score': [100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [84.0, 84.0, 65.0, 65.0, -79.0, -79.0, 70.0, 70.0, 0.0, 0.0, 113.0, 113.0, -396.0, -396.0, 367.0, 367.0, 84.0, 84.0, 199.0, 199.0, 0.0, 0.0, -6.0, -6.0, 193.0, 193.0, 625.0, 625.0, 0.0, 0.0, -59.0, -59.0, -367.0, -367.0, 199.0, 199.0, 1000.0, 1000.0, 400.0, 400.0, 0.0, 0.0, 1400.0, 1400.0, 1000.0, 1000.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 1000.0, 1000.0, 1283.0, 1283.0, 465.0, 465.0, -85.0, -85.0, 1663.0, 1663.0, 1625.0, 1625.0, 113.0, 113.0, -455.0, -455.0, 0.0, 0.0, 1283.0, 1283.0], 'label': ['Current Balance at 1 January 2022', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Balance at 31 2022', 'Restruct- uring', 'Current Balance at 1 January 2021', 'Restruct- uring', 'Current Provided during the year', 'Restruct- uring', 'Current Paid during the year', 'Restruct- uring', 'Current Transfers', 'Restruct- uring', 'Current Balance at 31 December 2021', 'Restruct- uring', 'Current Balance at 1 January 2022', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Balance at 31 2022', 'Warranty', 'Current Balance at 1 January 2021', 'Warranty', 'Current Provided during the year', 'Warranty', 'Current Paid during the year', 'Warranty', 'Current Transfers', 'Warranty', 'Current Balance at 31 December 2021', 'Warranty', 'Current Balance at 1 January 2022', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Balance at 31 2022', 'Other', 'Current Balance at 1 January 2021', 'Other', 'Current Provided during the year', 'Other', 'Current Paid during the year', 'Other', 'Current Transfers', 'Other', 'Current Balance at 31 December 2021', 'Other', 'Current Balance at 1 January 2022', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Balance at 31 2022', 'Total', 'Current Balance at 1 January 2021', 'Total', 'Current Provided during the year', 'Total', 'Current Paid during the year', 'Total', 'Current Transfers', 'Total', 'Current Balance at 31 December 2021', 'Total'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = loans and borrowings , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('current liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('current liabilities', 34)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['leases', ' secured finance debt', ' bank loan', ' lease liabilities', ' lease liability', ' lease liabilities - non-current', ' non current', 'later than 1 year', 'not later than 5 years']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings', ' borrowings', ' lease liabilities', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 36), (' loans and borrowings', 36), (' borrowings', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities', 100), (' lease liability', 100), ('interest bearing loans and borrowings', 45), (' loans and borrowings', 45), (' borrowings', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities', 45), (' lease liability', 45), ('interest bearing loans and borrowings', 40), (' loans and borrowings', 27), (' borrowings', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' lease liabilities', 64), (' lease liability', 64), ('interest bearing loans and borrowings', 42), (' loans and borrowings', 40), (' borrowings', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), (' lease liabilities', 33), (' loans and borrowings', 33), (' lease liability', 33), (' borrowings', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 33), ('(bond)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 32), ('(bond)', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities', 'interest bearing loans and borrowings']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities', 'total deferred tax (assets) / liabilities']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 22532.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [22532.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['lease liabilities', 'interest bearing loans and borrowings'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('interest bearing loans and borrowings', 45)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('lease liabilities', 45), ('interest bearing loans and borrowings', 40)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('lease liabilities', 64), ('interest bearing loans and borrowings', 42)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('interest bearing loans and borrowings', 44), ('lease liabilities', 33)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 17695.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['14'], 'line_item_value': [17695.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 572.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 572.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other long term liabilities', 'trade and other payables', ' financial liabilities', ' employee benefits', ' provisions', ' other financial liabilities', ' other non-current liabilities', ' provision for associate funding'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities', 82), ('other long term liabilities', 61), (' other financial liabilities', 53), (' financial liabilities', 43), (' provision for associate funding', 33), ('trade and other payables', 28), (' employee benefits', 28), (' provisions', 10)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), (' other financial liabilities', 52), (' other non-current liabilities', 39), ('other long term liabilities', 36), ('trade and other payables', 30), (' provision for associate funding', 24), (' employee benefits', 23), (' provisions', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), (' other financial liabilities', 34), ('other long term liabilities', 32), ('trade and other payables', 32), (' other non-current liabilities', 29), (' financial liabilities', 28), (' provision for associate funding', 22), (' provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [(' other non-current liabilities', 72), ('other long term liabilities', 59), (' other financial liabilities', 51), (' financial liabilities', 36), ('trade and other payables', 34), (' employee benefits', 29), (' provision for associate funding', 29), (' provisions', 8)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' employee benefits', 33), ('other long term liabilities', 32), (' provision for associate funding', 32), (' other non-current liabilities', 28), ('trade and other payables', 26), (' other financial liabilities', 21), (' financial liabilities', 17), (' provisions', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [20, 22], 'score': 100, 'value': 633.0, 'line_item_label': ['Non-current liabilities', 'Employee benefits'], 'note_numbers': [nan, '20'], 'line_item_value': [0.0, 633.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables', ' electricity derivatives at fair value through oci', ' derivative contracts - at fair value', ' employee benefits - non current', ' non-current - liability for long-service leave', ' provisions - non-current', ' contract liabilites - non-current', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' make good provisions', ' trade payables - related parties', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 56), (' electricity derivatives at fair value through oci', 44), (' contract liabilites - non-current', 44), (' trade payables - related parties', 44), ('non-current trade and other payables', 33), (' derivative contracts - at fair value', 33), (' employee benefits - non current', 33), (' non-current - liability for long-service leave', 33), (' employee benefits - payroll', 33), (' make good provisions', 33), (' total non-current employee benefits', 33), (' provisions - non-current', 22), (' provision for associate funding', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 58), ('non-current trade and other payables', 47), (' non-current - liability for long-service leave', 47), (' electricity derivatives at fair value through oci', 42), (' employee benefits - non current', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' trade payables - related parties', 38), (' derivative contracts - at fair value', 37), (' abandonment and decommissioning costs', 32), (' provisions - non-current', 29), (' provision for associate funding', 26), (' make good provisions', 25)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current other entitlements , res_fuzz_match = [('non-current trade and other payables', 60), (' total non-current employee benefits', 60), (' employee benefits - non current', 47), (' non-current - liability for long-service leave', 45), (' electricity derivatives at fair value through oci', 40), (' employee benefits - payroll', 40), (' derivative contracts - at fair value', 35), (' contract liabilites - non-current', 35), (' trade payables - related parties', 35), (' make good provisions', 31), (' abandonment and decommissioning costs', 30), (' provision for associate funding', 30), (' provisions - non-current', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current total current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 90), (' employee benefits - payroll', 81), (' employee benefits - non current', 56), (' trade payables - related parties', 46), (' non-current - liability for long-service leave', 44), (' contract liabilites - non-current', 44), ('non-current trade and other payables', 43), (' provisions - non-current', 43), (' derivative contracts - at fair value', 38), (' provision for associate funding', 32), (' abandonment and decommissioning costs', 31), (' make good provisions', 31), (' electricity derivatives at fair value through oci', 29)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = current nan , res_fuzz_match = [(' employee benefits - non current', 64), ('non-current trade and other payables', 55), (' non-current - liability for long-service leave', 55), (' derivative contracts - at fair value', 45), (' employee benefits - payroll', 45), (' trade payables - related parties', 45), (' total non-current employee benefits', 45), (' electricity derivatives at fair value through oci', 36), (' provisions - non-current', 36), (' contract liabilites - non-current', 36), (' abandonment and decommissioning costs', 36), (' provision for associate funding', 27), (' make good provisions', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current leave entitlements , res_fuzz_match = [(' total non-current employee benefits', 68), (' non-current - liability for long-service leave', 63), ('non-current trade and other payables', 58), (' employee benefits - non current', 53), (' electricity derivatives at fair value through oci', 42), (' contract liabilites - non-current', 42), (' employee benefits - payroll', 42), (' abandonment and decommissioning costs', 42), (' derivative contracts - at fair value', 37), (' trade payables - related parties', 37), (' provision for associate funding', 32), (' provisions - non-current', 29), (' make good provisions', 19)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = non-current total non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits', 100), (' employee benefits - payroll', 81), (' provisions - non-current', 64), ('non-current trade and other payables', 57), (' employee benefits - non current', 56), (' non-current - liability for long-service leave', 56), (' contract liabilites - non-current', 56), (' derivative contracts - at fair value', 38), (' trade payables - related parties', 38), (' electricity derivatives at fair value through oci', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 32), (' make good provisions', 31)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' abandonment and decommissioning costs', 55), (' electricity derivatives at fair value through oci', 36), (' non-current - liability for long-service leave', 36), (' contract liabilites - non-current', 36), (' provision for associate funding', 36), (' trade payables - related parties', 36), (' total non-current employee benefits', 36), ('non-current trade and other payables', 27), (' derivative contracts - at fair value', 27), (' employee benefits - non current', 27), (' provisions - non-current', 27), (' employee benefits - payroll', 27), (' make good provisions', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6, 9, 13], 'score': [90, 100, 90, 100], 'value': [6961.0, 633.0, 6853.0, 572.0], 'label': ['Current Total current employee benefits', 'Non-current Total non-current employee benefits', 'Current Total current employee benefits', 'Non-current Total non-current employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('minority interest', 41)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term liabilities', 39)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = totalnon-current liabilities , res_fuzz_match = [('long term liabilities', 63)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument', 'contributed equity', ' issued capital', ' share capital ', 'contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('contributed equity', 55), ('contributed equity', 55), ('equity share capital', 50), ('perpetual equity instrument', 39), (' issued capital', 38), ('share capital', 24), (' share capital ', 24), ('common stock', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital', 100), ('share capital', 67), (' share capital ', 67), ('equity share capital', 57), ('contributed equity', 38), ('contributed equity', 38), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), (' share capital ', 24), ('contributed equity', 18), ('contributed equity', 18), (' issued capital', 12), ('common stock', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' issued capital', 36), ('common stock', 33), ('equity share capital', 27), ('share capital', 26), (' share capital ', 26), ('contributed equity', 21), ('contributed equity', 21), ('perpetual equity instrument', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('equity share capital', 43), ('perpetual equity instrument', 42), ('contributed equity', 36), ('contributed equity', 36), ('share capital', 27), (' share capital ', 27), ('common stock', 24), (' issued capital', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [27], 'score': 100, 'value': 1871914.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['22'], 'line_item_value': [1871914.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['ordinary shares', ' fully paid ordinary shares', ' issued and paid-up share capital', ' retained profits', ' ordinary shares fully paid', ' total issued capital'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('ordinary shares', 33), (' fully paid ordinary shares', 33), (' issued and paid-up share capital', 33), (' ordinary shares fully paid', 33), (' total issued capital', 33), (' retained profits', 22)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = issued capital issued and paid-up share capital 2,107,142,649 ordinary shares urdener2u4h-240/42619 , res_fuzz_match = [('ordinary shares', 100), (' issued and paid-up share capital', 100), (' fully paid ordinary shares', 72), (' ordinary shares fully paid', 69), (' total issued capital', 56), (' retained profits', 54)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = issued capital total issued capital , res_fuzz_match = [(' total issued capital', 100), (' issued and paid-up share capital', 59), (' retained profits', 46), (' fully paid ordinary shares', 40), ('ordinary shares', 36), (' ordinary shares fully paid', 36)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [('ordinary shares', 36), (' fully paid ordinary shares', 36), (' issued and paid-up share capital', 36), (' ordinary shares fully paid', 36), (' total issued capital', 36), (' retained profits', 18)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 100, 100, 100], 'value': [1871914.0, 1871914.0, 1871914.0, 1871914.0], 'label': ['Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital', 'Issued capital Issued and paid-up share capital 2,107,142,649 ordinary shares URdener2U4H-240/42619', 'Issued capital Total issued capital'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('reserves and surplus', 28), ('other equity', 25), ('additional paid in capital', 21), ('additional paid up capital', 21), ('other reserves', 17)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('other reserves', 29), ('additional paid in capital', 28), ('additional paid up capital', 28), ('reserves and surplus', 27)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve', ' cash flow hedge reserve', ' reserve in joint venture', ' other reserve', ' total other reserves']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5761.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5761.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves', 17), ('other reserves ', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' reserves', 12)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves', 100), ('other reserves ', 67)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('other reserves ', 17), (' reserves', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other reserves ', 29), (' reserves', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [28], 'score': 100, 'value': 5450.0, 'line_item_label': ['Reserves'], 'note_numbers': ['23'], 'line_item_value': [5450.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves', 'accumulated losses', 'retained earnings and dividends on equity instruments']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1742610.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1742610.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus', 'retained earnings', ' accumulated losses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('retained earnings', 35), ('reserves surplus', 21), (' accumulated losses', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' accumulated losses', 36), ('retained earnings', 29), ('other equity', 27), ('reserves surplus', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33), ('retained earnings', 24), (' accumulated losses', 11)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [(' accumulated losses', 100), ('other equity', 25), ('retained earnings', 17), ('reserves surplus', 16)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('other equity', 35), ('reserves surplus', 26), (' accumulated losses', 26), ('retained earnings', 24)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [29], 'score': 100, 'value': -1715016.0, 'line_item_label': ['Accumulated losses'], 'note_numbers': ['23'], 'line_item_value': [-1715016.0]}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest', 'minority interest', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('minority interest', 30), ('noncontrolling interest', 16), (' non-controlling interest', 16), ('non controlling interest', 15)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('minority interest', 33), ('noncontrolling interest', 21), (' non-controlling interest', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('minority interest', 40), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('non controlling interest', 23)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('non controlling interest', 25), ('minority interest', 15), ('minority interest', 15), ('noncontrolling interest', 13), (' non-controlling interest', 13)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('non controlling interest', 32), ('noncontrolling interest', 32), (' non-controlling interest', 32), ('minority interest', 26), ('minority interest', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = accumulated losses , res_fuzz_match = [('shareholders equity(a)', 21)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - txt_particular = total equity attributable to holders of ordinary shares of spicers limited , res_fuzz_match = [('shareholders equity(a)', 38)]
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:33+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:33+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:33+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors']
2023-07-24 12:18:33+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:33+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-07-24 12:18:33+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 69253.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [69253.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled', 'trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade and other receivables', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('unbilled', 60), ('trade and other receivables', 54), ('account receivables', 50), ('trade receivables', 50), ('receivable', 50), ('billed', 50), ('government subsidies receivable', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade and other receivables', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('trade and other receivables', 33), ('billed', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('trade and other receivables', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('trade receivables', 50), ('trade and other receivables', 44), ('account receivables', 43), ('government subsidies receivable', 43), ('unbilled', 40), ('receivable', 33), ('billed', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 30), ('trade and other receivables', 27), ('trade receivables', 26), ('billed', 25), ('unbilled', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('trade receivables', 35), ('account receivables', 33), ('government subsidies receivable', 33), ('trade and other receivables', 33), ('unbilled', 20), ('receivable', 17), ('billed', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('trade and other receivables', 40), ('trade receivables', 35), ('government subsidies receivable', 33), ('receivable', 33), ('account receivables', 22), ('billed', 0), ('unbilled', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 75882.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['11'], 'line_item_value': [75882.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['current', 'trade receivables', ' related party receivables', ' other debtors', ' share of joint venture receivables', ' net trade debtors'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = as at31 december $000 , res_fuzz_match = [('trade receivables', 56), (' related party receivables', 56), (' other debtors', 56), (' net trade debtors', 56), (' share of joint venture receivables', 44), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none trade debtors , res_fuzz_match = [(' net trade debtors', 94), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 41), (' related party receivables', 35), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none provision for impairment losses , res_fuzz_match = [(' net trade debtors', 44), ('trade receivables', 33), (' related party receivables', 33), (' other debtors', 33), (' share of joint venture receivables', 32), ('current', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none net trade debtors , res_fuzz_match = [(' net trade debtors', 100), (' other debtors', 75), ('trade receivables', 58), (' share of joint venture receivables', 43), (' related party receivables', 39), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none accrued rebates , res_fuzz_match = [('current', 57), (' net trade debtors', 52), (' related party receivables', 44), (' share of joint venture receivables', 44), (' other debtors', 43), ('trade receivables', 35)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none forward exchange contracts , res_fuzz_match = [('trade receivables', 50), (' net trade debtors', 50), ('current', 43), (' other debtors', 42), (' related party receivables', 39), (' share of joint venture receivables', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none other debtors and prepayments , res_fuzz_match = [(' other debtors', 100), (' net trade debtors', 75), ('trade receivables', 50), (' share of joint venture receivables', 44), (' related party receivables', 40), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = none total trade and other receivables , res_fuzz_match = [('trade receivables', 75), (' net trade debtors', 62), (' related party receivables', 61), (' share of joint venture receivables', 60), (' other debtors', 58), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = asat31 december $000 , res_fuzz_match = [(' related party receivables', 55), ('trade receivables', 45), (' other debtors', 45), (' share of joint venture receivables', 45), (' net trade debtors', 45), ('current', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 7, 9, 12], 'score': [94, 100, 100, 94, 100, 100], 'value': [75442.0, 73356.0, 1962.0, 68077.0, 66573.0, 1721.0], 'label': ['None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments', 'None Trade debtors', 'None Net trade debtors', 'None Other debtors and prepayments'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-07-24 12:18:34+0530 - sLogger - ERROR - error occured: cannot concatenate object of type '<class 'list'>'; only Series and DataFrame objs are valid
2023-07-24 12:18:34+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods', ' LNG', ' Condensate', ' Domgas', ' Feed gas income', ' Gas transportation income', ' Sale of goods - Cars', ' Sale of goods - Motorcycles', ' Sale of goods - Marine', ' Sale of goods - Spareparts', ' Total Revenue', ' Goods sold to customer from warehouse', ' Goods sold to customer direct from supplier']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 367104.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [367104.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business', 'Revenue from contract with customers', ' Sale of coal', ' Sales revenue', ' Revenue'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('revenue from operations', 43), ('net sales', 40), (' Sale of coal', 38), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 35), ('sale of products', 33), ('transmission and distribution business', 30), ('from trading business', 30), (' Revenue', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue', 100), (' Sales revenue', 71), ('revenue from operations', 55), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), (' Sale of coal', 13), ('transmission and distribution business', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('net sales', 38), (' Sale of coal', 37), ('revenue from contracts with customers', 36), ('Revenue from contract with customers', 36), (' Sales revenue', 34), ('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('transmission and distribution business', 26), (' Revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 36), ('sale of products', 33), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 25), (' Sale of coal', 19), (' Sales revenue', 17), (' Revenue', 11), ('net sales', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('from trading business', 46), ('revenue from operations', 44), (' Sale of coal', 40), ('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('net sales', 32), (' Sales revenue', 27), ('sale of products', 26), ('transmission and distribution business', 21), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Sale of coal', 43), ('revenue from operations', 40), ('sale of products', 38), ('net sales', 36), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('from trading business', 34), ('transmission and distribution business', 24), (' Sales revenue', 24), (' Revenue', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('transmission and distribution business', 67), ('revenue from contracts with customers', 35), ('Revenue from contract with customers', 35), ('sale of products', 31), ('net sales', 29), ('from trading business', 29), (' Sale of coal', 28), (' Sales revenue', 26), ('revenue from operations', 17), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('net sales', 70), (' Sales revenue', 54), ('sale of products', 52), (' Sale of coal', 50), ('transmission and distribution business', 37), ('from trading business', 33), (' Revenue', 29), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('Revenue from contract with customers', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue', 43), ('from trading business', 37), ('sale of products', 33), (' Revenue', 33), ('net sales', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('Revenue from contract with customers', 27), ('transmission and distribution business', 25), (' Sale of coal', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('revenue from operations', 68), ('from trading business', 49), ('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), (' Sale of coal', 32), (' Sales revenue', 30), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), ('net sales', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal', 42), ('revenue from contracts with customers', 38), ('Revenue from contract with customers', 38), ('sale of products', 37), ('net sales', 35), ('from trading business', 33), ('revenue from operations', 26), ('transmission and distribution business', 23), (' Sales revenue', 23), (' Revenue', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('from trading business', 45), ('sale of products', 43), ('revenue from operations', 38), ('transmission and distribution business', 36), ('net sales', 33), ('revenue from contracts with customers', 29), ('Revenue from contract with customers', 29), (' Sale of coal', 24), (' Sales revenue', 22), (' Revenue', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('net sales', 46), ('from trading business', 36), (' Sales revenue', 34), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('transmission and distribution business', 30), ('revenue from operations', 29), ('sale of products', 27), (' Revenue', 25), (' Sale of coal', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 54), ('Revenue from contract with customers', 54), ('from trading business', 41), ('transmission and distribution business', 31), ('net sales', 25), (' Sale of coal', 24), (' Sales revenue', 23), ('sale of products', 22), (' Revenue', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('revenue from operations', 39), ('sale of products', 37), ('transmission and distribution business', 37), ('net sales', 35), ('revenue from contracts with customers', 34), ('Revenue from contract with customers', 34), ('from trading business', 33), (' Sale of coal', 33), (' Sales revenue', 31), (' Revenue', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('revenue from contracts with customers', 48), ('Revenue from contract with customers', 48), ('from trading business', 44), ('revenue from operations', 43), ('transmission and distribution business', 35), ('sale of products', 26), ('net sales', 23), (' Sales revenue', 22), (' Sale of coal', 18), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('from trading business', 42), ('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('revenue from operations', 36), ('transmission and distribution business', 36), ('sale of products', 30), (' Sales revenue', 21), (' Revenue', 18), ('net sales', 17), (' Sale of coal', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('revenue from operations', 46), ('sale of products', 39), ('from trading business', 35), ('revenue from contracts with customers', 31), ('Revenue from contract with customers', 31), ('transmission and distribution business', 30), (' Sales revenue', 27), (' Revenue', 24), ('net sales', 22), (' Sale of coal', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('revenue from contracts with customers', 41), ('Revenue from contract with customers', 41), ('from trading business', 38), ('revenue from operations', 37), (' Sales revenue', 36), ('sale of products', 29), (' Revenue', 29), ('transmission and distribution business', 28), (' Sale of coal', 26), ('net sales', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 39), ('Revenue from contract with customers', 39), ('transmission and distribution business', 36), ('revenue from operations', 33), ('from trading business', 31), ('sale of products', 25), ('net sales', 23), (' Sale of coal', 23), (' Sales revenue', 22), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('transmission and distribution business', 46), ('revenue from contracts with customers', 32), ('Revenue from contract with customers', 32), ('revenue from operations', 31), (' Sales revenue', 30), ('from trading business', 28), (' Sale of coal', 27), ('net sales', 24), ('sale of products', 22), (' Revenue', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('transmission and distribution business', 33), ('revenue from operations', 30), ('from trading business', 28), ('sale of products', 26), (' Sale of coal', 24), (' Sales revenue', 23), ('net sales', 21), (' Revenue', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('Revenue from contract with customers', 40), ('from trading business', 35), ('revenue from operations', 34), ('transmission and distribution business', 29), ('sale of products', 27), (' Sales revenue', 27), ('net sales', 21), (' Sale of coal', 21), (' Revenue', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 37), ('Revenue from contract with customers', 37), ('from trading business', 34), ('sale of products', 33), ('revenue from operations', 31), (' Sales revenue', 30), ('net sales', 27), (' Sale of coal', 27), ('transmission and distribution business', 25), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('revenue from contracts with customers', 42), ('Revenue from contract with customers', 42), ('from trading business', 41), ('transmission and distribution business', 33), ('sale of products', 32), ('revenue from operations', 30), (' Sales revenue', 29), ('net sales', 23), (' Sale of coal', 23), (' Revenue', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('transmission and distribution business', 37), ('from trading business', 34), ('sale of products', 32), ('revenue from operations', 29), ('net sales', 29), (' Sale of coal', 29), ('revenue from contracts with customers', 28), ('Revenue from contract with customers', 28), (' Sales revenue', 27), (' Revenue', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 430461.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [430461.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -310815.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-271328.0, -39487.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Cost of inventory sold', 92), (' Personnel costs', 62), (' Cost of product sold', 57), (' cost of coal sold', 56), ('cost of sales', 52), ('Cost of sales', 52), (' Cost of goods and services sold', 51), ('purchase of stock-in-trade', 43), ('total expenditure', 35), ('total expenses', 33), ('expenditure', 29), ('expense', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Personnel costs', 100), (' Cost of product sold', 65), ('cost of sales', 61), ('Cost of sales', 61), (' Cost of inventory sold', 61), (' cost of coal sold', 57), (' Cost of goods and services sold', 51), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 33), ('expense', 30), ('expenditure', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('total expenditure', 44), (' Cost of goods and services sold', 44), (' Cost of product sold', 38), ('purchase of stock-in-trade', 36), (' Cost of inventory sold', 36), (' cost of coal sold', 35), ('expenditure', 33), ('total expenses', 31), ('cost of sales', 28), ('Cost of sales', 28), (' Personnel costs', 24), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('cost of sales', 50), ('Cost of sales', 50), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), ('total expenses', 37), (' Cost of inventory sold', 35), ('purchase of stock-in-trade', 29), (' Personnel costs', 28), ('expenditure', 24), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' Cost of product sold', 44), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('total expenditure', 44), (' Cost of product sold', 42), ('total expenses', 36), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 31), (' Cost of inventory sold', 29), (' Cost of goods and services sold', 24), ('expense', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('total expenses', 60), ('expense', 50), ('total expenditure', 47), ('expenditure', 43), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 27), (' Cost of inventory sold', 27), (' Cost of product sold', 23), (' Cost of goods and services sold', 23), (' cost of coal sold', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Cost of inventory sold', 42), (' Personnel costs', 42), (' Cost of goods and services sold', 41), (' Cost of product sold', 39), ('total expenditure', 35), (' cost of coal sold', 32), ('cost of sales', 30), ('Cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Personnel costs', 48), ('cost of sales', 42), ('Cost of sales', 42), (' Cost of inventory sold', 41), ('expenditure', 40), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of product sold', 38), (' cost of coal sold', 34), ('purchase of stock-in-trade', 29), ('total expenses', 22), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Cost of inventory sold', 41), ('total expenditure', 39), (' Cost of goods and services sold', 37), (' Cost of product sold', 35), (' Personnel costs', 33), ('purchase of stock-in-trade', 30), ('total expenses', 30), (' cost of coal sold', 29), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 22), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('total expenditure', 32), (' Cost of product sold', 31), ('purchase of stock-in-trade', 30), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' Personnel costs', 29), (' cost of coal sold', 24), ('cost of sales', 22), ('Cost of sales', 22), ('expenditure', 21), ('total expenses', 20), ('expense', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('total expenditure', 34), ('purchase of stock-in-trade', 32), (' Cost of goods and services sold', 32), (' cost of coal sold', 30), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('total expenses', 26), (' Cost of inventory sold', 26), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), ('total expenses', 41), (' cost of coal sold', 39), (' Personnel costs', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Cost of product sold', 30), ('purchase of stock-in-trade', 29), (' Cost of goods and services sold', 29), (' Cost of inventory sold', 29), (' Personnel costs', 28), ('total expenditure', 27), ('total expenses', 25), (' cost of coal sold', 24), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('purchase of stock-in-trade', 36), (' Cost of goods and services sold', 36), ('total expenditure', 34), (' Cost of inventory sold', 33), ('total expenses', 30), (' cost of coal sold', 29), ('expenditure', 27), ('cost of sales', 27), ('Cost of sales', 27), (' Cost of product sold', 27), (' Personnel costs', 25), ('expense', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('total expenditure', 33), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), ('total expenses', 32), (' Cost of goods and services sold', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 28), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), ('expenditure', 17), ('expense', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of goods and services sold', 30), (' cost of coal sold', 29), (' Personnel costs', 29), (' Cost of product sold', 28), ('cost of sales', 25), ('Cost of sales', 25), ('expenditure', 21), ('expense', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('total expenditure', 37), ('total expenses', 36), (' Cost of inventory sold', 35), (' Personnel costs', 35), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' cost of coal sold', 32), (' Cost of goods and services sold', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 23), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), ('total expenses', 36), (' Cost of product sold', 33), ('purchase of stock-in-trade', 32), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Personnel costs', 31), ('cost of sales', 30), ('Cost of sales', 30), ('expenditure', 22), ('expense', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 33), (' Cost of inventory sold', 31), (' cost of coal sold', 30), (' Personnel costs', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenses', 21), ('expense', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 100, 'value': -359196.0, 'line_item_label': ['Cost of inventorysold', 'Personnel costs'], 'note_numbers': [nan, nan], 'line_item_value': [-316176.0, -43020.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance', 'Included in administrative expenses', ' Depreciation – property', ' plant and equipment', ' Depreciation – right-of-use assets', ' Administrative expenses', ' Wages and salaries', ' Compulsory superannuation contributions', ' Payroll on-costs (excluding employee benefit provision)', ' Staff welfare']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -31350.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-22578.0, -1075.0, -7697.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation', 'Distribution expenses', ' Marketing expenses', ' Occupancy expenses', ' Administrative expenses', ' Other expenses', ' Depreciation expenses', ' Selling & distribution expenses', ' Administrative and other expenses', ' Lease expenses', ' Occupancy ', ' Administration expenses', ' Advertising expenses', ' Selling Expenses', ' Depreciation expenses', ' Amortisation expenses', ' Management expenses', ' Logistics and distribution', ' Sales and marketing', ' Other expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses', 46), ('Distribution expenses', 43), ('other expenses', 42), (' Other expenses', 42), (' Other expenses', 42), (' Depreciation expenses', 38), (' Depreciation expenses', 38), (' Logistics and distribution', 38), (' Administrative and other expenses', 37), (' Advertising expenses', 37), (' Administrative expenses', 36), (' Selling & distribution expenses', 36), (' Administration expenses', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), (' Sales and marketing', 30), (' Lease expenses', 26), (' Selling Expenses', 26), (' Marketing expenses', 24), (' depreciation', 21), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Occupancy expenses', 44), (' Depreciation expenses', 40), (' Depreciation expenses', 40), (' Amortisation expenses', 40), (' Advertising expenses', 38), ('Distribution expenses', 36), (' Administrative expenses', 36), (' Administration expenses', 36), (' Lease expenses', 35), (' Selling Expenses', 35), ('other expenses', 33), (' Other expenses', 33), (' Management expenses', 33), (' Other expenses', 33), (' Marketing expenses', 32), (' depreciation', 31), (' Selling & distribution expenses', 30), (' Sales and marketing', 29), (' Administrative and other expenses', 25), (' Occupancy ', 18), (' Logistics and distribution', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Amortisation expenses', 38), (' Selling & distribution expenses', 36), (' Administrative and other expenses', 36), ('Distribution expenses', 35), (' Administrative expenses', 35), (' Administration expenses', 35), (' Logistics and distribution', 32), (' Depreciation expenses', 31), (' Depreciation expenses', 31), (' Advertising expenses', 30), (' Sales and marketing', 30), (' Lease expenses', 28), (' Selling Expenses', 28), ('other expenses', 27), (' Occupancy expenses', 27), (' Other expenses', 27), (' Other expenses', 27), (' Marketing expenses', 26), (' Management expenses', 20), (' depreciation', 16), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' depreciation', 32), (' Marketing expenses', 32), (' Amortisation expenses', 31), (' Logistics and distribution', 31), (' Advertising expenses', 30), ('Distribution expenses', 29), (' Administrative and other expenses', 26), (' Occupancy expenses', 25), (' Selling & distribution expenses', 24), (' Occupancy ', 24), (' Depreciation expenses', 23), (' Depreciation expenses', 23), (' Sales and marketing', 22), (' Administrative expenses', 21), (' Administration expenses', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other expenses', 61), (' Other expenses', 61), (' Other expenses', 61), (' Administrative and other expenses', 43), (' Amortisation expenses', 32), (' Sales and marketing', 31), (' Administrative expenses', 30), (' Administration expenses', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Occupancy expenses', 26), (' Logistics and distribution', 26), (' Marketing expenses', 25), (' Selling & distribution expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' Advertising expenses', 23), (' depreciation', 22), ('Distribution expenses', 22), (' Management expenses', 17), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Selling & distribution expenses', 46), (' Amortisation expenses', 43), ('Distribution expenses', 40), (' Administrative expenses', 40), (' Administrative and other expenses', 40), (' Administration expenses', 40), (' Selling Expenses', 40), ('other expenses', 38), (' Other expenses', 38), (' Other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Advertising expenses', 34), (' Lease expenses', 32), (' Occupancy expenses', 31), (' Management expenses', 31), (' Marketing expenses', 30), (' depreciation', 29), (' Sales and marketing', 28), (' Logistics and distribution', 24), (' Occupancy ', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Logistics and distribution', 100), ('Distribution expenses', 61), (' Selling & distribution expenses', 54), (' Sales and marketing', 46), (' Administrative expenses', 44), (' Administration expenses', 44), (' Administrative and other expenses', 39), (' Advertising expenses', 34), (' Lease expenses', 32), ('other expenses', 31), (' Other expenses', 31), (' Other expenses', 31), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Management expenses', 25), (' Marketing expenses', 24), (' depreciation', 22), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Sales and marketing', 100), (' Marketing expenses', 57), (' Logistics and distribution', 46), (' Amortisation expenses', 41), (' Advertising expenses', 40), (' Administrative expenses', 39), (' Administration expenses', 39), (' Management expenses', 37), (' Depreciation expenses', 34), (' Administrative and other expenses', 34), (' Depreciation expenses', 34), (' Selling & distribution expenses', 33), ('Distribution expenses', 32), (' Lease expenses', 31), (' Selling Expenses', 31), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' depreciation', 27), (' Occupancy expenses', 15), (' Occupancy ', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' Other expenses', 100), (' Other expenses', 100), (' Lease expenses', 70), (' Selling Expenses', 70), (' Occupancy expenses', 67), (' Marketing expenses', 64), (' Administrative and other expenses', 63), (' Management expenses', 58), (' Selling & distribution expenses', 48), (' Depreciation expenses', 46), (' Depreciation expenses', 46), (' Amortisation expenses', 46), (' Advertising expenses', 44), ('Distribution expenses', 43), (' Administrative expenses', 43), (' Administration expenses', 43), (' depreciation', 32), (' Logistics and distribution', 31), (' Sales and marketing', 30), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Amortisation expenses', 39), (' Advertising expenses', 38), (' Sales and marketing', 38), (' Administrative expenses', 37), (' Selling & distribution expenses', 37), (' Administration expenses', 37), (' Marketing expenses', 34), (' Depreciation expenses', 33), (' Administrative and other expenses', 33), (' Depreciation expenses', 33), (' Logistics and distribution', 33), ('Distribution expenses', 32), (' Lease expenses', 30), (' Selling Expenses', 30), ('other expenses', 24), (' Occupancy expenses', 24), (' Other expenses', 24), (' Other expenses', 24), (' depreciation', 21), (' Management expenses', 18), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses', 39), (' Marketing expenses', 36), (' Amortisation expenses', 34), (' Selling & distribution expenses', 33), (' Sales and marketing', 33), ('Distribution expenses', 32), (' Management expenses', 30), (' Logistics and distribution', 29), (' Depreciation expenses', 28), (' Depreciation expenses', 28), (' Advertising expenses', 27), (' Administrative expenses', 26), (' Administration expenses', 26), (' Lease expenses', 23), (' Selling Expenses', 23), ('other expenses', 22), (' Occupancy expenses', 22), (' Other expenses', 22), (' Other expenses', 22), (' Occupancy ', 20), (' depreciation', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Depreciation expenses', 40), (' Depreciation expenses', 40), (' depreciation', 35), (' Amortisation expenses', 33), (' Logistics and distribution', 33), (' Advertising expenses', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Lease expenses', 30), ('other expenses', 29), (' Other expenses', 29), (' Management expenses', 29), (' Other expenses', 29), (' Marketing expenses', 28), (' Selling & distribution expenses', 27), (' Administrative expenses', 25), (' Administration expenses', 25), (' Administrative and other expenses', 24), (' Selling Expenses', 22), (' Occupancy expenses', 21), (' Occupancy ', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Depreciation expenses', 62), (' Depreciation expenses', 62), (' Administrative expenses', 59), (' Administration expenses', 59), (' Administrative and other expenses', 55), (' Lease expenses', 55), (' Advertising expenses', 55), ('other expenses', 53), ('Distribution expenses', 53), (' Other expenses', 53), (' Management expenses', 53), (' Other expenses', 53), (' Marketing expenses', 52), (' Selling & distribution expenses', 51), (' Amortisation expenses', 50), (' Selling Expenses', 48), (' Occupancy expenses', 47), (' Sales and marketing', 36), (' Logistics and distribution', 32), (' depreciation', 24), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administrative and other expenses', 36), (' Logistics and distribution', 36), (' Amortisation expenses', 32), (' Selling & distribution expenses', 31), ('Distribution expenses', 30), (' Administrative expenses', 30), (' Administration expenses', 30), ('other expenses', 28), (' Other expenses', 28), (' Other expenses', 28), (' Marketing expenses', 27), (' depreciation', 26), (' Depreciation expenses', 26), (' Advertising expenses', 26), (' Depreciation expenses', 26), (' Sales and marketing', 26), (' Occupancy expenses', 22), (' Occupancy ', 21), (' Lease expenses', 17), (' Selling Expenses', 17), (' Management expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('Distribution expenses', 58), (' Selling & distribution expenses', 50), (' Logistics and distribution', 46), (' Administrative expenses', 45), (' Administration expenses', 45), (' Administrative and other expenses', 44), (' Depreciation expenses', 41), (' Depreciation expenses', 41), (' Amortisation expenses', 41), (' Advertising expenses', 40), ('other expenses', 37), (' Other expenses', 37), (' Other expenses', 37), (' Occupancy expenses', 30), (' Occupancy ', 30), (' depreciation', 27), (' Sales and marketing', 27), (' Lease expenses', 23), (' Selling Expenses', 23), (' Marketing expenses', 21), (' Management expenses', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), (' Logistics and distribution', 40), ('Distribution expenses', 39), (' Selling & distribution expenses', 39), (' Administrative expenses', 35), (' Administration expenses', 35), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Amortisation expenses', 29), (' Advertising expenses', 28), (' Sales and marketing', 28), ('other expenses', 26), (' Other expenses', 26), (' Other expenses', 26), (' Marketing expenses', 25), (' depreciation', 24), (' Lease expenses', 22), (' Occupancy expenses', 21), (' Management expenses', 21), (' Selling Expenses', 17), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Logistics and distribution', 46), (' Selling & distribution expenses', 45), ('Distribution expenses', 41), (' Administrative and other expenses', 41), (' Advertising expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), ('other expenses', 30), (' Other expenses', 30), (' Other expenses', 30), (' Depreciation expenses', 29), (' Depreciation expenses', 29), (' Sales and marketing', 28), (' Lease expenses', 26), (' Marketing expenses', 24), (' Selling Expenses', 21), (' Management expenses', 20), (' depreciation', 17), (' Occupancy expenses', 15), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other expenses', 39), (' Other expenses', 39), (' Other expenses', 39), (' Depreciation expenses', 36), (' Administrative and other expenses', 36), (' Depreciation expenses', 36), (' Amortisation expenses', 36), (' Selling & distribution expenses', 35), ('Distribution expenses', 34), (' Lease expenses', 33), (' Marketing expenses', 31), (' Logistics and distribution', 31), (' Administrative expenses', 29), (' Administration expenses', 29), (' Advertising expenses', 29), (' Sales and marketing', 29), (' Selling Expenses', 27), (' Management expenses', 26), (' depreciation', 23), (' Occupancy expenses', 19), (' Occupancy ', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other expenses', 59), (' Other expenses', 59), (' Other expenses', 59), (' Administrative and other expenses', 50), (' Marketing expenses', 40), (' Lease expenses', 36), (' Selling Expenses', 36), (' Occupancy expenses', 35), (' Management expenses', 35), (' Depreciation expenses', 33), (' Selling & distribution expenses', 33), (' Depreciation expenses', 33), (' Amortisation expenses', 33), (' Administrative expenses', 32), (' Administration expenses', 32), (' Logistics and distribution', 29), (' depreciation', 28), (' Advertising expenses', 27), (' Sales and marketing', 27), ('Distribution expenses', 26), (' Occupancy ', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Administrative and other expenses', 31), (' Logistics and distribution', 31), (' Marketing expenses', 28), (' Depreciation expenses', 28), (' Depreciation expenses', 28), ('Distribution expenses', 27), (' Sales and marketing', 27), ('other expenses', 25), (' Other expenses', 25), (' Lease expenses', 25), (' Selling Expenses', 25), (' Other expenses', 25), (' depreciation', 24), (' Amortisation expenses', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Administrative expenses', 20), (' Administration expenses', 20), (' Advertising expenses', 20), (' Occupancy ', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Administrative and other expenses', 38), (' Depreciation expenses', 36), (' Depreciation expenses', 36), (' Selling & distribution expenses', 35), (' Advertising expenses', 32), (' Logistics and distribution', 32), (' Sales and marketing', 32), ('Distribution expenses', 31), (' Administrative expenses', 31), (' Administration expenses', 31), (' Management expenses', 30), (' Marketing expenses', 29), ('other expenses', 26), (' Other expenses', 26), (' Lease expenses', 26), (' Selling Expenses', 26), (' Other expenses', 26), (' Amortisation expenses', 25), (' depreciation', 24), (' Occupancy expenses', 22), (' Occupancy ', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Selling & distribution expenses', 34), (' Logistics and distribution', 34), (' Administrative and other expenses', 29), (' Sales and marketing', 28), ('Distribution expenses', 27), (' Selling Expenses', 26), (' Marketing expenses', 25), (' Depreciation expenses', 25), (' Depreciation expenses', 25), ('other expenses', 23), (' Other expenses', 23), (' Lease expenses', 23), (' Management expenses', 23), (' Other expenses', 23), (' Amortisation expenses', 22), (' depreciation', 21), (' Occupancy expenses', 19), (' Administrative expenses', 18), (' Administration expenses', 18), (' Advertising expenses', 18), (' Occupancy ', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 38), ('other expenses', 33), (' Other expenses', 33), (' Other expenses', 33), (' Selling & distribution expenses', 29), (' Amortisation expenses', 29), (' Administrative expenses', 28), (' Administration expenses', 28), (' Lease expenses', 27), (' Management expenses', 27), (' Marketing expenses', 26), (' Depreciation expenses', 26), (' Depreciation expenses', 26), (' Logistics and distribution', 26), ('Distribution expenses', 25), (' Advertising expenses', 25), (' Sales and marketing', 25), (' Selling Expenses', 24), (' Occupancy expenses', 23), (' depreciation', 15), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Administrative and other expenses', 43), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Marketing expenses', 32), (' Sales and marketing', 31), (' Lease expenses', 30), (' Management expenses', 29), (' Depreciation expenses', 28), (' Selling & distribution expenses', 28), (' Depreciation expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Selling Expenses', 26), (' Occupancy expenses', 25), (' Logistics and distribution', 25), ('Distribution expenses', 24), (' Advertising expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Selling & distribution expenses', 43), (' Administrative and other expenses', 40), ('Distribution expenses', 37), ('other expenses', 36), (' Other expenses', 36), (' Other expenses', 36), (' Logistics and distribution', 34), (' Sales and marketing', 34), (' Lease expenses', 29), (' Management expenses', 29), (' Marketing expenses', 28), (' Amortisation expenses', 28), (' Administrative expenses', 27), (' Administration expenses', 27), (' Advertising expenses', 27), (' Occupancy expenses', 25), (' Selling Expenses', 25), (' Depreciation expenses', 24), (' Depreciation expenses', 24), (' depreciation', 16), (' Occupancy ', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('Distribution expenses', 38), (' Depreciation expenses', 35), (' Administrative and other expenses', 35), (' Depreciation expenses', 35), (' Selling & distribution expenses', 34), (' Advertising expenses', 34), (' Sales and marketing', 34), (' Administrative expenses', 33), (' Administration expenses', 33), ('other expenses', 32), (' Other expenses', 32), (' Other expenses', 32), (' Amortisation expenses', 30), (' Logistics and distribution', 30), (' Lease expenses', 27), (' Selling Expenses', 27), (' Marketing expenses', 26), (' depreciation', 24), (' Occupancy expenses', 21), (' Management expenses', 21), (' Occupancy ', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 7, 8], 'score': 100, 'value': -39589.0, 'line_item_label': ['Logistics and distribution', 'Sales and marketing', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-28893.0, -1719.0, -8977.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Rent']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['Rent', ' Rental expenses', ' Administration expenses', ' Occupancy', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses', 36), (' Occupancy', 35), (' Occupancy expenses', 33), ('Rent', 25), (' Rental expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent', 60), (' Occupancy expenses', 44), (' Administration expenses', 36), (' Rental expenses', 32), (' Occupancy', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Rental expenses', 39), (' Administration expenses', 35), ('Rent', 27), (' Occupancy expenses', 27), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses', 32), ('Rent', 25), (' Occupancy expenses', 25), (' Occupancy', 24), (' Administration expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses', 30), ('Rent', 27), (' Occupancy expenses', 26), (' Rental expenses', 25), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Administration expenses', 40), (' Rental expenses', 37), (' Occupancy expenses', 31), ('Rent', 22), (' Occupancy', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Administration expenses', 44), (' Rental expenses', 30), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Rental expenses', 50), (' Administration expenses', 39), ('Rent', 32), (' Occupancy expenses', 15), (' Occupancy', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses', 64), (' Administration expenses', 43), ('Rent', 38), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Administration expenses', 37), (' Rental expenses', 34), (' Occupancy expenses', 24), ('Rent', 23), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses', 29), (' Administration expenses', 26), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Rental expenses', 34), (' Administration expenses', 25), (' Occupancy expenses', 21), ('Rent', 20), (' Occupancy', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Administration expenses', 59), (' Rental expenses', 58), (' Occupancy expenses', 47), ('Rent', 27), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Administration expenses', 30), (' Rental expenses', 27), (' Occupancy expenses', 22), ('Rent', 21), (' Occupancy', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Administration expenses', 45), (' Occupancy', 30), (' Occupancy expenses', 30), ('Rent', 21), (' Rental expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Administration expenses', 35), (' Rental expenses', 29), (' Occupancy expenses', 21), ('Rent', 15), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' Administration expenses', 32), (' Rental expenses', 24), (' Occupancy expenses', 15), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' Rental expenses', 31), (' Administration expenses', 29), (' Occupancy expenses', 19), ('Rent', 17), (' Occupancy', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Rental expenses', 40), (' Occupancy expenses', 35), (' Administration expenses', 32), ('Rent', 31), (' Occupancy', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 28), (' Occupancy expenses', 21), (' Administration expenses', 20), ('Rent', 12), (' Occupancy', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Rental expenses', 33), (' Administration expenses', 31), (' Occupancy expenses', 22), ('Rent', 17), (' Occupancy', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Rental expenses', 29), (' Occupancy expenses', 19), (' Administration expenses', 18), ('Rent', 11), (' Occupancy', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 30), (' Administration expenses', 28), (' Occupancy expenses', 23), ('Rent', 15), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Rental expenses', 36), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Rental expenses', 35), (' Administration expenses', 27), (' Occupancy expenses', 25), ('Rent', 17), (' Occupancy', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Administration expenses', 33), (' Rental expenses', 21), (' Occupancy expenses', 21), ('Rent', 13), (' Occupancy', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Other income', ' Commission revenue', ' Rent']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 1761.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [1761.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('Other revenue', 40), (' Other income', 34), ('other operating', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('other operating', 50), (' Other income', 40), ('Other revenue', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('other operating', 27), (' Other income', 26), ('Other revenue', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Other income', 31), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('other operating', 38), (' Other income', 30), ('Other revenue', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('Other revenue', 33), ('other operating', 29), (' Other income', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' Other income', 46), ('other operating', 41), ('Other revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' Other income', 54), ('other operating', 40), ('Other revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Other income', 35), ('other operating', 31), ('Other revenue', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other operating', 42), (' Other income', 41), ('Other revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other operating', 55), (' Other income', 47), ('Other revenue', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 29), (' Other income', 25), ('other operating', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('Other revenue', 26), ('other operating', 23), (' Other income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('Other revenue', 26), (' Other income', 23), ('other operating', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Other income', 37), ('other operating', 34), ('Other revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('other operating', 38), (' Other income', 37), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('other operating', 37), (' Other income', 36), ('Other revenue', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('other operating', 39), ('Other revenue', 32), (' Other income', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 552.0, 'line_item_label': ['Other income'], 'note_numbers': ['6'], 'line_item_value': [552.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -348.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [1761.0, -2109.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income', ' Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), (' Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), ('Finance income', 33), (' Interest revenue', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), ('Finance income', 11), (' Net finance costs', 10), (' Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [(' Net finance costs', 55), (' Finance income and costs', 46), (' Finance income and finance costs', 39), (' Interest revenue', 36), ('other income', 34), ('finance income', 33), ('Finance income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), (' Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17), ('Finance income', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), ('Finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [(' Net finance costs', 55), ('other income', 40), (' Finance income and costs', 40), (' Interest revenue', 34), (' Finance income and finance costs', 33), ('finance income', 23), ('Finance income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' Finance income and costs', 44), (' Finance income and finance costs', 38), ('finance income', 31), ('Finance income', 31), (' Interest revenue', 29), (' Net finance costs', 29), ('other income', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' Interest revenue', 40), (' Finance income and costs', 39), (' Finance income and finance costs', 33), (' Net finance costs', 33), ('other income', 31), ('finance income', 30), ('Finance income', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income', 25), (' Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), (' Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29), ('Finance income', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), (' Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('Finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' Net finance costs', 39), ('other income', 30), (' Finance income and costs', 27), (' Finance income and finance costs', 27), (' Interest revenue', 26), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' Interest revenue', 42), (' Net finance costs', 30), ('other income', 28), ('finance income', 27), ('Finance income', 27), (' Finance income and costs', 26), (' Finance income and finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('other income', 46), (' Net finance costs', 41), (' Finance income and costs', 36), (' Finance income and finance costs', 35), (' Interest revenue', 31), ('finance income', 28), ('Finance income', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('other income', 54), (' Net finance costs', 47), (' Finance income and costs', 44), ('finance income', 37), ('Finance income', 37), (' Finance income and finance costs', 37), (' Interest revenue', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' Net finance costs', 36), ('other income', 35), (' Finance income and finance costs', 35), (' Finance income and costs', 32), (' Interest revenue', 32), ('finance income', 26), ('Finance income', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('other income', 41), (' Interest revenue', 33), (' Finance income and costs', 29), (' Finance income and finance costs', 29), (' Net finance costs', 28), ('finance income', 15), ('Finance income', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('other income', 47), (' Net finance costs', 35), (' Interest revenue', 29), (' Finance income and finance costs', 26), (' Finance income and costs', 25), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('other income', 67), (' Net finance costs', 49), (' Finance income and costs', 42), ('finance income', 41), ('Finance income', 41), (' Finance income and finance costs', 36), (' Interest revenue', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 34), (' Net finance costs', 31), (' Finance income and finance costs', 28), ('other income', 25), (' Finance income and costs', 25), ('finance income', 18), ('Finance income', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' Finance income and costs', 32), (' Interest revenue', 32), (' Net finance costs', 32), (' Finance income and finance costs', 31), ('other income', 23), ('finance income', 22), ('Finance income', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' Interest revenue', 31), (' Finance income and finance costs', 31), (' Finance income and costs', 28), (' Net finance costs', 28), ('other income', 23), ('finance income', 19), ('Finance income', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 38), ('other income', 37), (' Finance income and costs', 32), (' Finance income and finance costs', 32), (' Interest revenue', 29), ('finance income', 23), ('Finance income', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' Net finance costs', 41), ('other income', 37), (' Finance income and finance costs', 37), (' Finance income and costs', 34), ('finance income', 25), ('Finance income', 25), (' Interest revenue', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' Finance income and costs', 40), (' Net finance costs', 37), ('other income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 31), ('finance income', 29), ('Finance income', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' Interest revenue', 34), ('other income', 32), (' Finance income and costs', 30), (' Finance income and finance costs', 30), (' Net finance costs', 29), ('finance income', 21), ('Finance income', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 10], 'score': 100, 'value': -2661.0, 'line_item_label': ['Other income', 'Net finance costs'], 'note_numbers': ['6', '7'], 'line_item_value': [552.0, -3213.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['interest', 'Bank interest', ' Interest income', ' Interest received - Bank', ' Interest received - Loan', ' Sublease interest income', ' Share of JV interest received/(paid)', ' Bank Deposits - cash and cash equivalents', ' Finance income under the effective interest method on financial assets not measured at FVTPL', ' Interest income'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), (' Interest income', 79), (' Interest income', 79), (' Interest received - Bank', 72), (' Interest received - Loan', 70), ('Bank interest', 69), (' Share of JV interest received/(paid)', 63), (' Sublease interest income', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 59), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest income', 100), (' Interest income', 100), (' Sublease interest income', 77), ('Bank interest', 69), (' Interest received - Bank', 67), (' Interest received - Loan', 65), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 65), (' Share of JV interest received/(paid)', 60), (' Bank Deposits - cash and cash equivalents', 39)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest received - Loan', 65), (' Interest income', 64), (' Interest income', 64), (' Interest received - Bank', 60), (' Sublease interest income', 59), (' Share of JV interest received/(paid)', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 55), (' Bank Deposits - cash and cash equivalents', 38)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), ('Bank interest', 77), (' Interest income', 71), (' Interest income', 71), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 68), (' Interest received - Loan', 60), (' Interest received - Bank', 55), (' Sublease interest income', 55), (' Share of JV interest received/(paid)', 54), (' Bank Deposits - cash and cash equivalents', 41)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' Interest received - Bank', 67), (' Interest received - Loan', 67), (' Share of JV interest received/(paid)', 67), (' Bank Deposits - cash and cash equivalents', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL', 67), ('interest', 33), ('Bank interest', 33), (' Interest income', 33), (' Sublease interest income', 33), (' Interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('Interest expense', 100), ('interest expense', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('Interest expense', 100), ('interest expense', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('Interest expense', 100), ('interest expense', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('Interest expense', 100), ('interest expense', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 4, 6], 'score': [100, 100, 100, 100], 'value': [-1913.0, -1341.0, -515.0, -1603.0], 'label': ['Net interest Interest expense nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Interest expense nan', 'Net interest Lease liabilities interest expense 14'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Lease liabilities interest expense']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest', 'Interest expenses', ' Discount unwind on the provision for asset retirement obligation', '  Other interest expense', ' Interest on leases', ' Interest on bank overdrafts and loans (other than those from related parties)', ' Interest accrued on loans', ' Interest accrued on lease liabilities', ' Lease interest expense', ' Interest expense on financial liabilities using the effective interest rate method - other', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', ' Lease liabilities interest expense'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Lease interest expense', 90), ('  Other interest expense', 86), (' Interest on leases', 77), (' Lease liabilities interest expense', 70), (' Interest accrued on loans', 63), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 59), (' Interest expense on financial liabilities using the effective interest rate method - other', 56), (' Interest accrued on lease liabilities', 54), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 44), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), ('Interest expenses', 73), (' Lease interest expense', 70), (' Interest accrued on loans', 68), ('  Other interest expense', 67), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 61), (' Interest accrued on lease liabilities', 58), (' Interest expense on financial liabilities using the effective interest rate method - other', 58), (' Interest on bank overdrafts and loans (other than those from related parties)', 55), (' Lease liabilities interest expense', 52), ('loan', 50), ('debt', 50), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bank facilities', 30), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest', 100), ('Interest expenses', 100), (' Interest on leases', 100), (' Lease liabilities interest expense', 100), (' Lease interest expense', 85), (' Interest accrued on lease liabilities', 77), ('  Other interest expense', 76), (' Interest accrued on loans', 68), (' Interest expense on financial liabilities using the effective interest rate method - other', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Interest on bank overdrafts and loans (other than those from related parties)', 45), (' Discount unwind on the provision for asset retirement obligation', 42), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest', 100), (' Interest on leases', 77), (' Interest accrued on loans', 63), ('Interest expenses', 60), (' Lease interest expense', 60), (' Interest accrued on lease liabilities', 58), ('  Other interest expense', 57), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 55), (' Interest on bank overdrafts and loans (other than those from related parties)', 53), (' Interest expense on financial liabilities using the effective interest rate method - other', 53), ('loan', 50), ('debt', 50), ('bank facilities', 50), (' Lease liabilities interest expense', 48), (' Discount unwind on the provision for asset retirement obligation', 45), ('debenture', 38), ('cash credit', 36), ('bonds', 25), ('borrowings', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('debt', 67), ('debenture', 67), ('cash credit', 33), ('bank facilities', 33), ('bonds', 33), ('interest', 33), ('Interest expenses', 33), (' Discount unwind on the provision for asset retirement obligation', 33), ('  Other interest expense', 33), (' Interest on leases', 33), (' Interest on bank overdrafts and loans (other than those from related parties)', 33), (' Interest accrued on loans', 33), (' Interest accrued on lease liabilities', 33), (' Lease interest expense', 33), (' Interest expense on financial liabilities using the effective interest rate method - other', 33), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities', 33), (' Lease liabilities interest expense', 33), ('loan', 0), ('borrowings', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [-1913.0, 41.0, -1341.0, -3213.0, -515.0, 9.0, -1603.0, -2109.0], 'label': ['Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan', 'Net interest Interest expense nan', 'Net interest Interest income nan', 'Net interest Lease liabilities interest expense 14', 'Net interest Total net finance costs nan'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest income', 79)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest income', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest income', 64)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest income', 71)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [('interest income', 79)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [('interest income', 100)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [('interest income', 64)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [('interest income', 71)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [('interest income', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 5], 'score': [100, 100], 'value': [41.0, 9.0], 'label': ['Net interest Interest income nan', 'Net interest Interest income nan'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs ']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2109.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-2109.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['finance cost', 'finance costs', ' finance expenses', ' net finance costs '] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses', 32), ('finance cost', 12), ('finance costs', 12), (' net finance costs ', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('finance cost', 55), ('finance costs', 55), (' net finance costs ', 55), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost', 43), ('finance costs', 43), (' finance expenses', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('finance cost', 56), ('finance costs', 56), (' net finance costs ', 55), (' finance expenses', 37)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [(' net finance costs ', 33), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' finance expenses', 56), (' net finance costs ', 22), ('finance cost', 17), ('finance costs', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [(' net finance costs ', 38), ('finance cost', 24), ('finance costs', 24), (' finance expenses', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost', 85), ('finance costs', 85), (' finance expenses', 57)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost', 37), ('finance costs', 37), (' finance expenses', 34)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' finance expenses', 52), (' net finance costs ', 30), ('finance cost', 28), ('finance costs', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [(' net finance costs ', 41), ('finance cost', 34), ('finance costs', 34), (' finance expenses', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [(' net finance costs ', 47), ('finance cost', 38), ('finance costs', 38), (' finance expenses', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [(' net finance costs ', 36), ('finance cost', 30), ('finance costs', 30), (' finance expenses', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 26), ('finance costs', 26), (' finance expenses', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [(' net finance costs ', 35), ('finance cost', 33), ('finance costs', 33), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' net finance costs ', 49), (' finance expenses', 46), ('finance cost', 42), ('finance costs', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 31), ('finance cost', 25), ('finance costs', 25), (' finance expenses', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [(' net finance costs ', 32), (' finance expenses', 29), ('finance cost', 26), ('finance costs', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [(' net finance costs ', 28), ('finance cost', 23), ('finance costs', 23), (' finance expenses', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 38), (' finance expenses', 30), ('finance cost', 27), ('finance costs', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [(' net finance costs ', 41), (' finance expenses', 32), ('finance cost', 30), ('finance costs', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' net finance costs ', 37), (' finance expenses', 32), ('finance cost', 29), ('finance costs', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [(' net finance costs ', 29), ('finance cost', 27), ('finance costs', 27), (' finance expenses', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -3213.0, 'line_item_label': ['Net finance costs'], 'note_numbers': ['7'], 'line_item_value': [-3213.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['other revenue', ' commission revenue', '  government grants', ' insurance proceeds', ' foreign exchange gain', ' other', ' dividend from other parties', ' other income', ' net foreign exchange gain', ' effective portion of changes in fair value of cash flow', ' profit from discontinued operation', ' net of tax', ' share of jv income', ' secondment income (tw recovery)', ' japan recoveries', ' margin charge income', ' net foreign exchange gains/(losses)', ' paid by customers - at amortised cost', ' net foreign exchange (loss)/gain', ' net ppe disposal (loss)/gain', ' other miscellaneous - net (loss)/gain', ' quota lease income', ' sundry income', ' net (loss)/profit on disposal of non-current assets', ' net other foreign exchange (losses)/gains'] , match_type = partial , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest expense nan , res_fuzz_match = [(' net of tax', 71), (' other', 60), (' other income', 55), (' net foreign exchange gain', 51), ('other revenue', 50), (' net other foreign exchange (losses)/gains', 50), (' net foreign exchange (loss)/gain', 49), (' foreign exchange gain', 47), (' net foreign exchange gains/(losses)', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' share of jv income', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' net ppe disposal (loss)/gain', 43), ('  government grants', 42), (' sundry income', 42), (' secondment income (tw recovery)', 38), (' quota lease income', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 34), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest interest income nan , res_fuzz_match = [(' other income', 73), (' share of jv income', 73), (' net of tax', 71), (' quota lease income', 62), (' other', 60), (' sundry income', 58), (' net foreign exchange gain', 50), (' margin charge income', 50), (' net other foreign exchange (losses)/gains', 48), (' net foreign exchange (loss)/gain', 46), (' net ppe disposal (loss)/gain', 46), (' other miscellaneous - net (loss)/gain', 46), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 45), (' secondment income (tw recovery)', 43), ('other revenue', 42), ('  government grants', 42), (' foreign exchange gain', 41), (' paid by customers - at amortised cost', 38), (' profit from discontinued operation', 37), (' commission revenue', 36), (' insurance proceeds', 36), (' dividend from other parties', 36), (' effective portion of changes in fair value of cash flow', 35), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest lease liabilities interest expense 14 , res_fuzz_match = [(' net of tax', 71), (' other', 60), ('other revenue', 50), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 50), (' quota lease income', 50), (' net foreign exchange (loss)/gain', 48), (' net other foreign exchange (losses)/gains', 46), (' insurance proceeds', 45), (' foreign exchange gain', 45), (' net foreign exchange gains/(losses)', 45), (' other miscellaneous - net (loss)/gain', 45), (' net (loss)/profit on disposal of non-current assets', 39), (' secondment income (tw recovery)', 38), (' commission revenue', 36), (' other income', 36), (' share of jv income', 36), (' effective portion of changes in fair value of cash flow', 35), ('  government grants', 33), (' profit from discontinued operation', 33), (' margin charge income', 33), (' paid by customers - at amortised cost', 33), (' sundry income', 33), (' dividend from other parties', 32), (' japan recoveries', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = net interest total net finance costs nan , res_fuzz_match = [(' net of tax', 71), (' quota lease income', 56), (' net other foreign exchange (losses)/gains', 55), (' net foreign exchange (loss)/gain', 53), (' net foreign exchange gain', 50), (' net ppe disposal (loss)/gain', 47), (' paid by customers - at amortised cost', 46), (' other miscellaneous - net (loss)/gain', 46), (' insurance proceeds', 45), (' other income', 45), (' share of jv income', 45), (' net foreign exchange gains/(losses)', 45), (' net (loss)/profit on disposal of non-current assets', 44), (' secondment income (tw recovery)', 43), (' effective portion of changes in fair value of cash flow', 42), (' sundry income', 42), (' profit from discontinued operation', 41), (' foreign exchange gain', 40), (' other', 40), (' margin charge income', 39), (' commission revenue', 36), (' dividend from other parties', 36), (' japan recoveries', 36), ('other revenue', 33), ('  government grants', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_rows = 31 dec $000 , res_fuzz_match = [(' foreign exchange gain', 67), (' dividend from other parties', 67), (' net foreign exchange gain', 67), (' effective portion of changes in fair value of cash flow', 67), (' secondment income (tw recovery)', 67), (' japan recoveries', 67), (' net foreign exchange gains/(losses)', 67), (' paid by customers - at amortised cost', 67), (' net foreign exchange (loss)/gain', 67), (' net other foreign exchange (losses)/gains', 67), ('other revenue', 33), (' commission revenue', 33), ('  government grants', 33), (' insurance proceeds', 33), (' other', 33), (' other income', 33), (' profit from discontinued operation', 33), (' net of tax', 33), (' share of jv income', 33), (' margin charge income', 33), (' net ppe disposal (loss)/gain', 33), (' other miscellaneous - net (loss)/gain', 33), (' quota lease income', 33), (' sundry income', 33), (' net (loss)/profit on disposal of non-current assets', 33)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': 4337.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [4337.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('amount transferred to retained earnings', 40), (' income tax', 30), ('prior year ', 29), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), ('current tax', 28), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('earlier year', 27), ('provision for taxation previous year', 26), ('deferred tax', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('amount transferred to retained earnings', 39), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 31), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), ('current tax', 24), ('earlier year', 23), (' income tax benefit', 19), ('deferred tax', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('minimum alternate tax credit entitlement', 42), ('provision for taxation previous year', 37), (' income tax benefit', 32), (' tax (expense)/benefit', 32), ('amount transferred to retained earnings', 30), ('deferred tax', 28), (' income tax expense', 28), (' income tax benefit/(expense)', 27), ('current tax', 26), ('earlier year', 25), (' income tax', 21), ('prior year ', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('amount transferred to retained earnings', 48), ('current tax', 38), ('earlier year', 37), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 33), (' income tax', 33), ('provision for taxation previous year', 32), (' income tax expense', 32), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('prior year ', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('deferred tax', 56), (' income tax benefit', 55), ('provision for taxation previous year', 53), (' tax (expense)/benefit', 53), ('current tax', 52), (' income tax benefit/(expense)', 50), (' income tax expense', 44), ('minimum alternate tax credit entitlement', 42), (' income tax', 40), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [(' tax (expense)/benefit', 100), (' income tax benefit/(expense)', 86), (' income tax benefit', 74), (' income tax expense', 59), ('deferred tax', 52), ('current tax', 48), ('minimum alternate tax credit entitlement', 48), (' income tax', 44), ('amount transferred to retained earnings', 40), ('provision for taxation previous year', 38), ('earlier year', 33), ('prior year ', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('provision for taxation previous year', 42), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), (' income tax', 36), (' income tax expense', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), ('prior year ', 29), ('earlier year', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior year ', 40), ('amount transferred to retained earnings', 38), ('minimum alternate tax credit entitlement', 34), (' income tax', 33), ('provision for taxation previous year', 32), ('current tax', 31), (' income tax benefit', 31), ('earlier year', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26), ('deferred tax', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('provision for taxation previous year', 44), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), (' income tax benefit/(expense)', 41), ('current tax', 39), (' income tax benefit', 38), (' tax (expense)/benefit', 38), ('deferred tax', 36), (' income tax', 36), (' income tax expense', 35), ('prior year ', 27), ('earlier year', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('provision for taxation previous year', 53), ('prior year ', 47), ('earlier year', 45), ('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 37), ('current tax', 36), (' tax (expense)/benefit', 35), (' income tax benefit', 31), (' income tax benefit/(expense)', 31), ('deferred tax', 27), (' income tax', 27), (' income tax expense', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('provision for taxation previous year', 62), ('prior year ', 55), ('earlier year', 52), ('current tax', 40), ('amount transferred to retained earnings', 39), (' tax (expense)/benefit', 38), ('deferred tax', 36), ('minimum alternate tax credit entitlement', 35), (' income tax benefit', 33), (' income tax benefit/(expense)', 33), (' income tax expense', 29), (' income tax', 29)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('minimum alternate tax credit entitlement', 39), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax benefit', 30), ('earlier year', 29), (' income tax expense', 27), ('prior year ', 26), ('deferred tax', 23), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('amount transferred to retained earnings', 43), ('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 35), (' income tax benefit/(expense)', 33), (' income tax expense', 31), (' tax (expense)/benefit', 30), ('deferred tax', 27), (' income tax benefit', 27), ('earlier year', 26), (' income tax', 24), ('current tax', 23), ('prior year ', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('provision for taxation previous year', 38), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 34), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 29), (' income tax benefit', 27), ('earlier year', 26), (' income tax expense', 24), ('current tax', 23), ('prior year ', 23), ('deferred tax', 20), (' income tax', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 44), (' income tax benefit', 40), (' income tax benefit/(expense)', 39), ('amount transferred to retained earnings', 37), ('prior year ', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 47), (' income tax expense', 47), (' income tax benefit', 43), (' income tax benefit/(expense)', 42), ('amount transferred to retained earnings', 40), (' tax (expense)/benefit', 36), ('minimum alternate tax credit entitlement', 35), (' income tax', 35), ('prior year ', 34), ('current tax', 33), ('earlier year', 33), ('deferred tax', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 47), ('provision for taxation previous year', 44), (' income tax expense', 43), (' income tax benefit', 43), ('minimum alternate tax credit entitlement', 42), ('amount transferred to retained earnings', 42), ('earlier year', 36), ('prior year ', 33), (' tax (expense)/benefit', 32), (' income tax', 30), ('current tax', 29), ('deferred tax', 23)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 37), (' income tax benefit/(expense)', 36), ('provision for taxation previous year', 33), ('prior year ', 33), (' income tax benefit', 33), (' tax (expense)/benefit', 32), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 23), ('current tax', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 100, 'value': -1421.0, 'line_item_label': ['Tax (expense )benefit'], 'note_numbers': ['8'], 'line_item_value': [-1421.0]}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('prior period', 33), ('exceptional', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('prior period', 43), ('exceptional', 24)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('prior period', 38), ('exceptional', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('prior period', 31), ('exceptional', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('prior period', 22), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 42)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('prior period', 35), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 29), ('prior period', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('prior period', 43), ('exceptional', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('exceptional', 33), ('prior period', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('prior period', 39), ('exceptional', 27)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('prior period', 37), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('prior period', 30), ('exceptional', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('prior period', 40), ('exceptional', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('prior period', 26), ('exceptional', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('prior period', 23), ('exceptional', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('prior period', 27), ('exceptional', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('prior period', 42), ('exceptional', 19)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-07-24 12:18:34+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-07-24 12:18:34+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-07-24 12:18:34+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-07-24 12:18:34+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = cost of inventorysold , res_fuzz_match = [('NULL', 18)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = personnel costs , res_fuzz_match = [('NULL', 22)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = logistics and distribution , res_fuzz_match = [('NULL', 25)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = sales and marketing , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = result from operating activities , res_fuzz_match = [('NULL', 15)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit before tax , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = tax (expense )benefit , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from continuing operations , res_fuzz_match = [('NULL', 14)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = discontinued operations , res_fuzz_match = [('NULL', 21)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit from discontinued operations, net of tax , res_fuzz_match = [('NULL', 10)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year attributable to: , res_fuzz_match = [('NULL', 6)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = profit for the year , res_fuzz_match = [('NULL', 0)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive income: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of overseas subsidiaries , res_fuzz_match = [('NULL', 13)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total items that may be reclassified subsequently to profit or loss , res_fuzz_match = [('NULL', 7)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = other comprehensive (loss )income for the year, net of tax , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 9)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to: , res_fuzz_match = [('NULL', 8)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - txt_particular = equity holders of spicers limited , res_fuzz_match = [('NULL', 20)]
2023-07-24 12:18:34+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
