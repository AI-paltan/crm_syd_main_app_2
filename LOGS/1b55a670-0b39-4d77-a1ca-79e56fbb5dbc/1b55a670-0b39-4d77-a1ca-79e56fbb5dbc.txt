2023-04-06 13:44:39+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-04-06 13:44:39+0530 - sLogger - DEBUG - {'fileid': '1b55a670-0b39-4d77-a1ca-79e56fbb5dbc', 'filename': 'Asahi Diamond Industrial Australia Pty Limited 2021 Annual Report.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/Asahi Diamond Industrial Australia Pty Limited 2021 Annual Report.pdf'}
2023-04-06 13:44:39+0530 - sLogger - DEBUG - save file completed
2023-04-06 13:44:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-04-06 13:44:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-04-06 13:44:39+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-04-06 13:44:39+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-04-06 13:44:39+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-04-06 13:44:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:44:39+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:44:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:44:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:44:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:44:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:44:41+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:44:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:44:42+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:44:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:44:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:44:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:44:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:44:50+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:44:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:44:50+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:44:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:44:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:44:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:44:52+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:44:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:44:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:44:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:44:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:44:56+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:44:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:44:56+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:00+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:00+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:04+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:04+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:07+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:07+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:07+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:07+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:11+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:11+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:15+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:15+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:25+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:25+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:25+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:25+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:25+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:34+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:34+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:43+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:45:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:45:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:45:52+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:45:52+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:01+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:01+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:01+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:01+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:01+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:05+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:05+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:09+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:09+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:13+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:13+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:18+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:18+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:22+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:22+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:26+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:26+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:28+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:28+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:35+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:35+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:35+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:35+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-04-06 13:46:35+0530 - sLogger - DEBUG - filetype: pdf
2023-04-06 13:46:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-04-06 13:46:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-04-06 13:46:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-04-06 13:46:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-04-06 13:46:43+0530 - sLogger - DEBUG - function: predict completed.
2023-04-06 13:46:43+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-04-06 13:46:43+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6, 16], 'predicted_cpl_pages': [5], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5], 'filtered_ccf_pages': [8], 'month': 'december'}
2023-04-06 13:46:43+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-04-06 13:46:43+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-04-06 13:46:43+0530 - sLogger - DEBUG - process file completed
2023-04-06 13:46:43+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-04-06 13:46:44+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-06 13:46:44+0530 - sLogger - DEBUG - TE process file started
2023-04-06 13:50:12+0530 - sLogger - DEBUG - TE Proces file completed
2023-04-06 13:52:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-06 13:52:33+0530 - sLogger - DEBUG - process_main_pages started
2023-04-06 13:52:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 13:52:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 13:52:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 13:52:33+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 13:52:33+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-06 13:52:33+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Cash at bank | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('noncurrent assets', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 18), ('liabilities', 13), ('equity', 0)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current assets | score 31
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent assets | score 32
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current assets | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity and liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity | score 15
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Deferred tax | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent assets', 18), ('liabilities', 13), ('noncurrent liabilities', 9)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current assets | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent assets | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current assets | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity and liabilities | score 28
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Income Tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current assets | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current liabilities | score 28
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent assets | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current assets | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity and liabilities | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Income tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Retained profits | [('current liabilities', 44), ('current assets', 38), ('equity liabilities', 38), ('equity and liabilities', 33), ('liabilities', 32), ('equity', 32), ('noncurrent liabilities', 30), ('noncurrent assets', 23), ('assets', 22)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 47
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 46
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 42
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 42
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 41
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 41
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 47
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-04-06 13:52:34+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-06 13:52:34+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-06 13:52:34+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-06 13:52:34+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- in | changes in operating assets and liabilities
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-04-06 13:52:34+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-04-06 13:52:34+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 13:52:34+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 13:52:34+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 13:52:34+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 13:52:34+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 13:52:34+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 13:52:35+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2560820.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2560820.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2493840.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2493840.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no                  line_item  year    value
0         NaN     NaN        NaN  $  Finished goods at cost  2021  2493840
1         NaN     NaN        NaN  $  Finished goods at cost  2020  2560820
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                          line_item  year  \
8          NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
1          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
11         NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
4          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   

       value  
8  -325753.0  
1  -312561.0  
11 -212176.0  
4  -217451.0  
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 2 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   

                                            line_item    year    value  
0    Plant and equipment $  Balance at 1 January 2021  2021.0  18659.0  
1                    Plant and equipment $  Additions  2021.0  36864.0  
2         Plant and equipment $  Depreciation expense  2021.0  -8675.0  
3   Plant and equipment $  Balance at 31 December ...  2021.0  46848.0  
4         Motor vehicles $  Balance at 1 January 2021  2021.0   5275.0  
5                         Motor vehicles $  Additions  2021.0      0.0  
6              Motor vehicles $  Depreciation expense  2021.0  -5275.0  
7       Motor vehicles $  Balance at 31 December 2021  2021.0      0.0  
8                  Total $  Balance at 1 January 2021  2021.0  23934.0  
9                                  Total $  Additions  2021.0  36864.0  
10                      Total $  Depreciation expense  2021.0 -13950.0  
11               Total $  Balance at 31 December 2021  2021.0  46848.0  
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                          line_item  year  \
0          NaN     NaN        NaN   $  Plant and equipment - at cost  2021   
1          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
2          NaN     NaN        NaN                                $    2021   
3          NaN     NaN        NaN        $  Motor vehicles - at cost  2021   
4          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
5          NaN     NaN        NaN                                $    2021   
6          NaN     NaN        NaN                                $    2021   
7          NaN     NaN        NaN   $  Plant and equipment - at cost  2020   
8          NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
9          NaN     NaN        NaN                                $    2020   
10         NaN     NaN        NaN        $  Motor vehicles - at cost  2020   
11         NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
12         NaN     NaN        NaN                                $    2020   
13         NaN     NaN        NaN                                $    2020   

       value  
0   359409.0  
1  -312561.0  
2    46848.0  
3   217451.0  
4  -217451.0  
5        0.0  
6    46848.0  
7   344412.0  
8  -325753.0  
9    18659.0  
10  217451.0  
11 -212176.0  
12    5275.0  
13   23934.0  
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 223005.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [223005.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 35118.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [35118.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 2 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   

                                           line_item    year   value  
0    Land and buildings $  Balance at 1 January 2021  2021.0  223005  
1         Land and buildings $  Depreciation expense  2021.0 -187887  
2  Land and buildings $  Balance at 31 December 2021  2021.0   35118  
3                 Total $  Balance at 1 January 2021  2021.0  223005  
4                      Total $  Depreciation expense  2021.0 -187887  
5               Total $  Balance at 31 December 2021  2021.0   35118  
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 160921.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [160921.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 163041.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [163041.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   
6         NaN     NaN        NaN   
7         NaN     NaN        NaN   

                                          line_item  year   value  
0                             $  Deferred tax asset  2021  163041  
1                      $ Movements: Opening balance  2021  160921  
2  $ Movements: Credited to profit or loss (note 4)  2021    2120  
3                      $ Movements: Closing balance  2021  163041  
4                             $  Deferred tax asset  2020  160921  
5                      $ Movements: Opening balance  2020  137413  
6  $ Movements: Credited to profit or loss (note 4)  2020   23508  
7                      $ Movements: Closing balance  2020  160921  
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 212213.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [212213.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 71787.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [71787.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year   value
0         NaN     NaN        NaN  $  Lease liability  2021   71787
1         NaN     NaN        NaN  $  Lease liability  2020  212213
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year    value
0         NaN     NaN        NaN  $  Lease liability  2021      0.0
1         NaN     NaN        NaN  $  Lease liability  2020  67186.0
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 246776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [246776.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 640070.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [640070.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no          line_item  year   value
0         NaN     NaN        NaN  $  Trade payables  2021  285367
1         NaN     NaN        NaN  $  Other payables  2021  354703
2         NaN     NaN        NaN                $    2021  640070
3         NaN     NaN        NaN  $  Trade payables  2020  157647
4         NaN     NaN        NaN  $  Other payables  2020   89129
5         NaN     NaN        NaN                $    2020  246776
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 119674.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [119674.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no                    line_item  year     value
0         NaN     NaN        NaN  $  Provision for income tax  2021  119674.0
1         NaN     NaN        NaN  $  Provision for income tax  2020       0.0
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 67186.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [67186.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 0.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [0.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year   value
0         NaN     NaN        NaN  $  Lease liability  2021   71787
1         NaN     NaN        NaN  $  Lease liability  2020  212213
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:02+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:02+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year    value
0         NaN     NaN        NaN  $  Lease liability  2021      0.0
1         NaN     NaN        NaN  $  Lease liability  2020  67186.0
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:02+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 13:55:02+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 13:55:02+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:02+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:02+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 13:55:03+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:03+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:03+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                         line_item  year  \
0          NaN     NaN        NaN  $  Plant and equipment - at cost  2021   
10         NaN     NaN        NaN       $  Motor vehicles - at cost  2020   
3          NaN     NaN        NaN       $  Motor vehicles - at cost  2021   
7          NaN     NaN        NaN  $  Plant and equipment - at cost  2020   

       value  
0   359409.0  
10  217451.0  
3   217451.0  
7   344412.0  
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 13:55:03+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 13:55:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:03+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 13:55:03+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:03+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 655478.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [655478.0]}
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:03+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 13:55:03+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 730409.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [730409.0]}
2023-04-06 13:55:03+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 13:55:03+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 13:55:03+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   
6         NaN     NaN        NaN   
7         NaN     NaN        NaN   
8         NaN     NaN        NaN   
9         NaN     NaN        NaN   

                                       line_item  year   value  
0                           $  Trade receivables  2021  705472  
1  $  Less: Allowance for expected credit losses  2021  -34597  
2                                            $    2021  670875  
3                           $  Other receivables  2021   59534  
4                                            $    2021  730409  
5                           $  Trade receivables  2020  648782  
6  $  Less: Allowance for expected credit losses  2020  -40549  
7                                            $    2020  608233  
8                           $  Other receivables  2020   47245  
9                                            $    2020  655478  
2023-04-06 13:55:03+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('net sales', 43), ('revenue from contracts with customers', 43), ('revenue from operations', 39), ('transmission and distribution business', 33), ('from trading business', 33), ('sale of products', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('revenue from operations', 38), ('transmission and distribution business', 37), ('net sales', 33), ('from trading business', 32), ('revenue from contracts with customers', 29), ('sale of products', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('net sales', 52), ('from trading business', 33), ('sale of products', 30), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('transmission and distribution business', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('revenue from contracts with customers', 42), ('transmission and distribution business', 41), ('sale of products', 36), ('net sales', 33), ('from trading business', 32), ('revenue from operations', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('sale of products', 25), ('transmission and distribution business', 25), ('net sales', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('revenue from operations', 40), ('sale of products', 38), ('transmission and distribution business', 29), ('net sales', 27), ('revenue from contracts with customers', 26), ('from trading business', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('net sales', 38), ('revenue from operations', 34), ('sale of products', 32), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('from trading business', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('net sales', 42), ('sale of products', 35), ('revenue from operations', 30), ('from trading business', 23), ('transmission and distribution business', 21), ('revenue from contracts with customers', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('revenue from contracts with customers', 50), ('from trading business', 43), ('revenue from operations', 38), ('transmission and distribution business', 37), ('sale of products', 27), ('net sales', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 33), ('net sales', 29), ('from trading business', 29), ('revenue from operations', 28), ('sale of products', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('transmission and distribution business', 35), ('sale of products', 29), ('net sales', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('revenue from contracts with customers', 34), ('transmission and distribution business', 34), ('revenue from operations', 29), ('from trading business', 29), ('sale of products', 18), ('net sales', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('transmission and distribution business', 47), ('revenue from contracts with customers', 35), ('from trading business', 31), ('sale of products', 29), ('revenue from operations', 23), ('net sales', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('revenue from contracts with customers', 40), ('transmission and distribution business', 37), ('from trading business', 35), ('sale of products', 27), ('revenue from operations', 26), ('net sales', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('transmission and distribution business', 47), ('revenue from contracts with customers', 35), ('from trading business', 31), ('sale of products', 29), ('revenue from operations', 23), ('net sales', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('revenue from operations', 55), ('revenue from contracts with customers', 32), ('net sales', 29), ('sale of products', 22), ('from trading business', 19), ('transmission and distribution business', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('net sales', 43), ('revenue from contracts with customers', 43), ('revenue from operations', 39), ('transmission and distribution business', 33), ('from trading business', 33), ('sale of products', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('revenue from operations', 71), ('revenue from contracts with customers', 45), ('sale of products', 33), ('net sales', 30), ('from trading business', 30), ('transmission and distribution business', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('net sales', 29), ('revenue from operations', 27), ('sale of products', 22), ('revenue from contracts with customers', 16), ('transmission and distribution business', 12), ('from trading business', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('revenue from operations', 38), ('transmission and distribution business', 37), ('net sales', 33), ('from trading business', 32), ('revenue from contracts with customers', 29), ('sale of products', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('net sales', 52), ('from trading business', 33), ('sale of products', 30), ('revenue from operations', 26), ('revenue from contracts with customers', 26), ('transmission and distribution business', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('revenue from contracts with customers', 42), ('transmission and distribution business', 41), ('sale of products', 36), ('net sales', 33), ('from trading business', 32), ('revenue from operations', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('from trading business', 37), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('sale of products', 25), ('transmission and distribution business', 25), ('net sales', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('revenue from operations', 40), ('sale of products', 38), ('transmission and distribution business', 29), ('net sales', 27), ('revenue from contracts with customers', 26), ('from trading business', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('net sales', 32), ('from trading business', 31), ('transmission and distribution business', 26), ('revenue from operations', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('net sales', 38), ('revenue from operations', 34), ('sale of products', 32), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('from trading business', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('net sales', 42), ('sale of products', 35), ('revenue from operations', 30), ('from trading business', 23), ('transmission and distribution business', 21), ('revenue from contracts with customers', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('revenue from contracts with customers', 50), ('from trading business', 43), ('revenue from operations', 38), ('transmission and distribution business', 37), ('sale of products', 27), ('net sales', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('revenue from contracts with customers', 38), ('transmission and distribution business', 33), ('net sales', 29), ('from trading business', 29), ('revenue from operations', 28), ('sale of products', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('transmission and distribution business', 45), ('revenue from operations', 38), ('net sales', 33), ('revenue from contracts with customers', 33), ('sale of products', 29), ('from trading business', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('from trading business', 41), ('revenue from operations', 36), ('revenue from contracts with customers', 36), ('transmission and distribution business', 35), ('sale of products', 29), ('net sales', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('from trading business', 45), ('transmission and distribution business', 32), ('sale of products', 29), ('revenue from contracts with customers', 29), ('revenue from operations', 25), ('net sales', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('revenue from contracts with customers', 34), ('transmission and distribution business', 34), ('revenue from operations', 29), ('from trading business', 29), ('sale of products', 18), ('net sales', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('transmission and distribution business', 47), ('revenue from contracts with customers', 35), ('from trading business', 31), ('sale of products', 29), ('revenue from operations', 23), ('net sales', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('revenue from contracts with customers', 40), ('from trading business', 38), ('revenue from operations', 37), ('sale of products', 29), ('transmission and distribution business', 28), ('net sales', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('revenue from contracts with customers', 40), ('transmission and distribution business', 37), ('from trading business', 35), ('sale of products', 27), ('revenue from operations', 26), ('net sales', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('transmission and distribution business', 47), ('revenue from contracts with customers', 35), ('from trading business', 31), ('sale of products', 29), ('revenue from operations', 23), ('net sales', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('purchase of stock-in-trade', 29), ('expense', 29), ('total expenditure', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 31), ('expenditure', 30), ('total expenses', 27), ('expense', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), ('cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), ('purchase of stock-in-trade', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('cost of sales', 32), ('expenditure', 31), ('total expenditure', 31), ('purchase of stock-in-trade', 29), ('total expenses', 29), ('expense', 9)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('cost of sales', 48), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('total expenditure', 21), ('expenditure', 18), ('expense', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('expense', 60), ('total expenses', 46), ('expenditure', 42), ('total expenditure', 33), ('purchase of stock-in-trade', 30), ('cost of sales', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('expense', 63), ('total expenses', 56), ('expenditure', 52), ('total expenditure', 41), ('cost of sales', 36), ('purchase of stock-in-trade', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('expense', 71), ('total expenses', 70), ('total expenditure', 52), ('expenditure', 48), ('cost of sales', 40), ('purchase of stock-in-trade', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('total expenditure', 46), ('expenditure', 43), ('total expenses', 41), ('expense', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('purchase of stock-in-trade', 41), ('total expenses', 38), ('expenditure', 33), ('total expenditure', 33), ('expense', 31), ('cost of sales', 28)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), ('expense', 34), ('purchase of stock-in-trade', 29), ('cost of sales', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('total expenditure', 27), ('total expenses', 25), ('purchase of stock-in-trade', 23), ('expenditure', 21), ('expense', 16), ('cost of sales', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('expenditure', 22), ('cost of sales', 22), ('total expenses', 21), ('expense', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('total expenditure', 31), ('total expenses', 30), ('purchase of stock-in-trade', 27), ('cost of sales', 25), ('expenditure', 19), ('expense', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('expenditure', 22), ('cost of sales', 22), ('total expenses', 21), ('expense', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 0.0, 'line_item_label': ['Expenses'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('purchase of stock-in-trade', 29), ('expense', 29), ('total expenditure', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('cost of sales', 38), ('expenditure', 36), ('expense', 33), ('total expenditure', 29), ('total expenses', 25), ('purchase of stock-in-trade', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('expense', 100), ('total expenses', 67), ('expenditure', 62), ('total expenditure', 45), ('purchase of stock-in-trade', 16), ('cost of sales', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('purchase of stock-in-trade', 34), ('cost of sales', 32), ('total expenditure', 31), ('expenditure', 30), ('total expenses', 27), ('expense', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('total expenditure', 39), ('cost of sales', 33), ('expenditure', 32), ('total expenses', 30), ('expense', 29), ('purchase of stock-in-trade', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('cost of sales', 32), ('expenditure', 31), ('total expenditure', 31), ('purchase of stock-in-trade', 29), ('total expenses', 29), ('expense', 9)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('cost of sales', 48), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('total expenditure', 21), ('expenditure', 18), ('expense', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('expense', 60), ('total expenses', 46), ('expenditure', 42), ('total expenditure', 33), ('purchase of stock-in-trade', 30), ('cost of sales', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('expense', 63), ('total expenses', 56), ('expenditure', 52), ('total expenditure', 41), ('cost of sales', 36), ('purchase of stock-in-trade', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('expense', 71), ('total expenses', 70), ('total expenditure', 52), ('expenditure', 48), ('cost of sales', 40), ('purchase of stock-in-trade', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('total expenditure', 46), ('expenditure', 43), ('total expenses', 41), ('expense', 32), ('purchase of stock-in-trade', 31), ('cost of sales', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('purchase of stock-in-trade', 41), ('total expenses', 38), ('expenditure', 33), ('total expenditure', 33), ('expense', 31), ('cost of sales', 28)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('expense', 55), ('total expenses', 43), ('expenditure', 38), ('cost of sales', 32), ('total expenditure', 31), ('purchase of stock-in-trade', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('total expenses', 49), ('total expenditure', 44), ('expenditure', 36), ('expense', 34), ('purchase of stock-in-trade', 29), ('cost of sales', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), ('cost of sales', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('total expenditure', 27), ('total expenses', 25), ('purchase of stock-in-trade', 23), ('expenditure', 21), ('expense', 16), ('cost of sales', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('expenditure', 22), ('cost of sales', 22), ('total expenses', 21), ('expense', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 34), ('total expenses', 33), ('cost of sales', 27), ('expenditure', 23), ('expense', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('total expenditure', 31), ('total expenses', 30), ('purchase of stock-in-trade', 27), ('cost of sales', 25), ('expenditure', 19), ('expense', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('purchase of stock-in-trade', 33), ('total expenditure', 31), ('expenditure', 22), ('cost of sales', 22), ('total expenses', 21), ('expense', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 0.0, 'line_item_label': ['Expenses'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [(' depreciation', 45), ('other expenses', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [(' depreciation', 35), ('other expenses', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other expenses', 37), (' depreciation', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [(' depreciation', 35), ('other expenses', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [(' depreciation', 21), ('other expenses', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' depreciation', 67), ('other expenses', 46)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other expenses', 72), (' depreciation', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other expenses', 70), (' depreciation', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other expenses', 55), (' depreciation', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('other expenses', 38), (' depreciation', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 28)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other expenses', 30), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other expenses', 21), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other expenses', 30), (' depreciation', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other expenses', 21), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other expenses', 33), (' depreciation', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [(' depreciation', 45), ('other expenses', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other expenses', 42), (' depreciation', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other expenses', 67), (' depreciation', 46)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [(' depreciation', 35), ('other expenses', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other expenses', 37), (' depreciation', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [(' depreciation', 35), ('other expenses', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [(' depreciation', 21), ('other expenses', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' depreciation', 67), ('other expenses', 46)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other expenses', 72), (' depreciation', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other expenses', 70), (' depreciation', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other expenses', 55), (' depreciation', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('other expenses', 38), (' depreciation', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other expenses', 43), (' depreciation', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other expenses', 44), (' depreciation', 28)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other expenses', 64), (' depreciation', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other expenses', 30), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other expenses', 21), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other expenses', 36), (' depreciation', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other expenses', 30), (' depreciation', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other expenses', 21), (' depreciation', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('rent', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('rent', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('rent', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('rent', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('rent', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('rent', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('rent', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('rent', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('rent', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('rent', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('rent', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('rent', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('rent', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('rent', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('rent', 60)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('rent', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('rent', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('rent', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('rent', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('rent', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('rent', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('rent', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('rent', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('rent', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('rent', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('rent', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('rent', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('rent', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('rent', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('rent', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('rent', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('rent', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('rent', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('other operating ', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('other operating ', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating ', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('other operating ', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('other operating ', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other operating ', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other operating ', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('other operating ', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other operating ', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other operating ', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other operating ', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other operating ', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other operating ', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('other operating ', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other operating ', 45)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other operating ', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('other operating ', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other operating ', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('other operating ', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('other operating ', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other operating ', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other operating ', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('other operating ', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other operating ', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other operating ', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other operating ', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other operating ', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other operating ', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('other operating ', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('other income', 38), ('finance income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other income', 31), ('finance income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('finance income', 36), ('other income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('other income', 35), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('other income', 24), ('finance income', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other income', 33), ('finance income', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other income', 27), ('finance income', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other income', 47), ('finance income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('finance income', 38), ('other income', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other income', 28), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance income', 29), ('other income', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other income', 31), ('finance income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance income', 29), ('other income', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('other income', 38), ('finance income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('other income', 43), ('finance income', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('other income', 12), ('finance income', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('other income', 38), ('finance income', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('other income', 31), ('finance income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('finance income', 36), ('other income', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('other income', 35), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('other income', 24), ('finance income', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('other income', 33), ('finance income', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('other income', 27), ('finance income', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('other income', 47), ('finance income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('finance income', 38), ('other income', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('other income', 30), ('finance income', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('other income', 40), ('finance income', 39)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('other income', 28), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance income', 29), ('other income', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('other income', 41), ('finance income', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('other income', 31), ('finance income', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance income', 29), ('other income', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('finance cost', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('finance cost', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('finance cost', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('finance cost', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('finance cost', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('finance cost', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('finance cost', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('finance cost', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('finance cost', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('finance cost', 45)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('finance cost', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance cost', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('finance cost', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance cost', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -2975.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-2975.0]}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('finance cost', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('finance cost', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('finance cost', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('finance cost', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('finance cost', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('finance cost', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('finance cost', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('finance cost', 43)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('finance cost', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('finance cost', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('finance cost', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('finance cost', 33)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('finance cost', 45)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('finance cost', 37)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('finance cost', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance cost', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('finance cost', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('finance cost', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('finance cost', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': -1425.0, 'line_item_label': ['Finance costs'], 'note_numbers': [nan], 'line_item_value': [-1425.0]}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('amount transferred to retained earnings', 43), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('prior year', 32), ('current tax', 31), ('provision for taxation previous year', 27), ('deferred tax', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 43), ('deferred tax', 42), ('prior year', 40), ('minimum alternate tax credit entitlement', 33), ('current tax', 29), ('provision for taxation previous year', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), ('deferred tax', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('amount transferred to retained earnings', 47), ('minimum alternate tax credit entitlement', 42), ('current tax', 37), ('deferred tax', 32), ('earlier year', 29), ('provision for taxation previous year', 27), ('prior year', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('prior year', 27), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('deferred tax', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('deferred tax', 43), ('prior year', 42), ('earlier year', 38), ('amount transferred to retained earnings', 34), ('provision for taxation previous year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('earlier year', 40), ('amount transferred to retained earnings', 35), ('prior year', 35), ('provision for taxation previous year', 29), ('deferred tax', 27), ('current tax', 25), ('minimum alternate tax credit entitlement', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('earlier year', 35), ('amount transferred to retained earnings', 32), ('deferred tax', 30), ('prior year', 29), ('current tax', 27), ('provision for taxation previous year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 41), ('provision for taxation previous year', 36), ('prior year', 33), ('earlier year', 32), ('current tax', 28), ('deferred tax', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('amount transferred to retained earnings', 47), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('earlier year', 38), ('deferred tax', 34), ('provision for taxation previous year', 29), ('prior year', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('provision for taxation previous year', 59), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year', 31), ('earlier year', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('provision for taxation previous year', 46), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 32), ('earlier year', 28), ('prior year', 26), ('current tax', 23), ('deferred tax', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 35), ('provision for taxation previous year', 31), ('earlier year', 29), ('current tax', 26), ('prior year', 22), ('deferred tax', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), ('amount transferred to retained earnings', 40), ('prior year', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 35), ('current tax', 33), ('deferred tax', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), ('earlier year', 30), ('prior year', 28), ('current tax', 25), ('deferred tax', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 35), ('provision for taxation previous year', 31), ('earlier year', 29), ('current tax', 26), ('prior year', 22), ('deferred tax', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), ('minimum alternate tax credit entitlement', 26), ('prior year', 25), ('provision for taxation previous year', 23), ('amount transferred to retained earnings', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('amount transferred to retained earnings', 43), ('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('prior year', 32), ('current tax', 31), ('provision for taxation previous year', 27), ('deferred tax', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('prior year', 36), ('current tax', 35), ('provision for taxation previous year', 34), ('earlier year', 33), ('deferred tax', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('deferred tax', 27), ('prior year', 25), ('current tax', 24), ('amount transferred to retained earnings', 24), ('earlier year', 22), ('provision for taxation previous year', 17), ('minimum alternate tax credit entitlement', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('earlier year', 45), ('amount transferred to retained earnings', 43), ('deferred tax', 42), ('prior year', 40), ('minimum alternate tax credit entitlement', 33), ('current tax', 29), ('provision for taxation previous year', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('earlier year', 37), ('minimum alternate tax credit entitlement', 34), ('provision for taxation previous year', 32), ('prior year', 32), ('current tax', 31), ('amount transferred to retained earnings', 29), ('deferred tax', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('amount transferred to retained earnings', 47), ('minimum alternate tax credit entitlement', 42), ('current tax', 37), ('deferred tax', 32), ('earlier year', 29), ('provision for taxation previous year', 27), ('prior year', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('prior year', 27), ('current tax', 26), ('earlier year', 25), ('provision for taxation previous year', 24), ('minimum alternate tax credit entitlement', 23), ('amount transferred to retained earnings', 21), ('deferred tax', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('deferred tax', 43), ('prior year', 42), ('earlier year', 38), ('amount transferred to retained earnings', 34), ('provision for taxation previous year', 33), ('current tax', 32), ('minimum alternate tax credit entitlement', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('prior year', 29), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('earlier year', 40), ('amount transferred to retained earnings', 35), ('prior year', 35), ('provision for taxation previous year', 29), ('deferred tax', 27), ('current tax', 25), ('minimum alternate tax credit entitlement', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('earlier year', 35), ('amount transferred to retained earnings', 32), ('deferred tax', 30), ('prior year', 29), ('current tax', 27), ('provision for taxation previous year', 25), ('minimum alternate tax credit entitlement', 23)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('amount transferred to retained earnings', 44), ('minimum alternate tax credit entitlement', 41), ('provision for taxation previous year', 36), ('prior year', 33), ('earlier year', 32), ('current tax', 28), ('deferred tax', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('amount transferred to retained earnings', 47), ('current tax', 39), ('minimum alternate tax credit entitlement', 38), ('earlier year', 38), ('deferred tax', 34), ('provision for taxation previous year', 29), ('prior year', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('amount transferred to retained earnings', 42), ('earlier year', 36), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), ('prior year', 31), ('current tax', 30), ('provision for taxation previous year', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('provision for taxation previous year', 59), ('minimum alternate tax credit entitlement', 46), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 36), ('prior year', 31), ('earlier year', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('provision for taxation previous year', 46), ('minimum alternate tax credit entitlement', 38), ('amount transferred to retained earnings', 32), ('earlier year', 28), ('prior year', 26), ('current tax', 23), ('deferred tax', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 35), ('provision for taxation previous year', 31), ('earlier year', 29), ('current tax', 26), ('prior year', 22), ('deferred tax', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('provision for taxation previous year', 50), ('amount transferred to retained earnings', 40), ('prior year', 38), ('earlier year', 36), ('minimum alternate tax credit entitlement', 35), ('current tax', 33), ('deferred tax', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('provision for taxation previous year', 41), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 37), ('earlier year', 30), ('prior year', 28), ('current tax', 25), ('deferred tax', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 35), ('provision for taxation previous year', 31), ('earlier year', 29), ('current tax', 26), ('prior year', 22), ('deferred tax', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('share of', 29), ('share in', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('prior period', 45), ('exceptional', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('exceptional', 40), ('prior period', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('prior period', 40), ('exceptional', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('exceptional', 35), ('prior period', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('exceptional', 31), ('prior period', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('prior period', 29), ('exceptional', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('prior period', 29), ('exceptional', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional', 33), ('prior period', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('exceptional', 50), ('prior period', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('prior period', 45), ('exceptional', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('prior period', 29), ('exceptional', 27)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('prior period', 33), ('exceptional', 22)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('exceptional', 40), ('prior period', 38)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('prior period', 26), ('exceptional', 24)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('prior period', 40), ('exceptional', 32)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('exceptional', 35), ('prior period', 26)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('prior period', 41), ('exceptional', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('exceptional', 31), ('prior period', 31)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('exceptional', 27), ('prior period', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('prior period', 39), ('exceptional', 29)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional', 36), ('prior period', 36)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('prior period', 25), ('exceptional', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('prior period', 29), ('exceptional', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('prior period', 29), ('exceptional', 16)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('prior period', 24), ('exceptional', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('prior period', 29), ('exceptional', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 13:55:05+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-06 13:55:05+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 13:55:05+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 13:55:05+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = interest received , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other revenue , res_fuzz_match = [('NULL', 25)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = expenses , res_fuzz_match = [('NULL', 20)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = raw materials , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('NULL', 21)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = freight and cart , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = commissions paid , res_fuzz_match = [('NULL', 0)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = service expense , res_fuzz_match = [('NULL', 12)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = selling expense , res_fuzz_match = [('NULL', 40)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other expenses from ordinary activities , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = foreign exchange gains , res_fuzz_match = [('NULL', 8)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = administration expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit before income tax expense , res_fuzz_match = [('NULL', 6)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = profit after income tax expense for the year attributable to the owners of asahi , res_fuzz_match = [('NULL', 3)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = other comprehensive income for the year, net of tax , res_fuzz_match = [('NULL', 4)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year attributable to the of asahi , res_fuzz_match = [('NULL', 7)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - txt_particular = diamond industrial australia pty limited , res_fuzz_match = [('NULL', 15)]
2023-04-06 13:55:05+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-06 14:09:55+0530 - sLogger - DEBUG - process_main_pages started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-06 14:09:55+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Cash at bank | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('noncurrent assets', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 18), ('liabilities', 13), ('equity', 0)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current assets | score 31
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent assets | score 32
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current assets | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity and liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity | score 15
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Deferred tax | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent assets', 18), ('liabilities', 13), ('noncurrent liabilities', 9)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current assets | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent assets | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current assets | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity and liabilities | score 28
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Income Tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current assets | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current liabilities | score 28
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current assets | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Income tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Retained profits | [('current liabilities', 44), ('current assets', 38), ('equity liabilities', 38), ('equity and liabilities', 33), ('liabilities', 32), ('equity', 32), ('noncurrent liabilities', 30), ('noncurrent assets', 23), ('assets', 22)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 47
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 46
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 42
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 41
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 41
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 47
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-04-06 14:09:55+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-06 14:09:55+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-06 14:09:55+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-06 14:09:55+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- in | changes in operating assets and liabilities
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-04-06 14:09:55+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-04-06 14:09:56+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:09:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:09:56+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:09:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:09:56+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:09:56+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:09:56+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2560820.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2560820.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2493840.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2493840.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no                  line_item  year    value
0         NaN     NaN        NaN  $  Finished goods at cost  2021  2493840
1         NaN     NaN        NaN  $  Finished goods at cost  2020  2560820
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                          line_item  year  \
8          NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
1          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
11         NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
4          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   

       value  
8  -325753.0  
1  -312561.0  
11 -212176.0  
4  -217451.0  
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 2 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   

                                            line_item    year    value  
0    Plant and equipment $  Balance at 1 January 2021  2021.0  18659.0  
1                    Plant and equipment $  Additions  2021.0  36864.0  
2         Plant and equipment $  Depreciation expense  2021.0  -8675.0  
3   Plant and equipment $  Balance at 31 December ...  2021.0  46848.0  
4         Motor vehicles $  Balance at 1 January 2021  2021.0   5275.0  
5                         Motor vehicles $  Additions  2021.0      0.0  
6              Motor vehicles $  Depreciation expense  2021.0  -5275.0  
7       Motor vehicles $  Balance at 31 December 2021  2021.0      0.0  
8                  Total $  Balance at 1 January 2021  2021.0  23934.0  
9                                  Total $  Additions  2021.0  36864.0  
10                      Total $  Depreciation expense  2021.0 -13950.0  
11               Total $  Balance at 31 December 2021  2021.0  46848.0  
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                          line_item  year  \
0          NaN     NaN        NaN   $  Plant and equipment - at cost  2021   
1          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
2          NaN     NaN        NaN                                $    2021   
3          NaN     NaN        NaN        $  Motor vehicles - at cost  2021   
4          NaN     NaN        NaN  $  Less: Accumulated depreciation  2021   
5          NaN     NaN        NaN                                $    2021   
6          NaN     NaN        NaN                                $    2021   
7          NaN     NaN        NaN   $  Plant and equipment - at cost  2020   
8          NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
9          NaN     NaN        NaN                                $    2020   
10         NaN     NaN        NaN        $  Motor vehicles - at cost  2020   
11         NaN     NaN        NaN  $  Less: Accumulated depreciation  2020   
12         NaN     NaN        NaN                                $    2020   
13         NaN     NaN        NaN                                $    2020   

       value  
0   359409.0  
1  -312561.0  
2    46848.0  
3   217451.0  
4  -217451.0  
5        0.0  
6    46848.0  
7   344412.0  
8  -325753.0  
9    18659.0  
10  217451.0  
11 -212176.0  
12    5275.0  
13   23934.0  
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 223005.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [223005.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 35118.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [35118.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 2 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   

                                           line_item    year   value  
0    Land and buildings $  Balance at 1 January 2021  2021.0  223005  
1         Land and buildings $  Depreciation expense  2021.0 -187887  
2  Land and buildings $  Balance at 31 December 2021  2021.0   35118  
3                 Total $  Balance at 1 January 2021  2021.0  223005  
4                      Total $  Depreciation expense  2021.0 -187887  
5               Total $  Balance at 31 December 2021  2021.0   35118  
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 160921.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [160921.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 163041.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [163041.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   
6         NaN     NaN        NaN   
7         NaN     NaN        NaN   

                                          line_item  year   value  
0                             $  Deferred tax asset  2021  163041  
1                      $ Movements: Opening balance  2021  160921  
2  $ Movements: Credited to profit or loss (note 4)  2021    2120  
3                      $ Movements: Closing balance  2021  163041  
4                             $  Deferred tax asset  2020  160921  
5                      $ Movements: Opening balance  2020  137413  
6  $ Movements: Credited to profit or loss (note 4)  2020   23508  
7                      $ Movements: Closing balance  2020  160921  
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 212213.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [212213.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 71787.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [71787.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year   value
0         NaN     NaN        NaN  $  Lease liability  2021   71787
1         NaN     NaN        NaN  $  Lease liability  2020  212213
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:58+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:58+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year    value
0         NaN     NaN        NaN  $  Lease liability  2021      0.0
1         NaN     NaN        NaN  $  Lease liability  2020  67186.0
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:58+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 14:09:58+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:58+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:58+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:09:58+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 246776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [246776.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 640070.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [640070.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no          line_item  year   value
0         NaN     NaN        NaN  $  Trade payables  2021  285367
1         NaN     NaN        NaN  $  Other payables  2021  354703
2         NaN     NaN        NaN                $    2021  640070
3         NaN     NaN        NaN  $  Trade payables  2020  157647
4         NaN     NaN        NaN  $  Other payables  2020   89129
5         NaN     NaN        NaN                $    2020  246776
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 119674.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [119674.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no                    line_item  year     value
0         NaN     NaN        NaN  $  Provision for income tax  2021  119674.0
1         NaN     NaN        NaN  $  Provision for income tax  2020       0.0
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 67186.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [67186.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 0.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [0.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year   value
0         NaN     NaN        NaN  $  Lease liability  2021   71787
1         NaN     NaN        NaN  $  Lease liability  2020  212213
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no           line_item  year    value
0         NaN     NaN        NaN  $  Lease liability  2021      0.0
1         NaN     NaN        NaN  $  Lease liability  2020  67186.0
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no                         line_item  year  \
0          NaN     NaN        NaN  $  Plant and equipment - at cost  2021   
10         NaN     NaN        NaN       $  Motor vehicles - at cost  2020   
3          NaN     NaN        NaN       $  Motor vehicles - at cost  2021   
7          NaN     NaN        NaN  $  Plant and equipment - at cost  2020   

       value  
0   359409.0  
10  217451.0  
3   217451.0  
7   344412.0  
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:09:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:09:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 655478.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [655478.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:09:59+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 14:09:59+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 730409.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [730409.0]}
2023-04-06 14:09:59+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-06 14:09:59+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-06 14:09:59+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   
6         NaN     NaN        NaN   
7         NaN     NaN        NaN   
8         NaN     NaN        NaN   
9         NaN     NaN        NaN   

                                       line_item  year   value  
0                           $  Trade receivables  2021  705472  
1  $  Less: Allowance for expected credit losses  2021  -34597  
2                                            $    2021  670875  
3                           $  Other receivables  2021   59534  
4                                            $    2021  730409  
5                           $  Trade receivables  2020  648782  
6  $  Less: Allowance for expected credit losses  2020  -40549  
7                                            $    2020  608233  
8                           $  Other receivables  2020   47245  
9                                            $    2020  655478  
2023-04-06 14:09:59+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-06 14:10:50+0530 - sLogger - DEBUG - process_main_pages started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-06 14:10:50+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Cash at bank | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('noncurrent assets', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 18), ('liabilities', 13), ('equity', 0)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current assets | score 31
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent assets | score 32
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current assets | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity and liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity | score 15
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Deferred tax | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent assets', 18), ('liabilities', 13), ('noncurrent liabilities', 9)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current assets | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent assets | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current assets | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity and liabilities | score 28
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Income Tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current assets | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current liabilities | score 28
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current assets | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Income tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Retained profits | [('current liabilities', 44), ('current assets', 38), ('equity liabilities', 38), ('equity and liabilities', 33), ('liabilities', 32), ('equity', 32), ('noncurrent liabilities', 30), ('noncurrent assets', 23), ('assets', 22)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 47
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 46
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 42
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 41
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 41
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 47
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-04-06 14:10:50+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-06 14:10:50+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-06 14:10:50+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-06 14:10:50+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- in | changes in operating assets and liabilities
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-04-06 14:10:50+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:10:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:10:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:10:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:10:51+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:10:51+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:10:51+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:10:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:10:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:10:51+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2560820.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2560820.0]}
2023-04-06 14:10:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:10:51+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:10:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2493840.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2493840.0]}
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-06 14:16:46+0530 - sLogger - DEBUG - process_main_pages started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-06 14:16:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity and liabilities', 27), ('equity liabilities', 23), ('liabilities', 11)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Cash at bank | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('noncurrent assets', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity liabilities', 18), ('liabilities', 13), ('equity', 0)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current assets | score 31
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent assets | score 32
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current assets | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD non current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity and liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Cash at bank | MATCH WORD equity | score 15
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Inventories | [('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity and liabilities', 27), ('equity liabilities', 23), ('equity', 21), ('liabilities', 11)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('liabilities', 19)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Deferred tax | [('equity and liabilities', 31), ('assets', 29), ('current assets', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent assets', 18), ('liabilities', 13), ('noncurrent liabilities', 9)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current assets | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD current liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent assets | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current assets | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD non current liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity and liabilities | score 28
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Deferred tax | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Income Tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current assets | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD current liabilities | score 28
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current assets | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income Tax | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 42), ('equity and liabilities', 33), ('equity liabilities', 31), ('equity', 24), ('liabilities', 16)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equity', 33), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrent liabilities', 28), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Income tax | [('equity and liabilities', 31), ('liabilities', 27), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('current assets', 18), ('noncurrent assets', 18), ('assets', 14)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current assets | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD current liabilities | score 28
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent assets | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD noncurrent liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current assets | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD non current liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity and liabilities | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Income tax | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('equity', 20), ('assets', 11)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equity', 35), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Provisions | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('equity liabilities', 36), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('equity and liabilities', 31), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('liabilities', 13)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current assets', 32), ('current liabilities', 30), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('liabilities', 25)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Reserves | [('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Retained profits | [('current liabilities', 44), ('current assets', 38), ('equity liabilities', 38), ('equity and liabilities', 33), ('liabilities', 32), ('equity', 32), ('noncurrent liabilities', 30), ('noncurrent assets', 23), ('assets', 22)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current assets | score 47
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD current liabilities | score 46
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent assets | score 42
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD noncurrent liabilities | score 42
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current assets | score 41
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD non current liabilities | score 41
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity and liabilities | score 47
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Retained profits | MATCH WORD equity | score 30
2023-04-06 14:16:46+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('assets', 24)]
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-06 14:16:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-06 14:16:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-06 14:16:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- nan | changes in working capital
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- in | changes in operating assets and liabilities
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the beginning of the financial year | changes in operating assets and liabilities
2023-04-06 14:16:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at the end of the financial year | changes in operating assets and liabilities
2023-04-06 14:16:47+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:16:47+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:16:47+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:16:47+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:16:47+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_utils.py,  function: find_next_note_subnote
2023-04-06 14:16:47+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: ''
2023-04-06 14:16:48+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 29), ('other bank balances', 27), ('bank balances other than cash and cash equivalents', 25), ('bank balances other than above', 25), ('cash and bank balances', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('cash and bank balances', 62), ('cash and cash equivalents', 47), ('other bank balances', 46), ('bank balances other than cash and cash equivalents', 34), ('bank balances other than above', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('bank balances other than above', 22), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2560820.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2560820.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('inventories', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 2493840.0, 'line_item_label': ['Inventories'], 'note_numbers': ['7'], 'line_item_value': [2493840.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other assets', 30), ('other current assets', 29), ('other financial assets', 29), ('other current financial assets', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current financial assets', 41), ('other current assets', 39), ('other financial assets', 39)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 36), ('other current financial assets', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('other current assets', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('net value', 38), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 20), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 223005.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [223005.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('capital work-in-progress', 46), ('capital workinprogress', 46), ('right of use', 44), ('right to use', 44), ('capital work in progress', 38), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('tangible', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('capital work in progress', 32), ('work in progress', 31), ('capital work-in-progress', 30), ('capital workinprogress', 30), ('rightofuse', 22), ('righttouse', 22)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('rightofuse', 100), ('righttouse', 89), ('right of use', 78), ('right to use', 78), ('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('work in progress', 31), ('tangible', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible', 29), ('capital work in progress', 22), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 22), ('capital work-in-progress', 11), ('capital workinprogress', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('capital work-in-progress', 33), ('capital workinprogress', 33), ('capital work in progress', 33), ('tangible', 29), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22), ('work in progress', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 35118.0, 'line_item_label': ['Right-of-use assets'], 'note_numbers': ['9'], 'line_item_value': [35118.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('tangible assets', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tangible assets', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 31), ('goodwill', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill on consolidatio', 30), ('goodwill', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('goodwill on consolidatio', 22), ('goodwill', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 14)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 49), ('intangible assets under development', 42)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets under development', 53), ('intangible', 33), ('intangible under development', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('intangible under development', 44), ('intangible assets under development', 44), ('intangible', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('donations', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('joint ventures and associates', 40), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 160921.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [160921.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('deferred tax', 100), ('deferred tax assets', 75), ('deferred charges', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('deferred tax', 44), ('deferred tax assets', 33), ('deferred charges', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 163041.0, 'line_item_label': ['Deferred tax'], 'note_numbers': ['10'], 'line_item_value': [163041.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('other assets', 54)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('other assets', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other assets', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('non-current assets total', 53)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('non-current assets total', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 212213.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [212213.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('lease liabilities', 71), ('borrowings', 17), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10), ('shortterm borrowings', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('short term debt', 38), ('short-term debt', 33), ('shortterm debt', 33), ('lease liabilities', 30), ('shortterm borrowings', 26), ('borrowings', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100), ('short term debt', 23), ('short-term debt', 16), ('shortterm debt', 16), ('borrowings', 12), ('shortterm borrowings', 7)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('short term debt', 25), ('shortterm borrowings', 24), ('lease liabilities', 20), ('short-term debt', 17), ('shortterm debt', 17), ('borrowings', 13)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('shortterm borrowings', 27), ('lease liabilities', 12), ('short term debt', 10), ('short-term debt', 10), ('shortterm debt', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [16], 'score': 100, 'value': 71787.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['13'], 'line_item_value': [71787.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other financial liabilities', 46), ('other current liabilities', 46), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current maturities of long-term debt', 45), ('current maturities of longterm debt', 45), ('other financial liabilities', 43), ('other current liabilities', 43), ('current maturities', 34)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other financial liabilities', 52), ('other current liabilities', 52), ('current maturities', 25), ('current maturities of long-term debt', 21), ('current maturities of longterm debt', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('current maturities of long-term debt', 28), ('current maturities of longterm debt', 28), ('current maturities', 27), ('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('current maturities of long-term debt', 12), ('current maturities of longterm debt', 12), ('current maturities', 11), ('other financial liabilities', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('note payable(debt)', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('note payable(debt)', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('note payable(debt)', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 246776.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [246776.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('accounts payable', 30), ('small enterprises', 29), ('other trade payables', 25), ('micro enterprises', 19), ('micro enterprises and small enterprises', 15), ('other than micro and small enterprises', 14), ('outstanding dues of micro enterprises and small enterprises', 11), ('outstanding dues of creditors other than', 11), ('total outstanding due of other creditors other than micro and small', 9), ('outstanding dues of creditors other than micro enterprises and small enterprises', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises and small enterprises', 37), ('micro enterprises', 34), ('outstanding dues of micro enterprises and small enterprises', 32), ('other trade payables', 31), ('outstanding dues of creditors other than', 30), ('other than micro and small enterprises', 28), ('outstanding dues of creditors other than micro enterprises and small enterprises', 27), ('total outstanding due of other creditors other than micro and small', 27), ('trade payable', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('micro enterprises and small enterprises', 42), ('total outstanding due of other creditors other than micro and small', 39), ('micro enterprises', 38), ('small enterprises', 38), ('outstanding dues of micro enterprises and small enterprises', 37), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('accounts payable', 40), ('small enterprises', 38), ('trade payable', 35), ('other trade payables', 34), ('micro enterprises', 31), ('micro enterprises and small enterprises', 26), ('other than micro and small enterprises', 26), ('outstanding dues of micro enterprises and small enterprises', 20), ('outstanding dues of creditors other than', 19), ('total outstanding due of other creditors other than micro and small', 17), ('outstanding dues of creditors other than micro enterprises and small enterprises', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('accounts payable', 35), ('other than micro and small enterprises', 31), ('other trade payables', 30), ('trade payable', 29), ('micro enterprises and small enterprises', 27), ('outstanding dues of micro enterprises and small enterprises', 25), ('micro enterprises', 25), ('small enterprises', 25), ('outstanding dues of creditors other than', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 21), ('total outstanding due of other creditors other than micro and small', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('micro enterprises', 38), ('small enterprises', 38), ('trade payable', 22), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 19), ('other trade payables', 17), ('outstanding dues of creditors other than', 16), ('outstanding dues of micro enterprises and small enterprises', 15), ('total outstanding due of other creditors other than micro and small', 12), ('outstanding dues of creditors other than micro enterprises and small enterprises', 11), ('accounts payable', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [15], 'score': 90, 'value': 640070.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['12'], 'line_item_value': [640070.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other liabilities', 67), ('other current liabilities', 46), ('other financial liabilities', 46), ('other current financial liabilities', 35)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43), ('other financial liabilities', 43), ('other liabilities', 41), ('other current financial liabilities', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52), ('other financial liabilities', 52), ('other liabilities', 52), ('other current financial liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other financial liabilities', 34), ('other liabilities', 29), ('other current financial liabilities', 27), ('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15), ('other current financial liabilities', 12), ('other liabilities', 11), ('other financial liabilities', 8)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('tax', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('tax', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('tax', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 119674.0, 'line_item_label': ['Income tax'], 'note_numbers': ['14'], 'line_item_value': [119674.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('other current liabilities', 46)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other current liabilities', 52)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('other current liabilities', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other current liabilities', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current liabilities', 60)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current liabilities', 64)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('current liabilities', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('current liabilities', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [14], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term debt', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term borrowings', 36), ('longterm borrowings', 36), ('borrowings', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 33), ('longterm borrowings', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term borrowings', 33), ('longterm borrowings', 33), ('borrowings', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('(bond)', 13)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('(bond)', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('(bond)', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 67186.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [67186.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('lease liabilities', 100)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('lease liabilities', 12)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('lease liabilities', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [21], 'score': 100, 'value': 0.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['16'], 'line_item_value': [0.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('deferred tax liabilities', 73), ('deferred taxes', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('deferred taxes', 33), ('deferred tax liabilities', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('other long term liabilities', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other long term liabilities', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('minority interest', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('minority interest', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('minority interest', 35)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term liabilities', 44)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term liabilities', 9)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('long term liabilities', 32)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 57), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('perpetual equity instrument', 26), ('equity share capital', 25), ('share capital', 24), ('common stock', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('share capital', 50), ('equity share capital', 45), ('perpetual equity instrument', 32), ('common stock', 24)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67), ('reserves and surplus', 52), ('other equity', 33), ('additional paid in capital', 0), ('additional paid up capital', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('additional paid in capital', 41), ('additional paid up capital', 41), ('other reserves', 40), ('other equity', 32), ('reserves and surplus', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('other reserves', 67)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other reserves', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('reserves surplus', 63), ('other equity', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('other equity', 32), ('reserves surplus', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest', 40), ('noncontrolling interest', 32), ('non controlling interest', 23)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('minority interest', 52), ('non controlling interest', 48), ('noncontrolling interest', 38)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = retained profits , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 23934.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [23934.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = deferred tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = income tax , res_fuzz_match = [('plant property equipment', 28), ('property plant equipment', 28)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 91, 'value': 46848.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['8'], 'line_item_value': [46848.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('cost', 50), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment $ , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles $ , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 1 january 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 40), ('accumulated depreciation', 20), ('net value', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = depreciation expense , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 50), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = balance at 31 december 2021 , res_fuzz_match = [('accumulated depreciation', 38), ('depreciatio', 27), ('net value', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = total $ , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('accumulated depreciation', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('cost', 100), ('gross', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('cost', 0), ('gross', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 7, 10], 'score': [100, 100, 100, 100], 'value': [359409.0, 217451.0, 344412.0, 217451.0], 'label': [' Plant and equipment - at cost', ' Motor vehicles - at cost', ' Plant and equipment - at cost', ' Motor vehicles - at cost'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = plant and equipment - at cost , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = motor vehicles - at cost , res_fuzz_match = [('net value', 38), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows = less: accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 50)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_rows =  , res_fuzz_match = [('depreciatio', 0), ('accumulated depreciation', 0), ('net value', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 4, 8, 11], 'score': [100, 100, 100, 100], 'value': [-312561.0, -217451.0, -325753.0, -212176.0], 'label': [' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation', ' Less: Accumulated depreciation'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-06 14:16:48+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-06 14:16:48+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 655478.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [655478.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-06 14:16:48+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('government subsidies receivable', 38), ('trade receivables', 35), ('receivable', 33), ('billed', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = cash at bank , res_fuzz_match = [('billed', 25), ('account receivables', 22), ('trade receivables', 22), ('government subsidies receivable', 22), ('unbilled', 20), ('receivable', 0)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 48), ('billed', 25), ('unbilled', 20)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables', 44), ('unbilled', 40), ('trade receivables', 33), ('government subsidies receivable', 33), ('receivable', 33), ('billed', 25)]
2023-04-06 14:16:48+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 730409.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['6'], 'line_item_value': [730409.0]}
2023-04-06 14:16:48+0530 - sLogger - DEBUG - CBS fetch_report completed
