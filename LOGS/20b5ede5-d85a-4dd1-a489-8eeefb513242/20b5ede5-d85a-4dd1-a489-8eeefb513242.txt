2023-04-05 19:13:43+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-05 19:13:43+0530 - sLogger - DEBUG - TE process file started
2023-04-05 19:21:57+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-04-05 19:21:57+0530 - sLogger - DEBUG - TE process file started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 19:22:59+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 19:22:59+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity liabilities', 23), ('equity and liabilities', 20), ('liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Cash | [('assets', 44), ('current assets', 24), ('noncurrent assets', 24), ('current liabilities', 22), ('liabilities', 20), ('equity liabilities', 12), ('noncurrent liabilities', 11), ('equity and liabilities', 10), ('equity', 0)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current assets | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent assets | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current assets | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity and liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity | score 0
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Inventories | [('noncurrent assets', 36), ('current liabilities', 35), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity', 27), ('equity and liabilities', 23), ('equity liabilities', 18), ('noncurrent liabilities', 17)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Income tax receivables | [('current liabilities', 33), ('current assets', 28), ('equity liabilities', 28), ('equity', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('liabilities', 18), ('assets', 10), ('equity and liabilities', 6)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current assets | score 37
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current liabilities | score 44
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent assets | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current liabilities | score 49
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity and liabilities | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 55), ('assets', 42), ('noncurrent liabilities', 36), ('equity liabilities', 31), ('equity and liabilities', 28), ('equity', 24), ('liabilities', 8)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 29
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity', 21), ('equity and liabilities', 20), ('equity liabilities', 15), ('liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 49), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('equity liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 13), ('noncurrent liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 24
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity', 33), ('equity liabilities', 32), ('current liabilities', 31), ('noncurrent liabilities', 23), ('liabilities', 22), ('equity and liabilities', 14)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 53
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 54
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Other investments | [('noncurrent assets', 40), ('current assets', 32), ('noncurrent liabilities', 31), ('assets', 24), ('equity liabilities', 24), ('current liabilities', 23), ('equity', 22), ('equity and liabilities', 21), ('liabilities', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current assets | score 37
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent liabilities | score 29
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current liabilities | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity and liabilities | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Retirement benefit assets | [('current assets', 56), ('noncurrent assets', 56), ('assets', 42), ('equity and liabilities', 33), ('equity', 32), ('equity liabilities', 25), ('current liabilities', 24), ('noncurrent liabilities', 18), ('liabilities', 16)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current assets | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current liabilities | score 50
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent assets | score 59
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent liabilities | score 47
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current assets | score 53
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current liabilities | score 46
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity and liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 27
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity liabilities', 33), ('current liabilities', 32), ('equity and liabilities', 29), ('equity', 24), ('liabilities', 12), ('noncurrent liabilities', 8)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 22
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Liabilities and equity | [('equity and liabilities', 100), ('equity liabilities', 87), ('current liabilities', 58), ('liabilities', 52), ('equity', 52), ('noncurrent liabilities', 39), ('assets', 27), ('current assets', 27), ('noncurrent assets', 27)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current liabilities | score 69
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent assets | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent liabilities | score 65
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current assets | score 25
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity and liabilities | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 11)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 56
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 54
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current assets', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('noncurrent assets', 23), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 37
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 51), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 7)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Derivative financial instruments | [('current assets', 38), ('assets', 28), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity and liabilities', 24), ('noncurrent assets', 22), ('liabilities', 20), ('equity', 20)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current assets | score 43
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current liabilities | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent assets | score 40
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current assets | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current liabilities | score 29
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity and liabilities | score 44
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 52
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 57
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('assets', 11), ('equity', 10)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 70
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 65
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 51), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 7)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Provision | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current assets | score 23
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current liabilities | score 24
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent assets | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent liabilities | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current assets | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current liabilities | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity and liabilities | score 24
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity | score 15
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('assets', 19), ('current assets', 14), ('noncurrent assets', 14)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('equity liabilities', 36), ('current liabilities', 35), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 60
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current liabilities', 30), ('current assets', 21), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('current assets', 35), ('noncurrent assets', 35), ('current liabilities', 33), ('equity and liabilities', 30), ('equity liabilities', 26), ('liabilities', 25), ('noncurrent liabilities', 25)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 29
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 26
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 25
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 27
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Retained earnings | [('assets', 38), ('equity and liabilities', 36), ('current assets', 33), ('noncurrent assets', 33), ('current liabilities', 32), ('equity', 24), ('equity liabilities', 17), ('noncurrent liabilities', 16), ('liabilities', 12)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 34
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 36
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Cash flow hedge | [('assets', 32), ('current assets', 22), ('noncurrent assets', 22), ('current liabilities', 14), ('noncurrent liabilities', 14), ('equity and liabilities', 13), ('liabilities', 10), ('equity', 10), ('equity liabilities', 7)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current assets | score 28
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current liabilities | score 18
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent assets | score 25
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent liabilities | score 16
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current assets | score 24
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current liabilities | score 24
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity and liabilities | score 16
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity | score 18
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Other reserves | [('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('current liabilities', 23), ('noncurrent liabilities', 23), ('equity liabilities', 16), ('equity and liabilities', 14), ('equity', 11), ('liabilities', 0)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current assets | score 43
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current liabilities | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent liabilities | score 33
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current assets | score 44
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current liabilities | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity and liabilities | score 25
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity | score 15
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total equity | [('equity', 67), ('equity liabilities', 64), ('equity and liabilities', 55), ('current liabilities', 31), ('assets', 12), ('liabilities', 11), ('current assets', 8), ('noncurrent assets', 8), ('noncurrent liabilities', 8)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 15
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 21
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 32
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - Total equity and liabilities | [('equity and liabilities', 85), ('equity liabilities', 72), ('current liabilities', 49), ('noncurrent liabilities', 43), ('liabilities', 41), ('equity', 41), ('current assets', 28), ('noncurrent assets', 28), ('assets', 21)]
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current assets | score 31
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current liabilities | score 69
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent assets | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current assets | score 30
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current liabilities | score 62
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity and liabilities | score 95
2023-04-05 19:22:59+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity | score 90
2023-04-05 19:22:59+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 19:22:59+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | changes in operating assets and liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | adiustments for movements in working capital
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net income tax refunded/paid) | changes in assets liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from/(used in) operating activities | operating cash flow before working capital changes
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan from Boyne Smelters Limited | operating profit before working capital changes
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from investing activities | operating cash flow before working capital changes
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | movements in working capital
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase/decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 1 January | adjustments for increase decrease in operating liabilities
2023-04-05 19:22:59+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: cannot unpack non-iterable NoneType object
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: 'value'
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 19:23:01+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 19:23:01+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, int found
2023-04-05 19:23:01+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 19), ('bank balances other than cash and cash equivalents', 17), ('bank balances other than above', 13)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 38), ('bank balances other than cash and cash equivalents', 33), ('other bank balances', 24), ('cash and bank balances', 22), ('bank balances other than above', 19)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 19), ('bank balances other than cash and cash equivalents', 17), ('bank balances other than above', 13)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 38), ('bank balances other than cash and cash equivalents', 33), ('other bank balances', 24), ('cash and bank balances', 22), ('bank balances other than above', 19)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 8223876.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [8223876.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326384.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [23326384.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23), ('other current financial assets', 23), ('other financial assets', 17), ('other assets', 7)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23), ('other current financial assets', 23), ('other financial assets', 17), ('other assets', 7)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:26:59+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 19:26:59+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 19:26:59+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:26:59+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:26:59+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 14, 15, 16, 25, 26, 27, 36, 37, 38, 47, 48, 49, 58, 59, 60], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 175870.0, 0.0, -692173.0, 4350726.0, 2761116.0, 0.0, 66861238.0, 49618482.0, 0.0, 53453.0, 36174.0, 0.0, 760279.0, 0.0, -692173.0, 72201566.0, 52415772.0], 'label': ['of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80], 'value': [913989.0, 0.0, -153710.0, 0.0, 760279.0, 0.0, 0.0, 0.0, 0.0, 760279.0, 913989.0], 'label': ['10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work in progress', 27), ('work in progress', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 35), ('righttouse', 35), ('right of use', 35), ('right to use', 35), ('tangible', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('work in progress', 38), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29), ('capital work-in-progress', 28), ('capital workinprogress', 28)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('tangible', 29), ('capital work in progress', 28)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work in progress', 27), ('work in progress', 27)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 35), ('righttouse', 35), ('right of use', 35), ('right to use', 35), ('tangible', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('work in progress', 38), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29), ('capital work-in-progress', 28), ('capital workinprogress', 28)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('tangible', 29), ('capital work in progress', 28)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 17), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 17), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 26)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 26)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('joint ventures and associates', 51), ('investment', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 24404000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [24404000.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('joint ventures and associates', 51), ('investment', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 36)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 90082000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [90082000.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred charges', 27), ('deferred tax', 21)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred charges', 27), ('deferred tax', 21)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 45410954.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 45410954.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 50181357.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 50181357.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 16), ('borrowings', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short term debt', 26), ('short-term debt', 26), ('shortterm debt', 26), ('lease liabilities', 17), ('shortterm borrowings', 15), ('borrowings', 13)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 16), ('borrowings', 14)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short term debt', 26), ('short-term debt', 26), ('shortterm debt', 26), ('lease liabilities', 17), ('shortterm borrowings', 15), ('borrowings', 13)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities', 34), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('current maturities', 27), ('other current liabilities', 23), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities', 34), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('current maturities', 27), ('other current liabilities', 23), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises', 38), ('other trade payables', 30), ('trade payable', 29), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('other than micro and small enterprises', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of micro enterprises and small enterprises', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other trade payables', 38), ('outstanding dues of creditors other than', 29), ('trade payable', 28), ('accounts payable', 26), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 20), ('outstanding dues of micro enterprises and small enterprises', 19), ('total outstanding due of other creditors other than micro and small', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 15), ('small enterprises', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 39221937.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [39221937.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises', 38), ('other trade payables', 30), ('trade payable', 29), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('other than micro and small enterprises', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of micro enterprises and small enterprises', 20)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other trade payables', 38), ('outstanding dues of creditors other than', 29), ('trade payable', 28), ('accounts payable', 26), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 20), ('outstanding dues of micro enterprises and small enterprises', 19), ('total outstanding due of other creditors other than micro and small', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 15), ('small enterprises', 15)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 47911992.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [47911992.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 23), ('other liabilities', 11)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 23), ('other liabilities', 11)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:00+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 19:27:00+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:00+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:00+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 19:27:00+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 71), ('deferred taxes', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 6532676.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [6532676.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 71), ('deferred taxes', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 26856670.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [26856670.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other long term liabilities', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other long term liabilities', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('minority interest', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('minority interest', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('minority interest', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('minority interest', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('equity share capital', 57), ('perpetual equity instrument', 38), ('share capital', 36), ('common stock', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('share capital', 40), ('equity share capital', 31), ('common stock', 23), ('perpetual equity instrument', 5)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('share capital', 35), ('equity share capital', 27), ('common stock', 25), ('perpetual equity instrument', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('equity share capital', 57), ('perpetual equity instrument', 38), ('share capital', 36), ('common stock', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('share capital', 40), ('equity share capital', 31), ('common stock', 23), ('perpetual equity instrument', 5)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('share capital', 35), ('equity share capital', 27), ('common stock', 25), ('perpetual equity instrument', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('additional paid in capital', 42), ('additional paid up capital', 42), ('reserves and surplus', 41), ('other reserves', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('additional paid in capital', 27), ('additional paid up capital', 27), ('other reserves', 23), ('reserves and surplus', 13)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100), ('reserves and surplus', 48), ('other equity', 42), ('additional paid in capital', 14), ('additional paid up capital', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': -138406.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [-138406.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('additional paid in capital', 42), ('additional paid up capital', 42), ('reserves and surplus', 41), ('other reserves', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('additional paid in capital', 27), ('additional paid up capital', 27), ('other reserves', 23), ('reserves and surplus', 13)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100), ('reserves and surplus', 48), ('other equity', 42), ('additional paid in capital', 14), ('additional paid up capital', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 45836194.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [45836194.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['share premium', 'securities premium'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['share premium', 'securities premium'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other reserves', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other reserves', 23)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': -138406.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [-138406.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other reserves', 14)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other reserves', 23)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 45836194.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [45836194.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('reserves surplus', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('reserves surplus', 7)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('reserves surplus', 48), ('other equity', 42)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('reserves surplus', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('reserves surplus', 7)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('reserves surplus', 48), ('other equity', 42)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest', 26), ('non controlling interest', 22), ('noncontrolling interest', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('non controlling interest', 24), ('minority interest', 7), ('noncontrolling interest', 6)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest', 46), ('non controlling interest', 44), ('noncontrolling interest', 39)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest', 26), ('non controlling interest', 22), ('noncontrolling interest', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('non controlling interest', 24), ('minority interest', 7), ('noncontrolling interest', 6)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest', 46), ('non controlling interest', 44), ('noncontrolling interest', 39)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 41)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('shareholders equity(a)', 32)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 41)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('shareholders equity(a)', 32)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80], 'value': [913989.0, 0.0, -153710.0, 0.0, 760279.0, 0.0, 0.0, 0.0, 0.0, 760279.0, 913989.0], 'label': ['10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 14, 15, 16, 25, 26, 27, 36, 37, 38, 47, 48, 49, 58, 59, 60], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 175870.0, 0.0, -692173.0, 4350726.0, 2761116.0, 0.0, 66861238.0, 49618482.0, 0.0, 53453.0, 36174.0, 0.0, 760279.0, 0.0, -692173.0, 72201566.0, 52415772.0], 'label': ['of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:01+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 19:27:01+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('account receivables', 25), ('trade receivables', 25), ('government subsidies receivable', 25), ('receivable', 25), ('billed', 0), ('unbilled', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 82), ('account receivables', 71), ('government subsidies receivable', 62), ('billed', 25), ('unbilled', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 18360971.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivables'], 'note_numbers': ['8', nan], 'line_item_value': [18170313.0, 190658.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:01+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('account receivables', 25), ('trade receivables', 25), ('government subsidies receivable', 25), ('receivable', 25), ('billed', 0), ('unbilled', 0)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 82), ('account receivables', 71), ('government subsidies receivable', 62), ('billed', 25), ('unbilled', 20)]
2023-04-05 19:27:01+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 9232194.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivables'], 'note_numbers': ['8', nan], 'line_item_value': [9232194.0, 0.0]}
2023-04-05 19:27:01+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 46), ('from trading business', 38), ('sale of products', 27), ('net sales', 25), ('transmission and distribution business', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 35), ('transmission and distribution business', 31), ('from trading business', 31), ('revenue from operations', 30), ('net sales', 16), ('sale of products', 14)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('revenue from operations', 32), ('transmission and distribution business', 23), ('from trading business', 20), ('net sales', 17), ('revenue from contracts with customers', 17), ('sale of products', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('transmission and distribution business', 30), ('sale of products', 26), ('revenue from operations', 24), ('net sales', 24), ('revenue from contracts with customers', 24), ('from trading business', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 48), ('from trading business', 43), ('sale of products', 24), ('transmission and distribution business', 16), ('net sales', 13)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('sale of products', 37), ('from trading business', 33), ('net sales', 26), ('revenue from contracts with customers', 26), ('revenue from operations', 19), ('transmission and distribution business', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('net sales', 23)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('sale of products', 22), ('revenue from operations', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('from trading business', 36), ('sale of products', 33), ('revenue from operations', 30), ('transmission and distribution business', 27), ('revenue from contracts with customers', 21), ('net sales', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 31), ('revenue from operations', 25), ('sale of products', 21), ('from trading business', 20), ('net sales', 17), ('transmission and distribution business', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('revenue from operations', 37), ('sale of products', 36), ('net sales', 34), ('revenue from contracts with customers', 24), ('transmission and distribution business', 18), ('from trading business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('from trading business', 41), ('revenue from contracts with customers', 35), ('revenue from operations', 27), ('sale of products', 15), ('transmission and distribution business', 10), ('net sales', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('transmission and distribution business', 46), ('from trading business', 38), ('revenue from operations', 29), ('net sales', 29), ('sale of products', 27), ('revenue from contracts with customers', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 33), ('revenue from operations', 29), ('net sales', 25), ('transmission and distribution business', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 144455407.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4'], 'line_item_value': [144455407.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 46), ('from trading business', 38), ('sale of products', 27), ('net sales', 25), ('transmission and distribution business', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 35), ('transmission and distribution business', 31), ('from trading business', 31), ('revenue from operations', 30), ('net sales', 16), ('sale of products', 14)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('revenue from operations', 32), ('transmission and distribution business', 23), ('from trading business', 20), ('net sales', 17), ('revenue from contracts with customers', 17), ('sale of products', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('transmission and distribution business', 30), ('sale of products', 26), ('revenue from operations', 24), ('net sales', 24), ('revenue from contracts with customers', 24), ('from trading business', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 48), ('from trading business', 43), ('sale of products', 24), ('transmission and distribution business', 16), ('net sales', 13)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('sale of products', 37), ('from trading business', 33), ('net sales', 26), ('revenue from contracts with customers', 26), ('revenue from operations', 19), ('transmission and distribution business', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('net sales', 23)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('sale of products', 22), ('revenue from operations', 20)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('from trading business', 36), ('sale of products', 33), ('revenue from operations', 30), ('transmission and distribution business', 27), ('revenue from contracts with customers', 21), ('net sales', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 31), ('revenue from operations', 25), ('sale of products', 21), ('from trading business', 20), ('net sales', 17), ('transmission and distribution business', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('revenue from operations', 37), ('sale of products', 36), ('net sales', 34), ('revenue from contracts with customers', 24), ('transmission and distribution business', 18), ('from trading business', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('from trading business', 41), ('revenue from contracts with customers', 35), ('revenue from operations', 27), ('sale of products', 15), ('transmission and distribution business', 10), ('net sales', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('transmission and distribution business', 46), ('from trading business', 38), ('revenue from operations', 29), ('net sales', 29), ('sale of products', 27), ('revenue from contracts with customers', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 33), ('revenue from operations', 29), ('net sales', 25), ('transmission and distribution business', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 160766403.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4'], 'line_item_value': [160766403.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('cost of sales', 29), ('purchase of stock-in-trade', 24), ('expenditure', 24), ('total expenses', 23), ('total expenditure', 21), ('expense', 16)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('total expenses', 33), ('expenditure', 30), ('expense', 28), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('cost of sales', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('expense', 57), ('total expenses', 44), ('expenditure', 40), ('total expenditure', 32), ('purchase of stock-in-trade', 12), ('cost of sales', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('expense', 38), ('total expenses', 32), ('expenditure', 28), ('total expenditure', 24), ('purchase of stock-in-trade', 18), ('cost of sales', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('total expenditure', 26), ('cost of sales', 26), ('total expenses', 24), ('expense', 21), ('expenditure', 19), ('purchase of stock-in-trade', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('expenditure', 16), ('total expenses', 15), ('total expenditure', 13), ('expense', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('total expenses', 36), ('total expenditure', 33), ('cost of sales', 33), ('purchase of stock-in-trade', 30), ('expenditure', 22), ('expense', 12)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('total expenditure', 30), ('cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('total expenditure', 25), ('total expenses', 24), ('cost of sales', 22), ('purchase of stock-in-trade', 17), ('expenditure', 16), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('expenditure', 32), ('expense', 30), ('total expenditure', 28), ('total expenses', 26), ('cost of sales', 22), ('purchase of stock-in-trade', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('purchase of stock-in-trade', 36), ('cost of sales', 35), ('expenditure', 17), ('total expenditure', 13), ('expense', 10), ('total expenses', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 29), ('cost of sales', 29), ('total expenses', 27), ('expenditure', 23), ('expense', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('expenditure', 24), ('expense', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -138314663.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-138314663.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('cost of sales', 29), ('purchase of stock-in-trade', 24), ('expenditure', 24), ('total expenses', 23), ('total expenditure', 21), ('expense', 16)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('total expenses', 33), ('expenditure', 30), ('expense', 28), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('cost of sales', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('expense', 57), ('total expenses', 44), ('expenditure', 40), ('total expenditure', 32), ('purchase of stock-in-trade', 12), ('cost of sales', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('expense', 38), ('total expenses', 32), ('expenditure', 28), ('total expenditure', 24), ('purchase of stock-in-trade', 18), ('cost of sales', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('total expenditure', 26), ('cost of sales', 26), ('total expenses', 24), ('expense', 21), ('expenditure', 19), ('purchase of stock-in-trade', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('expenditure', 16), ('total expenses', 15), ('total expenditure', 13), ('expense', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('total expenses', 36), ('total expenditure', 33), ('cost of sales', 33), ('purchase of stock-in-trade', 30), ('expenditure', 22), ('expense', 12)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('total expenditure', 30), ('cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('total expenditure', 25), ('total expenses', 24), ('cost of sales', 22), ('purchase of stock-in-trade', 17), ('expenditure', 16), ('expense', 11)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('expenditure', 32), ('expense', 30), ('total expenditure', 28), ('total expenses', 26), ('cost of sales', 22), ('purchase of stock-in-trade', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('purchase of stock-in-trade', 36), ('cost of sales', 35), ('expenditure', 17), ('total expenditure', 13), ('expense', 10), ('total expenses', 8)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 29), ('cost of sales', 29), ('total expenses', 27), ('expenditure', 23), ('expense', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('expenditure', 24), ('expense', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -147518859.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-147518859.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other expenses', 33), (' depreciation', 22)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' depreciation', 42), ('other expenses', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 15), (' depreciation', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 24)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 14)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other expenses', 31), (' depreciation', 12)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other expenses', 38), (' depreciation', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other expenses', 18), (' depreciation', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -1018529.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-1018529.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:10+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other expenses', 33), (' depreciation', 22)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' depreciation', 42), ('other expenses', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 15), (' depreciation', 9)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 24)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 19)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 14)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other expenses', 31), (' depreciation', 12)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other expenses', 38), (' depreciation', 10)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other expenses', 18), (' depreciation', 15)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-05 19:27:10+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -946543.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-946543.0]}
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:10+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:10+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 19:27:10+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('rent', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('rent', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('rent', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('rent', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('rent', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('rent', 14)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('rent', 12)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('rent', 13)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('rent', 11)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('rent', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('rent', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('rent', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('rent', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('rent', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('rent', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('rent', 14)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('rent', 12)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('rent', 13)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('rent', 11)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('rent', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other operating ', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other operating ', 16)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('other operating ', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other operating ', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other operating ', 29)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating ', 47)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other operating ', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other operating ', 33)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other operating ', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other operating ', 40)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other operating ', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other operating ', 16)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('other operating ', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other operating ', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other operating ', 29)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating ', 47)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other operating ', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other operating ', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other operating ', 33)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other operating ', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other operating ', 40)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 14)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other income', 23), ('finance income', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance income', 32), ('other income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), ('finance income', 36)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 34), ('finance income', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other income', 37), ('finance income', 31)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other income', 40), ('finance income', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance income', 27), ('other income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), ('finance income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 425632.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [425632.0]}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 14)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other income', 23), ('finance income', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance income', 32), ('other income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), ('finance income', 36)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 34), ('finance income', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other income', 37), ('finance income', 31)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other income', 40), ('finance income', 15)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance income', 27), ('other income', 18)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), ('finance income', 27)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 236082.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [236082.0]}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 19:27:11+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 19:27:11+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('finance cost', 8)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance cost', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('finance cost', 29)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('finance cost', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('finance cost', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance cost', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('finance cost', 31)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 85, 'value': -3797848.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '5'], 'line_item_value': [-2111740.0, -1686108.0]}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('finance cost', 8)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance cost', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('finance cost', 29)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('finance cost', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('finance cost', 21)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('finance cost', 32)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance cost', 23)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('finance cost', 31)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 85, 'value': -4882658.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '5'], 'line_item_value': [-2559370.0, -2323288.0]}
2023-04-05 19:27:11+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 19:27:11+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = interest income , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('bank facilities', 30), ('loan', 29), ('bonds', 29), ('cash credit', 27), ('borrowings', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = finance income , res_fuzz_match = [('loan', 50), ('bank facilities', 40), ('cash credit', 33), ('bonds', 29), ('interest', 25), ('borrowings', 22), ('debenture', 12), ('debt', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = unwinding of discount and changes in discount rate , res_fuzz_match = [('loan', 50), ('bonds', 50), ('bank facilities', 40), ('debenture', 38), ('interest', 38), ('cash credit', 36), ('debt', 33), ('borrowings', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = finance costs , res_fuzz_match = [('loan', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debt', 25), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = net finance costs , res_fuzz_match = [('loan', 50), ('debt', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = interest income , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('bank facilities', 30), ('loan', 29), ('bonds', 29), ('cash credit', 27), ('borrowings', 22)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = finance income , res_fuzz_match = [('loan', 50), ('bank facilities', 40), ('cash credit', 33), ('bonds', 29), ('interest', 25), ('borrowings', 22), ('debenture', 12), ('debt', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = unwinding of discount and changes in discount rate , res_fuzz_match = [('loan', 50), ('bonds', 50), ('bank facilities', 40), ('debenture', 38), ('interest', 38), ('cash credit', 36), ('debt', 33), ('borrowings', 17)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = finance costs , res_fuzz_match = [('loan', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debt', 25), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = net finance costs , res_fuzz_match = [('loan', 50), ('debt', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 19:27:11+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [236082.0, 425632.0], 'label': [' Interest income', ' Interest income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-04-05 20:06:46+0530 - sLogger - DEBUG - process_main_pages started
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring started
2023-04-05 20:06:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-04-05 20:06:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('current assets', 56), ('noncurrent assets', 56), ('equity', 36), ('equity and liabilities', 27), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('assets', 56), ('current liabilities', 52), ('noncurrent liabilities', 44), ('equity', 32), ('equity liabilities', 23), ('equity and liabilities', 20), ('liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Cash | [('assets', 44), ('current assets', 24), ('noncurrent assets', 24), ('current liabilities', 22), ('liabilities', 20), ('equity liabilities', 12), ('noncurrent liabilities', 11), ('equity and liabilities', 10), ('equity', 0)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current assets | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD current liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent assets | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD noncurrent liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current assets | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD non current liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity and liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash | MATCH WORD equity | score 0
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Inventories | [('noncurrent assets', 36), ('current liabilities', 35), ('assets', 29), ('current assets', 27), ('liabilities', 27), ('equity', 27), ('equity and liabilities', 23), ('equity liabilities', 18), ('noncurrent liabilities', 17)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Income tax receivables | [('current liabilities', 33), ('current assets', 28), ('equity liabilities', 28), ('equity', 27), ('noncurrent liabilities', 27), ('noncurrent assets', 21), ('liabilities', 18), ('assets', 10), ('equity and liabilities', 6)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current assets | score 37
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD current liabilities | score 44
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent assets | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD non current liabilities | score 49
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity and liabilities | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Income tax receivables | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 55), ('assets', 42), ('noncurrent liabilities', 36), ('equity liabilities', 31), ('equity and liabilities', 28), ('equity', 24), ('liabilities', 8)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 29
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('current liabilities', 30), ('equity', 21), ('equity and liabilities', 20), ('equity liabilities', 15), ('liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Trade and other receivables | [('equity and liabilities', 41), ('current assets', 34), ('current liabilities', 28), ('noncurrent assets', 23), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('liabilities', 14), ('noncurrent liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 49), ('equity', 40), ('current assets', 38), ('noncurrent assets', 32), ('equity liabilities', 32), ('current liabilities', 26), ('assets', 21), ('liabilities', 13), ('noncurrent liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 24
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Intangible assets | [('current assets', 64), ('noncurrent assets', 64), ('assets', 59), ('equity', 33), ('equity liabilities', 32), ('current liabilities', 31), ('noncurrent liabilities', 23), ('liabilities', 22), ('equity and liabilities', 14)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current assets | score 58
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD current liabilities | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent assets | score 53
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD noncurrent liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current assets | score 54
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD non current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity and liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Intangible assets | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Other investments | [('noncurrent assets', 40), ('current assets', 32), ('noncurrent liabilities', 31), ('assets', 24), ('equity liabilities', 24), ('current liabilities', 23), ('equity', 22), ('equity and liabilities', 21), ('liabilities', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current assets | score 37
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD current liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD noncurrent liabilities | score 29
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD non current liabilities | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity and liabilities | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other investments | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Retirement benefit assets | [('current assets', 56), ('noncurrent assets', 56), ('assets', 42), ('equity and liabilities', 33), ('equity', 32), ('equity liabilities', 25), ('current liabilities', 24), ('noncurrent liabilities', 18), ('liabilities', 16)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current assets | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD current liabilities | score 50
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent assets | score 59
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD noncurrent liabilities | score 47
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current assets | score 53
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD non current liabilities | score 46
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity and liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retirement benefit assets | MATCH WORD equity | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Other noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 30), ('equity', 24), ('equity and liabilities', 22), ('equity liabilities', 19), ('liabilities', 8)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other noncurrent assets | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrent liabilities', 55), ('assets', 42), ('current liabilities', 36), ('equity and liabilities', 28), ('equity liabilities', 25), ('equity', 24), ('liabilities', 8)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 27
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('equity liabilities', 33), ('current liabilities', 32), ('equity and liabilities', 29), ('equity', 24), ('liabilities', 12), ('noncurrent liabilities', 8)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 22
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Liabilities and equity | [('equity and liabilities', 100), ('equity liabilities', 87), ('current liabilities', 58), ('liabilities', 52), ('equity', 52), ('noncurrent liabilities', 39), ('assets', 27), ('current assets', 27), ('noncurrent assets', 27)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current liabilities | score 69
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent assets | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent liabilities | score 65
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current assets | score 25
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity and liabilities | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('equity liabilities', 67), ('liabilities', 60), ('equity and liabilities', 58), ('current assets', 52), ('noncurrent liabilities', 43), ('noncurrent assets', 30), ('equity', 30), ('assets', 11)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 56
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 54
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current assets', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('noncurrent assets', 23), ('assets', 22), ('liabilities', 21), ('equity', 14)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 37
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 51), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 7)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Derivative financial instruments | [('current assets', 38), ('assets', 28), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equity and liabilities', 24), ('noncurrent assets', 22), ('liabilities', 20), ('equity', 20)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current assets | score 43
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD current liabilities | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent assets | score 40
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD noncurrent liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current assets | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD non current liabilities | score 29
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity and liabilities | score 44
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Derivative financial instruments | MATCH WORD equity | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('equity liabilities', 55), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 52
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 57
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('assets', 11), ('equity', 10)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 70
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 65
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 51), ('liabilities', 43), ('noncurrent liabilities', 33), ('equity', 29), ('current assets', 23), ('noncurrent assets', 23), ('assets', 7)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Provision | [('current liabilities', 20), ('assets', 18), ('liabilities', 17), ('equity', 17), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current assets | score 23
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD current liabilities | score 24
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent assets | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD noncurrent liabilities | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current assets | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD non current liabilities | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity and liabilities | score 24
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Provision | MATCH WORD equity | score 15
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Deferred tax liabilities | [('liabilities', 55), ('equity and liabilities', 55), ('equity liabilities', 55), ('current liabilities', 53), ('noncurrent liabilities', 47), ('equity', 27), ('assets', 19), ('current assets', 14), ('noncurrent assets', 14)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD current liabilities | score 74
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent assets | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD noncurrent liabilities | score 70
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current assets | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD non current liabilities | score 68
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity and liabilities | score 65
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Deferred tax liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrent assets', 55), ('liabilities', 46), ('current assets', 42), ('equity liabilities', 36), ('current liabilities', 35), ('equity and liabilities', 32), ('assets', 16), ('equity', 15)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 60
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('equity', 22)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equity liabilities', 63), ('equity and liabilities', 52), ('assets', 36), ('liabilities', 33), ('current liabilities', 30), ('current assets', 21), ('noncurrent assets', 21), ('noncurrent liabilities', 20)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('current assets', 35), ('noncurrent assets', 35), ('current liabilities', 33), ('equity and liabilities', 30), ('equity liabilities', 26), ('liabilities', 25), ('noncurrent liabilities', 25)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 29
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 26
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 25
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 27
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Retained earnings | [('assets', 38), ('equity and liabilities', 36), ('current assets', 33), ('noncurrent assets', 33), ('current liabilities', 32), ('equity', 24), ('equity liabilities', 17), ('noncurrent liabilities', 16), ('liabilities', 12)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 34
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 36
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Cash flow hedge | [('assets', 32), ('current assets', 22), ('noncurrent assets', 22), ('current liabilities', 14), ('noncurrent liabilities', 14), ('equity and liabilities', 13), ('liabilities', 10), ('equity', 10), ('equity liabilities', 7)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current assets | score 28
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD current liabilities | score 18
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent assets | score 25
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD noncurrent liabilities | score 16
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current assets | score 24
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD non current liabilities | score 24
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity and liabilities | score 16
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Cash flow hedge | MATCH WORD equity | score 18
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Other reserves | [('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('current liabilities', 23), ('noncurrent liabilities', 23), ('equity liabilities', 16), ('equity and liabilities', 14), ('equity', 11), ('liabilities', 0)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current assets | score 43
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD current liabilities | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent assets | score 45
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD noncurrent liabilities | score 33
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current assets | score 44
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD non current liabilities | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity and liabilities | score 25
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Other reserves | MATCH WORD equity | score 15
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total equity | [('equity', 67), ('equity liabilities', 64), ('equity and liabilities', 55), ('current liabilities', 31), ('assets', 12), ('liabilities', 11), ('current assets', 8), ('noncurrent assets', 8), ('noncurrent liabilities', 8)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 15
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 21
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 32
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - Total equity and liabilities | [('equity and liabilities', 85), ('equity liabilities', 72), ('current liabilities', 49), ('noncurrent liabilities', 43), ('liabilities', 41), ('equity', 41), ('current assets', 28), ('noncurrent assets', 28), ('assets', 21)]
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current assets | score 31
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD current liabilities | score 69
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent assets | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD noncurrent liabilities | score 64
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current assets | score 30
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD non current liabilities | score 62
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity and liabilities | score 95
2023-04-05 20:06:46+0530 - sLogger - DEBUG - particular_text Total equity and liabilities | MATCH WORD equity | score 90
2023-04-05 20:06:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-04-05 20:06:46+0530 - sLogger - DEBUG - set_section_details started
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | changes in operating assets and liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers | adiustments for movements in working capital
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees | changes in operating assets and liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | adiustments for movements in working capital
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net income tax refunded/paid) | changes in assets liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from/(used in) operating activities | operating cash flow before working capital changes
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | changes in operating assets and liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment | operating profit before changes in assets and liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Repayment of loan from Boyne Smelters Limited | operating profit before working capital changes
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from investing activities | operating cash flow before working capital changes
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Dividends paid | movements in working capital
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase/decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 1 January | adjustments for increase decrease in operating liabilities
2023-04-05 20:06:47+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 December | changes in operating assets and liabilities
2023-04-05 20:06:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 20:06:48+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 20:06:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 20:06:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 20:06:48+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 20:06:48+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 20:06:48+0530 - sLogger - ERROR - error occured: 'value'
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: local variable 'e' referenced before assignment
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: 'value'
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, float found
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: sequence item 0: expected str instance, int found
2023-04-05 20:06:49+0530 - sLogger - DEBUG - process_main_pages completed
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 19), ('bank balances other than cash and cash equivalents', 17), ('bank balances other than above', 13)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 38), ('bank balances other than cash and cash equivalents', 33), ('other bank balances', 24), ('cash and bank balances', 22), ('bank balances other than above', 19)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash and cash equivalents', 31), ('bank balances other than cash and cash equivalents', 20), ('other bank balances', 18), ('cash and bank balances', 16), ('bank balances other than above', 12)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('cash and cash equivalents', 24), ('bank balances other than above', 20), ('other bank balances', 20), ('bank balances other than cash and cash equivalents', 18), ('cash and bank balances', 18)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('cash and bank balances', 33), ('cash and cash equivalents', 32), ('other bank balances', 19), ('bank balances other than cash and cash equivalents', 17), ('bank balances other than above', 13)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('bank balances other than above', 45), ('cash and cash equivalents', 42), ('other bank balances', 41), ('bank balances other than cash and cash equivalents', 36), ('cash and bank balances', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and cash equivalents', 20), ('cash and bank balances', 14), ('bank balances other than cash and cash equivalents', 11), ('bank balances other than above', 11)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('cash and cash equivalents', 38), ('bank balances other than cash and cash equivalents', 33), ('other bank balances', 24), ('cash and bank balances', 22), ('bank balances other than above', 19)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 8223876.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [8223876.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('inventories', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('inventories', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('inventories', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 23326384.0, 'line_item_label': ['Inventories'], 'note_numbers': ['9'], 'line_item_value': [23326384.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:49+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   
12         NaN     NaN        NaN   
13         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   
16         NaN     NaN        NaN   
17         NaN     NaN        NaN   
18         NaN     NaN        NaN   
19         NaN     NaN        NaN   

                                            line_item  year     value  
0             $ Stock on hand (Lines 1 and 2) Alumina  2021   2057686  
1           $ Stock on hand (Lines 1 and 2) Hot metal  2021    257507  
2          $ Stock on hand (Lines 1 and 2) Cast metal  2021  10114689  
3                    $ Stock on hand (Lines 1 and 2)   2021  12429882  
4                    $ Stock on hand (Line 3) Alumina  2021   2192675  
5                  $ Stock on hand (Line 3) Hot metal  2021    144070  
6                 $ Stock on hand (Line 3) Cast metal  2021   4831108  
7                           $ Stock on hand (Line 3)   2021   7167853  
8                                    $ Others At cost  2021   3728649  
9   $ Others Total inventories at the lower cost a...  2021  23326384  
10            $ Stock on hand (Lines 1 and 2) Alumina  2020   1151731  
11          $ Stock on hand (Lines 1 and 2) Hot metal  2020    146932  
12         $ Stock on hand (Lines 1 and 2) Cast metal  2020   1771778  
13                   $ Stock on hand (Lines 1 and 2)   2020   3070441  
14                   $ Stock on hand (Line 3) Alumina  2020   1255032  
15                 $ Stock on hand (Line 3) Hot metal  2020     65729  
16                $ Stock on hand (Line 3) Cast metal  2020    926588  
17                          $ Stock on hand (Line 3)   2020   2247349  
18                                   $ Others At cost  2020   2906086  
19  $ Others Total inventories at the lower cost a...  2020   8223876  
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense', 'prepaid expenditure', 'prepayments', 'prepaid']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23), ('other current financial assets', 23), ('other financial assets', 17), ('other assets', 7)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['other current assets', 'other financial assets', 'other current financial assets', 'other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets', 62), ('other current assets', 42), ('other financial assets', 42), ('other current financial assets', 31)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81), ('other current financial assets', 65), ('other assets', 58), ('other financial assets', 50)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other assets', 40), ('other current assets', 26), ('other financial assets', 26), ('other current financial assets', 19)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42), ('other current assets', 39), ('other financial assets', 39), ('other current financial assets', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets', 40), ('other current assets', 36), ('other financial assets', 29), ('other current financial assets', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23), ('other current financial assets', 23), ('other financial assets', 17), ('other assets', 7)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['other current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other current assets', 42)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('other current assets', 81)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('other current assets', 26)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other current assets', 39)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other current assets', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('other current assets', 23)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 81, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['current assets']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = ca_total_current_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['current assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('current assets', 56)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('current assets', 100)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('current assets', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('current assets', 34)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('current assets', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('current assets', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 0.0, 'line_item_label': ['Current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('accumulated depreciation', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('depreciatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 14, 15, 16, 25, 26, 27, 36, 37, 38, 47, 48, 49, 58, 59, 60], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 175870.0, 0.0, -692173.0, 4350726.0, 2761116.0, 0.0, 66861238.0, 49618482.0, 0.0, 53453.0, 36174.0, 0.0, 760279.0, 0.0, -692173.0, 72201566.0, 52415772.0], 'label': ['of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('net value', 50), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('cost', 25), ('gross', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('net value', 25), ('gross', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 0)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('net value', 38), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('net value', 50), ('gross', 40), ('cost', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44), ('net value', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40), ('net value', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('cost', 25), ('gross', 20)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80], 'value': [913989.0, 0.0, -153710.0, 0.0, 760279.0, 0.0, 0.0, 0.0, 0.0, 760279.0, 913989.0], 'label': ['10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 2 elements
2023-04-05 20:06:49+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
37         NaN     NaN        NaN   
5          NaN     NaN        NaN   
36         NaN     NaN        NaN   
38         NaN     NaN        NaN   
26         NaN     NaN        NaN   
27         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   
16         NaN     NaN        NaN   
25         NaN     NaN        NaN   
58         NaN     NaN        NaN   
59         NaN     NaN        NaN   
60         NaN     NaN        NaN   

                                            line_item    year       value  
3   10. Property, plant and equipment Land $ of At...  2021.0         0.0  
4   10. Property, plant and equipment Land $ of At...  2021.0    175870.0  
37  10. Property, plant and equipment Motor vehicl...  2021.0     53453.0  
5   10. Property, plant and equipment Land $ At31 ...  2021.0         0.0  
36  10. Property, plant and equipment Motor vehicl...  2021.0         0.0  
38  10. Property, plant and equipment Motor vehicl...  2021.0     36174.0  
26  10. Property, plant and equipment Plant and eq...  2021.0  66861238.0  
27  10. Property, plant and equipment Plant and eq...  2021.0  49618482.0  
14  10. Property, plant and equipment Building and...  2021.0   -692173.0  
15  10. Property, plant and equipment Building and...  2021.0   4350726.0  
16  10. Property, plant and equipment Building and...  2021.0   2761116.0  
25  10. Property, plant and equipment Plant and eq...  2021.0         0.0  
58  10. Property, plant and equipment Total $ of A...  2021.0   -692173.0  
59  10. Property, plant and equipment Total $ of A...  2021.0  72201566.0  
60  10. Property, plant and equipment Total $ At31...  2021.0  52415772.0  
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:49+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
..         ...     ...        ...   
61         NaN     NaN        NaN   
62         NaN     NaN        NaN   
63         NaN     NaN        NaN   
64         NaN     NaN        NaN   
65         NaN     NaN        NaN   

                                            line_item    year       value  
0   10. Property, plant and equipment Land $  At1 ...  2021.0    175870.0  
1   10. Property, plant and equipment Land $  Addi...  2021.0         0.0  
2   10. Property, plant and equipment Land $  Disp...  2021.0         0.0  
3   10. Property, plant and equipment Land $ of At...  2021.0         0.0  
4   10. Property, plant and equipment Land $ of At...  2021.0    175870.0  
..                                                ...     ...         ...  
61  10. Property, plant and equipment Total $ char...  2021.0   2273023.0  
62  10. Property, plant and equipment Total $ char...  2021.0   -105658.0  
63  10. Property, plant and equipment Total $ char...  2021.0  54583137.0  
64  10. Property, plant and equipment Total $ Net ...  2021.0  17618429.0  
65  10. Property, plant and equipment Total $ Net ...  2020.0  18348862.0  

[66 rows x 6 columns]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work in progress', 27), ('work in progress', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 35), ('righttouse', 35), ('right of use', 35), ('right to use', 35), ('tangible', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('work in progress', 38), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29), ('capital work-in-progress', 28), ('capital workinprogress', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('tangible', 29), ('capital work in progress', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['tangible', 'capital work-in-progress', 'capital workinprogress', 'capital work in progress', 'rightofuse', 'righttouse', 'right of use', 'right to use', 'work in progress'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('right of use', 47), ('right to use', 47), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('capital work in progress', 38), ('work in progress', 38), ('tangible', 25), ('rightofuse', 24), ('righttouse', 24)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('work in progress', 38), ('tangible', 29), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22), ('right of use', 22), ('right to use', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible', 43), ('right of use', 33), ('right to use', 33), ('work in progress', 31), ('capital work in progress', 26), ('capital work-in-progress', 25), ('capital workinprogress', 25), ('rightofuse', 22), ('righttouse', 22)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible', 57), ('capital work-in-progress', 45), ('capital workinprogress', 45), ('right of use', 44), ('right to use', 44), ('rightofuse', 33), ('righttouse', 33), ('capital work in progress', 27), ('work in progress', 27)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('capital work-in-progress', 50), ('capital workinprogress', 50), ('capital work in progress', 42), ('work in progress', 42), ('rightofuse', 35), ('righttouse', 35), ('right of use', 35), ('right to use', 35), ('tangible', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('right of use', 56), ('right to use', 56), ('work in progress', 38), ('capital work in progress', 33), ('rightofuse', 33), ('righttouse', 33), ('tangible', 29), ('capital work-in-progress', 28), ('capital workinprogress', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('right of use', 44), ('right to use', 44), ('work in progress', 38), ('rightofuse', 33), ('righttouse', 33), ('capital work-in-progress', 32), ('capital workinprogress', 32), ('tangible', 29), ('capital work in progress', 28)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('tangible assets', 80)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('tangible assets', 32)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('tangible assets', 50)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('tangible assets', 44)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 80, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:49+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:49+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   
12         NaN     NaN        NaN   
13         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   
16         NaN     NaN        NaN   
17         NaN     NaN        NaN   
18         NaN     NaN        NaN   
19         NaN     NaN        NaN   
20         NaN     NaN        NaN   
21         NaN     NaN        NaN   
22         NaN     NaN        NaN   
23         NaN     NaN        NaN   
24         NaN     NaN        NaN   
25         NaN     NaN        NaN   
26         NaN     NaN        NaN   

                                            line_item    year       value  
0                    Software $ Cost At1 January 2021  2021.0    257189.0  
1    Software $ Cost Additions - internally developed  2021.0      3323.0  
2                           Software $ Cost Write-off  2021.0     -6018.0  
3                  Software $ Cost At31 December 2021  2021.0    254494.0  
4   Software $ Accumulated amortisation and impair...  2021.0      3182.0  
5   Software $ Accumulated amortisation and impair...  2021.0     -1746.0  
6   Software $ Accumulated amortisation and impair...  2021.0    244821.0  
7       Software $ Net book value At 31 December 2021  2021.0      9673.0  
8        Software $ Net book value At31 December 2020  2020.0     13804.0  
9             Customer assets $ Cost At1 January 2021  2021.0  34940381.0  
10  Customer assets $ Cost Additions - internally ...  2021.0         0.0  
11                   Customer assets $ Cost Write-off  2021.0         0.0  
12          Customer assets $ Cost At31 December 2021  2021.0  34940381.0  
13  Customer assets $ Accumulated amortisation and...  2021.0         0.0  
14  Customer assets $ Accumulated amortisation and...  2021.0         0.0  
15  Customer assets $ Accumulated amortisation and...  2021.0  34940381.0  
16  Customer assets $ Net book value At 31 Decembe...  2021.0         0.0  
17  Customer assets $ Net book value At31 December...  2020.0         0.0  
18                      Total $ Cost At1 January 2021  2021.0  35197570.0  
19      Total $ Cost Additions - internally developed  2021.0      3323.0  
20                             Total $ Cost Write-off  2021.0     -6018.0  
21                    Total $ Cost At31 December 2021  2021.0  35194875.0  
22  Total $ Accumulated amortisation and impairmen...  2021.0      3182.0  
23  Total $ Accumulated amortisation and impairmen...  2021.0     -1746.0  
24  Total $ Accumulated amortisation and impairmen...  2021.0  35185202.0  
25         Total $ Net book value At 31 December 2021  2021.0      9673.0  
26          Total $ Net book value At31 December 2020  2020.0     13804.0  
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill', 'goodwill on consolidatio']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 17), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['goodwill', 'goodwill on consolidatio'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('goodwill', 14), ('goodwill on consolidatio', 12)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('goodwill', 29), ('goodwill on consolidatio', 15)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('goodwill on consolidatio', 25), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('goodwill on consolidatio', 33), ('goodwill', 29)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('goodwill on consolidatio', 17), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('goodwill on consolidatio', 32), ('goodwill', 14)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['intangible', 'intangible under development', 'intangible assets under development']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:49+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-04-05 20:06:49+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:49+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:49+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-04-05 20:06:49+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 13804.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [13804.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['intangible', 'intangible under development', 'intangible assets under development'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('intangible assets under development', 62), ('intangible under development', 38), ('intangible', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('intangible assets under development', 50), ('intangible under development', 45), ('intangible', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('intangible', 67), ('intangible under development', 44), ('intangible assets under development', 18)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('intangible', 100), ('intangible assets under development', 100), ('intangible under development', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('intangible', 50), ('intangible under development', 42), ('intangible assets under development', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('intangible', 50), ('intangible assets under development', 42), ('intangible under development', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('intangible assets under development', 42), ('intangible', 33), ('intangible under development', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [10], 'score': 100, 'value': 9673.0, 'line_item_label': ['Intangible assets'], 'note_numbers': ['11'], 'line_item_value': [9673.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:50+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:50+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   
12         NaN     NaN        NaN   
13         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   
16         NaN     NaN        NaN   
17         NaN     NaN        NaN   
18         NaN     NaN        NaN   
19         NaN     NaN        NaN   
20         NaN     NaN        NaN   
21         NaN     NaN        NaN   
22         NaN     NaN        NaN   
23         NaN     NaN        NaN   
24         NaN     NaN        NaN   
25         NaN     NaN        NaN   
26         NaN     NaN        NaN   

                                            line_item    year       value  
0                    Software $ Cost At1 January 2021  2021.0    257189.0  
1    Software $ Cost Additions - internally developed  2021.0      3323.0  
2                           Software $ Cost Write-off  2021.0     -6018.0  
3                  Software $ Cost At31 December 2021  2021.0    254494.0  
4   Software $ Accumulated amortisation and impair...  2021.0      3182.0  
5   Software $ Accumulated amortisation and impair...  2021.0     -1746.0  
6   Software $ Accumulated amortisation and impair...  2021.0    244821.0  
7       Software $ Net book value At 31 December 2021  2021.0      9673.0  
8        Software $ Net book value At31 December 2020  2020.0     13804.0  
9             Customer assets $ Cost At1 January 2021  2021.0  34940381.0  
10  Customer assets $ Cost Additions - internally ...  2021.0         0.0  
11                   Customer assets $ Cost Write-off  2021.0         0.0  
12          Customer assets $ Cost At31 December 2021  2021.0  34940381.0  
13  Customer assets $ Accumulated amortisation and...  2021.0         0.0  
14  Customer assets $ Accumulated amortisation and...  2021.0         0.0  
15  Customer assets $ Accumulated amortisation and...  2021.0  34940381.0  
16  Customer assets $ Net book value At 31 Decembe...  2021.0         0.0  
17  Customer assets $ Net book value At31 December...  2020.0         0.0  
18                      Total $ Cost At1 January 2021  2021.0  35197570.0  
19      Total $ Cost Additions - internally developed  2021.0      3323.0  
20                             Total $ Cost Write-off  2021.0     -6018.0  
21                    Total $ Cost At31 December 2021  2021.0  35194875.0  
22  Total $ Accumulated amortisation and impairmen...  2021.0      3182.0  
23  Total $ Accumulated amortisation and impairmen...  2021.0     -1746.0  
24  Total $ Accumulated amortisation and impairmen...  2021.0  35185202.0  
25         Total $ Net book value At 31 December 2021  2021.0      9673.0  
26          Total $ Net book value At31 December 2020  2020.0     13804.0  
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('donations', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('donations', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('donations', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('donations', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('joint ventures and associates', 51), ('investment', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 24404000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [24404000.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('joint ventures and associates', 46), ('investment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 44), ('investment', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('investment', 50), ('joint ventures and associates', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('investment', 100), ('joint ventures and associates', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('joint ventures and associates', 51), ('investment', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('joint ventures and associates', 53), ('investment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': 90082000.0, 'line_item_label': ['Other investments'], 'note_numbers': ['13'], 'line_item_value': [90082000.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:50+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:50+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   
12         NaN     NaN        NaN   
13         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   

                                            line_item  year       value  
0   $ Investment in Boyne Smelters Limited: Fclass...  2021  74695278.0  
1   $ Investment in Boyne Smelters Limited: F2 cla...  2021  15386722.0  
2            $ Investment in Boyne Smelters Limited:   2021  90082000.0  
3            $ Investment in Boyne Smelters Limited:   2021      2021.0  
4            $ Investment in Boyne Smelters Limited:   2021         0.0  
5   $ Investment in Boyne Smelters Limited: Beginn...  2021  24404000.0  
6   $ Investment in Boyne Smelters Limited: Moveme...  2021  65678000.0  
7   $ Investment in Boyne Smelters Limited: Ending...  2021  90082000.0  
8   $ Investment in Boyne Smelters Limited: Fclass...  2020   9017278.0  
9   $ Investment in Boyne Smelters Limited: F2 cla...  2020  15386722.0  
10           $ Investment in Boyne Smelters Limited:   2020  24404000.0  
11           $ Investment in Boyne Smelters Limited:   2020      2020.0  
12           $ Investment in Boyne Smelters Limited:   2020         0.0  
13  $ Investment in Boyne Smelters Limited: Beginn...  2020  35075000.0  
14  $ Investment in Boyne Smelters Limited: Moveme...  2020 -10671000.0  
15  $ Investment in Boyne Smelters Limited: Ending...  2020  24404000.0  
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred charges', 27), ('deferred tax', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax', 39), ('deferred tax assets', 38), ('deferred charges', 24)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred tax', 38), ('deferred charges', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('deferred tax assets', 37), ('deferred tax', 29), ('deferred charges', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('deferred tax assets', 59), ('deferred charges', 40), ('deferred tax', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('deferred tax assets', 47), ('deferred charges', 27), ('deferred tax', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other assets']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other assets'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('other assets', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other assets', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('other assets', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('other assets', 61)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('other assets', 70)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('other assets', 60)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('other assets', 73)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['non-current assets total']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_total_non_current_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 45410954.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 45410954.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['non-current assets total'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('non-current assets total', 81)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('non-current assets total', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('non-current assets total', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('non-current assets total', 58)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('non-current assets total', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('non-current assets total', 47)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('non-current assets total', 84)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [7, 13], 'score': 84, 'value': 50181357.0, 'line_item_label': ['Non-current assets', 'Other non-current assets'], 'note_numbers': [nan, '12'], 'line_item_value': [0.0, 50181357.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:50+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:50+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no                                   line_item  \
0         NaN     NaN        NaN  $  Deferred expenditure - production costs   
1         NaN     NaN        NaN  $  Deferred expenditure - production costs   

   year     value  
0  2021  50181357  
1  2020  45410954  
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 16), ('borrowings', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short term debt', 26), ('short-term debt', 26), ('shortterm debt', 26), ('lease liabilities', 17), ('shortterm borrowings', 15), ('borrowings', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['short term debt', 'short-term debt', 'borrowings', 'shortterm debt', 'shortterm borrowings', 'lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('lease liabilities', 64), ('short term debt', 21), ('short-term debt', 21), ('shortterm debt', 21), ('borrowings', 20), ('shortterm borrowings', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('lease liabilities', 30), ('shortterm borrowings', 21), ('borrowings', 14), ('short term debt', 11), ('short-term debt', 11), ('shortterm debt', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55), ('short-term debt', 28), ('shortterm debt', 28), ('short term debt', 27), ('shortterm borrowings', 16), ('borrowings', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('short term debt', 26), ('short-term debt', 26), ('shortterm debt', 26), ('lease liabilities', 17), ('shortterm borrowings', 15), ('borrowings', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['current maturities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities', 34), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('current maturities', 27), ('other current liabilities', 23), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other financial liabilities', 'other current liabilities', 'current maturities', 'current maturities of long-term debt', 'current maturities of longterm debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('current maturities', 67), ('current maturities of long-term debt', 49), ('current maturities of longterm debt', 49), ('other financial liabilities', 47)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other financial liabilities', 38), ('other current liabilities', 33), ('current maturities', 17), ('current maturities of long-term debt', 16), ('current maturities of longterm debt', 16)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other financial liabilities', 43), ('current maturities', 34), ('current maturities of long-term debt', 33), ('current maturities of longterm debt', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('current maturities', 27), ('other current liabilities', 23), ('current maturities of long-term debt', 20), ('current maturities of longterm debt', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['note payable(debt)']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['note payable(debt)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('note payable(debt)', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('note payable(debt)', 68)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('note payable(debt)', 37)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('note payable(debt)', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises', 38), ('other trade payables', 30), ('trade payable', 29), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('other than micro and small enterprises', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of micro enterprises and small enterprises', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other trade payables', 38), ('outstanding dues of creditors other than', 29), ('trade payable', 28), ('accounts payable', 26), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 20), ('outstanding dues of micro enterprises and small enterprises', 19), ('total outstanding due of other creditors other than micro and small', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 15), ('small enterprises', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 39221937.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [39221937.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['accounts payable', 'trade payable', 'micro enterprises and small enterprises', 'outstanding dues of micro enterprises and small enterprises', 'outstanding dues of creditors other than micro enterprises and small enterprises', 'other trade payables', 'micro enterprises', 'small enterprises', 'outstanding dues of creditors other than', 'total outstanding due of other creditors other than micro and small', 'other than micro and small enterprises'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('accounts payable', 57), ('small enterprises', 41), ('micro enterprises', 34), ('other trade payables', 31), ('micro enterprises and small enterprises', 24), ('other than micro and small enterprises', 24), ('trade payable', 23), ('outstanding dues of micro enterprises and small enterprises', 23), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of creditors other than', 22), ('total outstanding due of other creditors other than micro and small', 16)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other trade payables', 90), ('trade payable', 71), ('accounts payable', 56), ('other than micro and small enterprises', 52), ('outstanding dues of creditors other than', 44), ('total outstanding due of other creditors other than micro and small', 39), ('small enterprises', 38), ('outstanding dues of creditors other than micro enterprises and small enterprises', 36), ('micro enterprises and small enterprises', 35), ('micro enterprises', 32), ('outstanding dues of micro enterprises and small enterprises', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('accounts payable', 44), ('small enterprises', 43), ('micro enterprises', 38), ('other trade payables', 30), ('trade payable', 29), ('outstanding dues of creditors other than', 26), ('micro enterprises and small enterprises', 25), ('total outstanding due of other creditors other than micro and small', 24), ('other than micro and small enterprises', 24), ('outstanding dues of creditors other than micro enterprises and small enterprises', 22), ('outstanding dues of micro enterprises and small enterprises', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other trade payables', 38), ('outstanding dues of creditors other than', 29), ('trade payable', 28), ('accounts payable', 26), ('micro enterprises and small enterprises', 20), ('other than micro and small enterprises', 20), ('outstanding dues of micro enterprises and small enterprises', 19), ('total outstanding due of other creditors other than micro and small', 19), ('outstanding dues of creditors other than micro enterprises and small enterprises', 17), ('micro enterprises', 15), ('small enterprises', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [18], 'score': 90, 'value': 47911992.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['15'], 'line_item_value': [47911992.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:50+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:50+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no  \
0         NaN     NaN        NaN   
1         NaN     NaN        NaN   
2         NaN     NaN        NaN   
3         NaN     NaN        NaN   
4         NaN     NaN        NaN   
5         NaN     NaN        NaN   
6         NaN     NaN        NaN   
7         NaN     NaN        NaN   

                                           line_item  year       value  
0                                                $    2021         0.0  
1  $  Credit allowance account Boyne Smelters Lim...  2021  41042476.0  
2                                                $    2021         0.0  
3                                                $    2021  47911992.0  
4                                                $    2020   2838360.0  
5  $  Credit allowance account Boyne Smelters Lim...  2020  34853683.0  
6                                                $    2020   4031156.0  
7                                                $    2020  39221937.0  
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses', 'interest accrued']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 23), ('other liabilities', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'other financial liabilities', 'other current financial liabilities', 'other liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), ('other current financial liabilities', 67), ('other financial liabilities', 47), ('other liabilities', 46)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other liabilities', 41), ('other financial liabilities', 38), ('other current liabilities', 33), ('other current financial liabilities', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48), ('other current financial liabilities', 44), ('other financial liabilities', 43), ('other liabilities', 35)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other financial liabilities', 50), ('other current financial liabilities', 50), ('other current liabilities', 23), ('other liabilities', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['tax']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['tax'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('tax', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('tax', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('other current liabilities', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other current liabilities', 48)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('other current liabilities', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 82, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['current liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = cl_total_current_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['current liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current liabilities', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('current liabilities', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current liabilities', 56)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = derivative financial instruments , res_fuzz_match = [('current liabilities', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [17], 'score': 100, 'value': 0.0, 'line_item_label': ['Current liabilities'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term debt', 10)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term debt', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['borrowings', 'long term borrowings', 'longterm borrowings']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['borrowings', 'long term borrowings', 'longterm borrowings'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('borrowings', 33), ('long term borrowings', 29), ('longterm borrowings', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('longterm borrowings', 33), ('long term borrowings', 31), ('borrowings', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term borrowings', 40), ('longterm borrowings', 40), ('borrowings', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term borrowings', 28), ('longterm borrowings', 27), ('borrowings', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['(bond)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('(bond)', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('(bond)', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('(bond)', 10)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['lease liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['lease liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('lease liabilities', 48)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('lease liabilities', 55)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('lease liabilities', 12)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('lease liabilities', 59)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes', 'deferred tax liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 71), ('deferred taxes', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 6532676.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [6532676.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['deferred taxes', 'deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('deferred tax liabilities', 57), ('deferred taxes', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('deferred tax liabilities', 71), ('deferred taxes', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('deferred taxes', 17), ('deferred tax liabilities', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('deferred taxes', 100), ('deferred tax liabilities', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [25], 'score': 100, 'value': 26856670.0, 'line_item_label': ['Deferred tax liabilities'], 'note_numbers': ['6'], 'line_item_value': [26856670.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other long term liabilities', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('other long term liabilities', 61)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('other long term liabilities', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('other long term liabilities', 7)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('other long term liabilities', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('minority interest', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('minority interest', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['minority interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('minority interest', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('minority interest', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('minority interest', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('minority interest', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['long term liabilities']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['long term liabilities'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term liabilities', 67)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term liabilities', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = provision , res_fuzz_match = [('long term liabilities', 9)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = deferred tax liabilities , res_fuzz_match = [('long term liabilities', 50)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('equity share capital', 57), ('perpetual equity instrument', 38), ('share capital', 36), ('common stock', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('share capital', 40), ('equity share capital', 31), ('common stock', 23), ('perpetual equity instrument', 5)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('share capital', 35), ('equity share capital', 27), ('common stock', 25), ('perpetual equity instrument', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['common stock', 'share capital', 'equity share capital', 'perpetual equity instrument'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('equity share capital', 57), ('perpetual equity instrument', 38), ('share capital', 36), ('common stock', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('equity share capital', 50), ('perpetual equity instrument', 39), ('share capital', 24), ('common stock', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('share capital', 67), ('equity share capital', 50), ('perpetual equity instrument', 34), ('common stock', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('equity share capital', 28), ('share capital', 27), ('common stock', 26), ('perpetual equity instrument', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('share capital', 40), ('equity share capital', 31), ('common stock', 23), ('perpetual equity instrument', 5)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('share capital', 35), ('equity share capital', 27), ('common stock', 25), ('perpetual equity instrument', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['share premium', 'securities premium']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('additional paid in capital', 42), ('additional paid up capital', 42), ('reserves and surplus', 41), ('other reserves', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('additional paid in capital', 27), ('additional paid up capital', 27), ('other reserves', 23), ('reserves and surplus', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100), ('reserves and surplus', 48), ('other equity', 42), ('additional paid in capital', 14), ('additional paid up capital', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': -138406.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [-138406.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other equity', 'other reserves', 'additional paid in capital', 'additional paid up capital', 'reserves and surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('additional paid in capital', 42), ('additional paid up capital', 42), ('reserves and surplus', 41), ('other reserves', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('additional paid in capital', 27), ('additional paid up capital', 27), ('reserves and surplus', 17), ('other reserves', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('additional paid in capital', 54), ('additional paid up capital', 54), ('reserves and surplus', 37), ('other equity', 27), ('other reserves', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43), ('reserves and surplus', 36), ('additional paid in capital', 30), ('additional paid up capital', 30), ('other equity', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('additional paid in capital', 27), ('additional paid up capital', 27), ('other reserves', 23), ('reserves and surplus', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100), ('reserves and surplus', 48), ('other equity', 42), ('additional paid in capital', 14), ('additional paid up capital', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 45836194.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [45836194.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['share premium', 'securities premium'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['share premium', 'securities premium'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = cash flow hedge reserve , res_fuzz_match = [('securities premium', 35), ('share premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = other reserves , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at 1 january 2020 , res_fuzz_match = [('share premium', 29), ('securities premium', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 december 2020 , res_fuzz_match = [('share premium', 44), ('securities premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net loss on a hedge of commodity, net of tax , res_fuzz_match = [('share premium', 46), ('securities premium', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value through oci, net of tax , res_fuzz_match = [('share premium', 31), ('securities premium', 31)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = fair value gain on equity instruments designated at fair value at 31 december 2021 , res_fuzz_match = [('securities premium', 42), ('share premium', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('share premium', 20), ('securities premium', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other reserves', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other reserves', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': -138406.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [-138406.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other reserves'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other reserves', 14)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other reserves', 11)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves', 27)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves', 43)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other reserves', 23)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('other reserves', 100)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [32], 'score': 100, 'value': 45836194.0, 'line_item_label': ['Other reserves'], 'note_numbers': ['18'], 'line_item_value': [45836194.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:50+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:50+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
0          NaN     NaN        NaN   
1          NaN     NaN        NaN   
2          NaN     NaN        NaN   
3          NaN     NaN        NaN   
4          NaN     NaN        NaN   
5          NaN     NaN        NaN   
6          NaN     NaN        NaN   
7          NaN     NaN        NaN   
8          NaN     NaN        NaN   
9          NaN     NaN        NaN   
10         NaN     NaN        NaN   
11         NaN     NaN        NaN   
12         NaN     NaN        NaN   
13         NaN     NaN        NaN   
14         NaN     NaN        NaN   
15         NaN     NaN        NaN   
16         NaN     NaN        NaN   
17         NaN     NaN        NaN   
18         NaN     NaN        NaN   
19         NaN     NaN        NaN   
20         NaN     NaN        NaN   
21         NaN     NaN        NaN   
22         NaN     NaN        NaN   
23         NaN     NaN        NaN   
24         NaN     NaN        NaN   
25         NaN     NaN        NaN   
26         NaN     NaN        NaN   
27         NaN     NaN        NaN   
28         NaN     NaN        NaN   
29         NaN     NaN        NaN   
30         NaN     NaN        NaN   
31         NaN     NaN        NaN   

                                            line_item    year       value  
0          Cash flow hedge reserve  At 1 January 2020  2020.0         0.0  
1   Cash flow hedge reserve  Net loss on a hedge o...  2021.0         0.0  
2   Cash flow hedge reserve  Fair value gain on eq...  2021.0         0.0  
3    Cash flow hedge reserve  through OCI, net of tax  2021.0         0.0  
4         Cash flow hedge reserve  At31 December 2020  2020.0         0.0  
5   Cash flow hedge reserve  Net loss on a hedge o...  2021.0         0.0  
6   Cash flow hedge reserve Fair value gain on equ...  2021.0         0.0  
7   Cash flow hedge reserve Fair value gain on equ...  2021.0         0.0  
8          Cash flow hedge reserve  At 1 January 2020  2020.0     71944.0  
9   Cash flow hedge reserve  Net loss on a hedge o...  2021.0  -3523367.0  
10  Cash flow hedge reserve  Fair value gain on eq...  2021.0         0.0  
11   Cash flow hedge reserve  through OCI, net of tax  2021.0         0.0  
12        Cash flow hedge reserve  At31 December 2020  2020.0  -3451423.0  
13  Cash flow hedge reserve  Net loss on a hedge o...  2021.0  -1581811.0  
14  Cash flow hedge reserve Fair value gain on equ...  2021.0         0.0  
15  Cash flow hedge reserve Fair value gain on equ...  2021.0  -5033234.0  
16                  Other reserves  At 1 January 2020  2020.0   7331294.0  
17  Other reserves  Net loss on a hedge of commodi...  2021.0         0.0  
18  Other reserves  Fair value gain on equity inst...  2021.0         0.0  
19            Other reserves  through OCI, net of tax  2021.0  -7469700.0  
20                 Other reserves  At31 December 2020  2020.0   -138406.0  
21  Other reserves  Net loss on a hedge of commodi...  2021.0         0.0  
22  Other reserves Fair value gain on equity instr...  2021.0  45974600.0  
23  Other reserves Fair value gain on equity instr...  2021.0  45836194.0  
24                           Total  At 1 January 2020  2020.0   7403238.0  
25  Total  Net loss on a hedge of commodity, net o...  2021.0  -3523367.0  
26  Total  Fair value gain on equity instruments d...  2021.0         0.0  
27                     Total  through OCI, net of tax  2021.0  -7469700.0  
28                          Total  At31 December 2020  2020.0  -3589829.0  
29  Total  Net loss on a hedge of commodity, net o...  2021.0  -1581811.0  
30  Total Fair value gain on equity instruments de...  2021.0  45974600.0  
31  Total Fair value gain on equity instruments de...  2021.0  40802960.0  
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['other equity', 'reserves surplus']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings', 'general reserves']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('reserves surplus', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('reserves surplus', 7)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('reserves surplus', 48), ('other equity', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['other equity', 'reserves surplus'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('other equity', 48), ('reserves surplus', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity', 67), ('reserves surplus', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other equity', 27), ('reserves surplus', 26)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other equity', 17), ('reserves surplus', 17)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('other equity', 31), ('reserves surplus', 7)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('reserves surplus', 48), ('other equity', 42)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest', 26), ('non controlling interest', 22), ('noncontrolling interest', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('non controlling interest', 24), ('minority interest', 7), ('noncontrolling interest', 6)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest', 46), ('non controlling interest', 44), ('noncontrolling interest', 39)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['minority interest', 'non controlling interest', 'noncontrolling interest'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest', 26), ('non controlling interest', 22), ('noncontrolling interest', 22)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest', 30), ('noncontrolling interest', 16), ('non controlling interest', 15)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest', 33), ('non controlling interest', 33), ('noncontrolling interest', 21)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('non controlling interest', 26), ('minority interest', 16), ('noncontrolling interest', 13)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('non controlling interest', 24), ('minority interest', 7), ('noncontrolling interest', 6)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('minority interest', 46), ('non controlling interest', 44), ('noncontrolling interest', 39)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 41)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('shareholders equity(a)', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 41)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = cash flow hedge , res_fuzz_match = [('shareholders equity(a)', 32)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other reserves , res_fuzz_match = [('shareholders equity(a)', 28)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-04-05 20:06:50+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value']
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 18348862.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [18348862.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = intangible assets , res_fuzz_match = [('plant property equipment', 25), ('property plant equipment', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other investments , res_fuzz_match = [('plant property equipment', 38), ('property plant equipment', 38)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = retirement benefit assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_particular = other non-current assets , res_fuzz_match = [('plant property equipment', 36), ('property plant equipment', 36)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 91, 'value': 17618429.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [17618429.0]}
2023-04-05 20:06:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:50+0530 - sLogger - DEBUG - keywords = ['cost', 'gross'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('gross', 40), ('cost', 33)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('gross', 80), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('cost', 25), ('gross', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('cost', 25), ('gross', 0)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:50+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('gross', 40), ('cost', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('cost', 57), ('gross', 44)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('cost', 25), ('gross', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('cost', 50), ('gross', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [80, 80, 80, 80, 80, 80, 80, 80, 80, 80, 80], 'value': [913989.0, 0.0, -153710.0, 0.0, 760279.0, 0.0, 0.0, 0.0, 0.0, 760279.0, 913989.0], 'label': ['10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $', '10. Property, plant and equipment Work in progress $'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment land $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment building and structure $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment plant and equipment $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment motor vehicle $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment work in progress $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at1 january 2021 , res_fuzz_match = [('net value', 50), ('depreciatio', 43), ('accumulated depreciation', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = additions , res_fuzz_match = [('depreciatio', 44), ('net value', 25), ('accumulated depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 33), ('net value', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = of at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 78), ('net value', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = at31 of remeasurement december rehabilitation provision 2021 accumulated depreciation at1 january 2021 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 82), ('net value', 50)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the year , res_fuzz_match = [('net value', 40), ('depreciatio', 27), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the disposals , res_fuzz_match = [('depreciatio', 35), ('accumulated depreciation', 27), ('net value', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = charge for the 2021 , res_fuzz_match = [('accumulated depreciation', 23), ('net value', 20), ('depreciatio', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2021 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net book value 2020 , res_fuzz_match = [('net value', 62), ('depreciatio', 18), ('accumulated depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = property, plant and equipment total $ , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 14, 15, 16, 25, 26, 27, 36, 37, 38, 47, 48, 49, 58, 59, 60], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 175870.0, 0.0, -692173.0, 4350726.0, 2761116.0, 0.0, 66861238.0, 49618482.0, 0.0, 53453.0, 36174.0, 0.0, 760279.0, 0.0, -692173.0, 72201566.0, 52415772.0], 'label': ['of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'of At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation', 'At31 of Remeasurement December rehabilitation provision 2021 Accumulated depreciation At1 January 2021'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:51+0530 - sLogger - ERROR - error occured: Length mismatch: Expected axis has 0 elements, new values have 3 elements
2023-04-05 20:06:51+0530 - sLogger - ERROR -    raw_note_no note_no subnote_no  \
44         NaN     NaN        NaN   
45         NaN     NaN        NaN   
46         NaN     NaN        NaN   
50         NaN     NaN        NaN   
51         NaN     NaN        NaN   
52         NaN     NaN        NaN   
53         NaN     NaN        NaN   
54         NaN     NaN        NaN   

                                            line_item    year     value  
44  10. Property, plant and equipment Work in prog...  2021.0  913989.0  
45  10. Property, plant and equipment Work in prog...  2021.0       0.0  
46  10. Property, plant and equipment Work in prog...  2021.0 -153710.0  
50  10. Property, plant and equipment Work in prog...  2021.0       0.0  
51  10. Property, plant and equipment Work in prog...  2021.0       0.0  
52  10. Property, plant and equipment Work in prog...  2021.0       0.0  
53  10. Property, plant and equipment Work in prog...  2021.0  760279.0  
54  10. Property, plant and equipment Work in prog...  2020.0  913989.0  
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('account receivables', 25), ('trade receivables', 25), ('government subsidies receivable', 25), ('receivable', 25), ('billed', 0), ('unbilled', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 82), ('account receivables', 71), ('government subsidies receivable', 62), ('billed', 25), ('unbilled', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 18360971.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivables'], 'note_numbers': ['8', nan], 'line_item_value': [18170313.0, 190658.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['account receivables', 'trade receivables', 'government subsidies receivable', 'receivable', 'billed', 'unbilled'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('trade receivables', 40), ('government subsidies receivable', 40), ('account receivables', 20), ('receivable', 20), ('billed', 0), ('unbilled', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('account receivables', 46), ('unbilled', 40), ('trade receivables', 35), ('receivable', 33), ('government subsidies receivable', 31), ('billed', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash , res_fuzz_match = [('account receivables', 25), ('trade receivables', 25), ('government subsidies receivable', 25), ('receivable', 25), ('billed', 0), ('unbilled', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 75), ('account receivables', 64), ('government subsidies receivable', 61), ('billed', 29), ('unbilled', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('receivable', 50), ('account receivables', 44), ('unbilled', 40), ('trade receivables', 36), ('government subsidies receivable', 33), ('billed', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax receivables , res_fuzz_match = [('receivable', 100), ('trade receivables', 82), ('account receivables', 71), ('government subsidies receivable', 62), ('billed', 25), ('unbilled', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 5], 'score': 100, 'value': 9232194.0, 'line_item_label': ['Trade and other receivables', 'Income tax receivables'], 'note_numbers': ['8', nan], 'line_item_value': [9232194.0, 0.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 46), ('from trading business', 38), ('sale of products', 27), ('net sales', 25), ('transmission and distribution business', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 35), ('transmission and distribution business', 31), ('from trading business', 31), ('revenue from operations', 30), ('net sales', 16), ('sale of products', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('revenue from operations', 32), ('transmission and distribution business', 23), ('from trading business', 20), ('net sales', 17), ('revenue from contracts with customers', 17), ('sale of products', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('transmission and distribution business', 30), ('sale of products', 26), ('revenue from operations', 24), ('net sales', 24), ('revenue from contracts with customers', 24), ('from trading business', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 48), ('from trading business', 43), ('sale of products', 24), ('transmission and distribution business', 16), ('net sales', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('sale of products', 37), ('from trading business', 33), ('net sales', 26), ('revenue from contracts with customers', 26), ('revenue from operations', 19), ('transmission and distribution business', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('net sales', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('sale of products', 22), ('revenue from operations', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('from trading business', 36), ('sale of products', 33), ('revenue from operations', 30), ('transmission and distribution business', 27), ('revenue from contracts with customers', 21), ('net sales', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 31), ('revenue from operations', 25), ('sale of products', 21), ('from trading business', 20), ('net sales', 17), ('transmission and distribution business', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('revenue from operations', 37), ('sale of products', 36), ('net sales', 34), ('revenue from contracts with customers', 24), ('transmission and distribution business', 18), ('from trading business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('from trading business', 41), ('revenue from contracts with customers', 35), ('revenue from operations', 27), ('sale of products', 15), ('transmission and distribution business', 10), ('net sales', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('transmission and distribution business', 46), ('from trading business', 38), ('revenue from operations', 29), ('net sales', 29), ('sale of products', 27), ('revenue from contracts with customers', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 33), ('revenue from operations', 29), ('net sales', 25), ('transmission and distribution business', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 144455407.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4'], 'line_item_value': [144455407.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['revenue from operations', 'sale of products', 'net sales', 'revenue from contracts with customers', 'transmission and distribution business', 'from trading business'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('revenue from contracts with customers', 100), ('revenue from operations', 46), ('from trading business', 38), ('sale of products', 27), ('net sales', 25), ('transmission and distribution business', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('net sales', 71), ('sale of products', 67), ('from trading business', 33), ('revenue from contracts with customers', 29), ('revenue from operations', 24), ('transmission and distribution business', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('sale of products', 33), ('from trading business', 30), ('revenue from operations', 29), ('revenue from contracts with customers', 27), ('transmission and distribution business', 15), ('net sales', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('revenue from contracts with customers', 35), ('transmission and distribution business', 31), ('from trading business', 31), ('revenue from operations', 30), ('net sales', 16), ('sale of products', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('revenue from operations', 32), ('transmission and distribution business', 23), ('from trading business', 20), ('net sales', 17), ('revenue from contracts with customers', 17), ('sale of products', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('transmission and distribution business', 30), ('sale of products', 26), ('revenue from operations', 24), ('net sales', 24), ('revenue from contracts with customers', 24), ('from trading business', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('revenue from operations', 29), ('revenue from contracts with customers', 27), ('from trading business', 22), ('net sales', 20), ('sale of products', 17), ('transmission and distribution business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations', 68), ('revenue from contracts with customers', 48), ('from trading business', 43), ('sale of products', 24), ('transmission and distribution business', 16), ('net sales', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('transmission and distribution business', 30), ('from trading business', 30), ('revenue from operations', 21), ('net sales', 20), ('revenue from contracts with customers', 14), ('sale of products', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('sale of products', 35), ('net sales', 32), ('from trading business', 31), ('revenue from contracts with customers', 23), ('revenue from operations', 15), ('transmission and distribution business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('sale of products', 37), ('from trading business', 33), ('net sales', 26), ('revenue from contracts with customers', 26), ('revenue from operations', 19), ('transmission and distribution business', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('revenue from operations', 42), ('from trading business', 33), ('sale of products', 31), ('transmission and distribution business', 29), ('revenue from contracts with customers', 27), ('net sales', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('from trading business', 41), ('net sales', 38), ('revenue from contracts with customers', 29), ('transmission and distribution business', 27), ('sale of products', 22), ('revenue from operations', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('from trading business', 36), ('sale of products', 33), ('revenue from operations', 30), ('transmission and distribution business', 27), ('revenue from contracts with customers', 21), ('net sales', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('revenue from contracts with customers', 31), ('revenue from operations', 25), ('sale of products', 21), ('from trading business', 20), ('net sales', 17), ('transmission and distribution business', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('revenue from operations', 37), ('sale of products', 36), ('net sales', 34), ('revenue from contracts with customers', 24), ('transmission and distribution business', 18), ('from trading business', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('from trading business', 41), ('revenue from contracts with customers', 35), ('revenue from operations', 27), ('sale of products', 15), ('transmission and distribution business', 10), ('net sales', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('transmission and distribution business', 46), ('from trading business', 38), ('revenue from operations', 29), ('net sales', 29), ('sale of products', 27), ('revenue from contracts with customers', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('sale of products', 35), ('revenue from contracts with customers', 33), ('from trading business', 33), ('revenue from operations', 29), ('net sales', 25), ('transmission and distribution business', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 160766403.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4'], 'line_item_value': [160766403.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('cost of sales', 29), ('purchase of stock-in-trade', 24), ('expenditure', 24), ('total expenses', 23), ('total expenditure', 21), ('expense', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('total expenses', 33), ('expenditure', 30), ('expense', 28), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('cost of sales', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('expense', 57), ('total expenses', 44), ('expenditure', 40), ('total expenditure', 32), ('purchase of stock-in-trade', 12), ('cost of sales', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('expense', 38), ('total expenses', 32), ('expenditure', 28), ('total expenditure', 24), ('purchase of stock-in-trade', 18), ('cost of sales', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('total expenditure', 26), ('cost of sales', 26), ('total expenses', 24), ('expense', 21), ('expenditure', 19), ('purchase of stock-in-trade', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('expenditure', 16), ('total expenses', 15), ('total expenditure', 13), ('expense', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('total expenses', 36), ('total expenditure', 33), ('cost of sales', 33), ('purchase of stock-in-trade', 30), ('expenditure', 22), ('expense', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('total expenditure', 30), ('cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('total expenditure', 25), ('total expenses', 24), ('cost of sales', 22), ('purchase of stock-in-trade', 17), ('expenditure', 16), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('expenditure', 32), ('expense', 30), ('total expenditure', 28), ('total expenses', 26), ('cost of sales', 22), ('purchase of stock-in-trade', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('purchase of stock-in-trade', 36), ('cost of sales', 35), ('expenditure', 17), ('total expenditure', 13), ('expense', 10), ('total expenses', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 29), ('cost of sales', 29), ('total expenses', 27), ('expenditure', 23), ('expense', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('expenditure', 24), ('expense', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -138314663.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-138314663.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('cost of sales', 29), ('purchase of stock-in-trade', 24), ('expenditure', 24), ('total expenses', 23), ('total expenditure', 21), ('expense', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), ('expense', 13), ('expenditure', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('cost of sales', 29), ('expenditure', 27), ('purchase of stock-in-trade', 26), ('total expenses', 25), ('total expenditure', 21), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('total expenses', 33), ('expenditure', 30), ('expense', 28), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('cost of sales', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('expense', 57), ('total expenses', 44), ('expenditure', 40), ('total expenditure', 32), ('purchase of stock-in-trade', 12), ('cost of sales', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('expense', 38), ('total expenses', 32), ('expenditure', 28), ('total expenditure', 24), ('purchase of stock-in-trade', 18), ('cost of sales', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 32), ('cost of sales', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('total expenditure', 26), ('cost of sales', 26), ('total expenses', 24), ('expense', 21), ('expenditure', 19), ('purchase of stock-in-trade', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('total expenses', 25), ('total expenditure', 21), ('purchase of stock-in-trade', 19), ('cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('purchase of stock-in-trade', 40), ('total expenses', 17), ('total expenditure', 15), ('expense', 12), ('expenditure', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('purchase of stock-in-trade', 35), ('expenditure', 16), ('total expenses', 15), ('total expenditure', 13), ('expense', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('total expenses', 36), ('total expenditure', 33), ('cost of sales', 33), ('purchase of stock-in-trade', 30), ('expenditure', 22), ('expense', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('total expenses', 56), ('total expenditure', 45), ('expenditure', 41), ('expense', 40), ('purchase of stock-in-trade', 33), ('cost of sales', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('total expenditure', 30), ('cost of sales', 30), ('purchase of stock-in-trade', 28), ('total expenses', 28), ('expenditure', 24), ('expense', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('total expenditure', 25), ('total expenses', 24), ('cost of sales', 22), ('purchase of stock-in-trade', 17), ('expenditure', 16), ('expense', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('expenditure', 32), ('expense', 30), ('total expenditure', 28), ('total expenses', 26), ('cost of sales', 22), ('purchase of stock-in-trade', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('purchase of stock-in-trade', 36), ('cost of sales', 35), ('expenditure', 17), ('total expenditure', 13), ('expense', 10), ('total expenses', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('purchase of stock-in-trade', 35), ('total expenditure', 29), ('cost of sales', 29), ('total expenses', 27), ('expenditure', 23), ('expense', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('expenditure', 24), ('expense', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': -147518859.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-147518859.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['other expenses', ' depreciation']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['consum', 'power', 'machinery', 'charges', 'research', 'analytical', 'equipment', 'exchange', 'loss on', 'donation', 'csr', 'social', 'miscellaneous', 'loss allowance']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other expenses', 33), (' depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' depreciation', 42), ('other expenses', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 15), (' depreciation', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other expenses', 31), (' depreciation', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other expenses', 38), (' depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other expenses', 18), (' depreciation', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -1018529.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-1018529.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other expenses', ' depreciation'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other expenses', 27), (' depreciation', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' depreciation', 12), ('other expenses', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other expenses', 33), (' depreciation', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other expenses', 33), (' depreciation', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other expenses', 44), (' depreciation', 36)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' depreciation', 42), ('other expenses', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other expenses', 100), (' depreciation', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other expenses', 24), (' depreciation', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other expenses', 25), (' depreciation', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' depreciation', 22), ('other expenses', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other expenses', 15), (' depreciation', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other expenses', 31), (' depreciation', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other expenses', 50), (' depreciation', 26)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other expenses', 39), (' depreciation', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other expenses', 26), (' depreciation', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other expenses', 31), (' depreciation', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other expenses', 38), (' depreciation', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other expenses', 18), (' depreciation', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other expenses', 38), (' depreciation', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': -946543.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-946543.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['rent']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('rent', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('rent', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('rent', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('rent', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('rent', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('rent', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('rent', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('rent', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('rent', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('rent', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['rent'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('rent', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('rent', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('rent', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('rent', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('rent', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('rent', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('rent', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('rent', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('rent', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('rent', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('rent', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('rent', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('rent', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('rent', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('rent', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('rent', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('rent', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('rent', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('rent', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['other operating ']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other operating ', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other operating ', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('other operating ', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other operating ', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other operating ', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating ', 47)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other operating ', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other operating ', 33)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other operating ', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other operating ', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other operating '] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other operating ', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating ', 45)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other operating ', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other operating ', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('other operating ', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating ', 73)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other operating ', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('other operating ', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('other operating ', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other operating ', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('other operating ', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating ', 47)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other operating ', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other operating ', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other operating ', 33)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('other operating ', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other operating ', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['interest']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other income', 23), ('finance income', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance income', 32), ('other income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), ('finance income', 36)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 34), ('finance income', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other income', 37), ('finance income', 31)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other income', 40), ('finance income', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance income', 27), ('other income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), ('finance income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 425632.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [425632.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('other income', 37), ('finance income', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('other income', 40), ('finance income', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other income', 17), ('finance income', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('other income', 39), ('finance income', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('other income', 23), ('finance income', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance income', 32), ('other income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), ('finance income', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), ('finance income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('other income', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance income', 52), ('other income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance income', 59), ('other income', 38)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('other income', 42), ('finance income', 36)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance income', 50), ('other income', 40)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 34), ('finance income', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('other income', 29), ('finance income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('other income', 37), ('finance income', 31)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('other income', 40), ('finance income', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance income', 27), ('other income', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), ('finance income', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 236082.0, 'line_item_label': ['Finance income'], 'note_numbers': [nan], 'line_item_value': [236082.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('finance cost', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance cost', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('finance cost', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('finance cost', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('finance cost', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance cost', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('finance cost', 31)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 85, 'value': -3797848.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '5'], 'line_item_value': [-2111740.0, -1686108.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['finance cost'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('finance cost', 33)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost', 60)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('finance cost', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('finance cost', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('finance cost', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('finance cost', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('finance cost', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance cost', 52)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost', 100)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('finance cost', 85)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('finance cost', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('finance cost', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('finance cost', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('finance cost', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('finance cost', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('finance cost', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('finance cost', 31)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 85, 'value': -4882658.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '5'], 'line_item_value': [-2559370.0, -2323288.0]}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['loan', 'debt', 'debenture', 'cash credit', 'borrowings', 'bank facilities', 'bonds', 'interest'] , match_type = partial , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = interest income , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('bank facilities', 30), ('loan', 29), ('bonds', 29), ('cash credit', 27), ('borrowings', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = finance income , res_fuzz_match = [('loan', 50), ('bank facilities', 40), ('cash credit', 33), ('bonds', 29), ('interest', 25), ('borrowings', 22), ('debenture', 12), ('debt', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = unwinding of discount and changes in discount rate , res_fuzz_match = [('loan', 50), ('bonds', 50), ('bank facilities', 40), ('debenture', 38), ('interest', 38), ('cash credit', 36), ('debt', 33), ('borrowings', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = finance costs , res_fuzz_match = [('loan', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debt', 25), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net finance costs , res_fuzz_match = [('loan', 50), ('debt', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2021 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = interest income , res_fuzz_match = [('interest', 100), ('debt', 50), ('debenture', 38), ('bank facilities', 30), ('loan', 29), ('bonds', 29), ('cash credit', 27), ('borrowings', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = finance income , res_fuzz_match = [('loan', 50), ('bank facilities', 40), ('cash credit', 33), ('bonds', 29), ('interest', 25), ('borrowings', 22), ('debenture', 12), ('debt', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = unwinding of discount and changes in discount rate , res_fuzz_match = [('loan', 50), ('bonds', 50), ('bank facilities', 40), ('debenture', 38), ('interest', 38), ('cash credit', 36), ('debt', 33), ('borrowings', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = finance costs , res_fuzz_match = [('loan', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debt', 25), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = net finance costs , res_fuzz_match = [('loan', 50), ('debt', 50), ('cash credit', 47), ('bank facilities', 42), ('interest', 38), ('debenture', 25), ('bonds', 25), ('borrowings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_rows = 2020 , res_fuzz_match = [('loan', 0), ('debt', 0), ('debenture', 0), ('cash credit', 0), ('borrowings', 0), ('bank facilities', 0), ('bonds', 0), ('interest', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 5], 'score': [100, 100], 'value': [236082.0, 425632.0], 'label': [' Interest income', ' Interest income'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword_mapping , File:DataBucketingUtils.py,  function: convert_note_df_to_hotizontal
2023-04-05 20:06:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-04-05 20:06:51+0530 - sLogger - ERROR -   raw_note_no note_no subnote_no              line_item  year   value
0         NaN     NaN        NaN  2021  Interest income   NaN  236082
5         NaN     NaN        NaN  2020  Interest income   NaN  425632
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('current tax', 33), ('provision for taxation previous year', 33), ('amount transferred to retained earnings', 31), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 20), ('prior year', 10), ('earlier year', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), ('prior year', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19), ('earlier year', 17), ('amount transferred to retained earnings', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 29), ('deferred tax', 26), ('amount transferred to retained earnings', 25), ('current tax', 24), ('earlier year', 24), ('prior year', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('earlier year', 52), ('deferred tax', 50), ('prior year', 32), ('minimum alternate tax credit entitlement', 30), ('amount transferred to retained earnings', 24), ('current tax', 23), ('provision for taxation previous year', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), ('prior year', 28), ('earlier year', 26), ('current tax', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('earlier year', 35), ('deferred tax', 32), ('provision for taxation previous year', 31), ('current tax', 30), ('prior year', 25), ('minimum alternate tax credit entitlement', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('amount transferred to retained earnings', 21), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 18), ('prior year', 18), ('current tax', 17), ('earlier year', 17), ('provision for taxation previous year', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('amount transferred to retained earnings', 38), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('prior year', 24), ('provision for taxation previous year', 23), ('deferred tax', 17), ('earlier year', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('provision for taxation previous year', 54), ('deferred tax', 39), ('current tax', 37), ('minimum alternate tax credit entitlement', 27), ('amount transferred to retained earnings', 22), ('prior year', 22), ('earlier year', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 57), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 31), ('prior year', 29), ('provision for taxation previous year', 23), ('earlier year', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year', 47), ('current tax', 34), ('earlier year', 33), ('deferred tax', 30), ('minimum alternate tax credit entitlement', 29), ('amount transferred to retained earnings', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 33), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 28), ('prior year', 22), ('current tax', 21), ('earlier year', 18), ('deferred tax', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('current tax', 32), ('prior year', 32), ('earlier year', 31), ('deferred tax', 28), ('minimum alternate tax credit entitlement', 27), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('prior year', 25), ('minimum alternate tax credit entitlement', 22), ('amount transferred to retained earnings', 20), ('provision for taxation previous year', 19), ('current tax', 16), ('deferred tax', 9), ('earlier year', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('current tax', 41), ('minimum alternate tax credit entitlement', 31), ('earlier year', 31), ('deferred tax', 29), ('provision for taxation previous year', 26), ('prior year', 23), ('amount transferred to retained earnings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), ('prior year', 36), ('earlier year', 31), ('current tax', 27), ('deferred tax', 24), ('amount transferred to retained earnings', 15), ('minimum alternate tax credit entitlement', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('current tax', 33), ('provision for taxation previous year', 33), ('amount transferred to retained earnings', 31), ('minimum alternate tax credit entitlement', 25), ('deferred tax', 20), ('prior year', 10), ('earlier year', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('current tax', 40), ('prior year', 32), ('provision for taxation previous year', 26), ('amount transferred to retained earnings', 22), ('minimum alternate tax credit entitlement', 15), ('deferred tax', 11), ('earlier year', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 34), ('prior year', 27), ('current tax', 26), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 19), ('earlier year', 17), ('amount transferred to retained earnings', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('provision for taxation previous year', 37), ('minimum alternate tax credit entitlement', 29), ('deferred tax', 26), ('amount transferred to retained earnings', 25), ('current tax', 24), ('earlier year', 24), ('prior year', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('earlier year', 52), ('deferred tax', 50), ('prior year', 32), ('minimum alternate tax credit entitlement', 30), ('amount transferred to retained earnings', 24), ('current tax', 23), ('provision for taxation previous year', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), ('minimum alternate tax credit entitlement', 31), ('deferred tax', 29), ('prior year', 28), ('earlier year', 26), ('current tax', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('provision for taxation previous year', 34), ('amount transferred to retained earnings', 31), ('deferred tax', 29), ('current tax', 26), ('earlier year', 25), ('prior year', 18), ('minimum alternate tax credit entitlement', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('earlier year', 35), ('deferred tax', 32), ('provision for taxation previous year', 31), ('current tax', 30), ('prior year', 25), ('minimum alternate tax credit entitlement', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('amount transferred to retained earnings', 21), ('deferred tax', 19), ('minimum alternate tax credit entitlement', 18), ('prior year', 18), ('current tax', 17), ('earlier year', 17), ('provision for taxation previous year', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('amount transferred to retained earnings', 37), ('current tax', 36), ('minimum alternate tax credit entitlement', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('prior year', 19), ('earlier year', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('amount transferred to retained earnings', 38), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), ('prior year', 24), ('provision for taxation previous year', 23), ('deferred tax', 17), ('earlier year', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('provision for taxation previous year', 54), ('deferred tax', 39), ('current tax', 37), ('minimum alternate tax credit entitlement', 27), ('amount transferred to retained earnings', 22), ('prior year', 22), ('earlier year', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('minimum alternate tax credit entitlement', 57), ('deferred tax', 42), ('current tax', 40), ('amount transferred to retained earnings', 31), ('prior year', 29), ('provision for taxation previous year', 23), ('earlier year', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('prior year', 47), ('current tax', 34), ('earlier year', 33), ('deferred tax', 30), ('minimum alternate tax credit entitlement', 29), ('amount transferred to retained earnings', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 33), ('minimum alternate tax credit entitlement', 31), ('provision for taxation previous year', 28), ('prior year', 22), ('current tax', 21), ('earlier year', 18), ('deferred tax', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('current tax', 32), ('prior year', 32), ('earlier year', 31), ('deferred tax', 28), ('minimum alternate tax credit entitlement', 27), ('amount transferred to retained earnings', 26), ('provision for taxation previous year', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('prior year', 25), ('minimum alternate tax credit entitlement', 22), ('amount transferred to retained earnings', 20), ('provision for taxation previous year', 19), ('current tax', 16), ('deferred tax', 9), ('earlier year', 8)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('current tax', 41), ('minimum alternate tax credit entitlement', 31), ('earlier year', 31), ('deferred tax', 29), ('provision for taxation previous year', 26), ('prior year', 23), ('amount transferred to retained earnings', 20)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), ('prior year', 36), ('earlier year', 31), ('current tax', 27), ('deferred tax', 24), ('amount transferred to retained earnings', 15), ('minimum alternate tax credit entitlement', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('share of', 23), ('share in', 23)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('share of', 32), ('share in', 32)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional', 'prior period']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('exceptional', 16), ('prior period', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('exceptional', 28), ('prior period', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('exceptional', 19), ('prior period', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('prior period', 29), ('exceptional', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 19), ('prior period', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('prior period', 41), ('exceptional', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('prior period', 21), ('exceptional', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('prior period', 36), ('exceptional', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('prior period', 15), ('exceptional', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('prior period', 18), ('exceptional', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('prior period', 19), ('exceptional', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['exceptional', 'prior period'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('exceptional', 16), ('prior period', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional', 13), ('prior period', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('prior period', 50), ('exceptional', 22)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('exceptional', 28), ('prior period', 19)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('prior period', 37), ('exceptional', 29)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('exceptional', 19), ('prior period', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional', 44), ('prior period', 25)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('prior period', 29), ('exceptional', 21)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('prior period', 17), ('exceptional', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('exceptional', 24), ('prior period', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('exceptional', 19), ('prior period', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('prior period', 41), ('exceptional', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('prior period', 28), ('exceptional', 27)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('prior period', 39), ('exceptional', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('prior period', 21), ('exceptional', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('prior period', 36), ('exceptional', 18)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('prior period', 15), ('exceptional', 10)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('prior period', 18), ('exceptional', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('prior period', 19), ('exceptional', 17)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-04-05 20:06:51+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-04-05 20:06:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-04-05 20:06:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-04-05 20:06:51+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net foreign exchange income/(loss) , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = delivery expenses , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before income tax , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = income tax (expense )/benefit , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = other comprehensive income/(loss) that will not be reclassified to profit or loss , res_fuzz_match = [('NULL', 9)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = ins subsequent periods (net oftax): , res_fuzz_match = [('NULL', 13)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = cash flow hedges , res_fuzz_match = [('NULL', 11)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = change in fair value of equity instruments , res_fuzz_match = [('NULL', 16)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-04-05 20:06:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
