2023-08-24 12:13:50+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-08-24 12:13:50+0530 - sLogger - DEBUG - {'fileid': '64c1d6f6-1c8c-486f-a7c0-4c46e5282876', 'filename': 'JFE Mineral (Australia) Pty Ltd - Financials - KPMG Signed.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/JFE Mineral (Australia) Pty Ltd - Financials - KPMG Signed.pdf', 'status': 'Processing'}
2023-08-24 12:13:50+0530 - sLogger - DEBUG - save file completed
2023-08-24 12:13:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-08-24 12:13:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-08-24 12:13:50+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-08-24 12:13:50+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-08-24 12:13:50+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-08-24 12:13:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:13:51+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:13:53+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:13:53+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:13:53+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:13:53+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:13:53+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:13:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:13:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:13:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:13:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:13:56+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:13:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:13:56+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:02+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:09+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:09+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:09+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:09+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:09+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:13+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:13+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:17+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:17+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:17+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:17+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:17+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:21+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:21+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:21+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:21+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:21+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:24+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:24+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:28+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:28+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:34+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:34+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:41+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:41+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:49+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:49+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:49+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:49+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:49+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:14:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:14:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:14:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:14:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:14:57+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:14:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:14:57+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:04+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:05+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:13+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:13+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:13+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:13+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:13+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:20+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:20+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:20+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:20+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:20+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:27+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:27+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:36+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:36+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:43+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:43+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:15:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:15:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:15:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:15:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:15:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:00+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:00+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:00+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:00+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:00+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:08+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:08+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:11+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:11+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:11+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:11+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:11+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:15+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:15+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:19+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:19+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:22+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:22+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:26+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:26+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:30+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:30+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:30+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:30+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:30+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:34+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:34+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:40+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:40+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:40+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:40+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:40+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:45+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:45+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:45+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:45+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:45+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:50+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:50+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:50+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:50+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:50+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:55+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:55+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:16:59+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:16:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:16:59+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:16:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:16:59+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:16:59+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:16:59+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:17:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:17:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:17:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:17:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:17:05+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:17:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:17:05+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:17:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:17:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:17:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:17:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:17:10+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:17:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-24 12:17:10+0530 - sLogger - DEBUG - filetype: pdf
2023-08-24 12:17:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-24 12:17:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-24 12:17:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-24 12:17:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-24 12:17:15+0530 - sLogger - DEBUG - function: predict completed.
2023-08-24 12:17:15+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-08-24 12:17:15+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6, 27, 31, 32], 'predicted_cpl_pages': [5, 22, 23], 'predicted_ccf_pages': [8], 'filtered_cbs_pages': [6], 'filtered_cpl_pages': [5], 'filtered_ccf_pages': [8], 'month': 'december', 'status': 'Page Classification Completed'}
2023-08-24 12:17:15+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-08-24 12:17:15+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-08-24 12:17:15+0530 - sLogger - DEBUG - process file completed
2023-08-24 12:17:15+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-08-24 12:17:15+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-24 12:17:15+0530 - sLogger - DEBUG - TE process file started
2023-08-24 12:21:30+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-24 12:23:39+0530 - sLogger - DEBUG - process_main_pages started
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring started
2023-08-24 12:23:39+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-24 12:23:39+0530 - sLogger - DEBUG - set_section_details started
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Investments | [('noncurrentassets', 38), ('assets', 36), ('currentassets', 33), ('equity', 33), ('noncurrentliabilities', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('equity and liabilities', 26), ('equityandliabilities', 24), ('current assets', 21), ('noncurrent assets', 21), ('equity liabilities', 21), ('current liabilities', 20), ('noncurrent liabilities', 20), ('liabilities', 17)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD current assets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD currentassets | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD current liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD currentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrent assets | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrent liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD non current assets | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD non current liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrentassets | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD equity and liabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Investments | MATCH WORD equityandliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Liabilities | [('liabilities', 100), ('equity liabilities', 63), ('current liabilities', 60), ('noncurrent liabilities', 60), ('equity and liabilities', 52), ('equityandliabilities', 35), ('equity', 33), ('equityliabilities', 29), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('assets', 18), ('current assets', 11), ('noncurrent assets', 11), ('currentassets', 11), ('noncurrentassets', 10)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current assets | score 24
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentassets | score 25
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD current liabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD currentliabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent assets | score 24
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrent liabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current assets | score 24
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD non current liabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentassets | score 22
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity and liabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Liabilities | MATCH WORD equityandliabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Trade and other payables | [('equity and liabilities', 46), ('current liabilities', 33), ('noncurrentassets', 32), ('current assets', 29), ('noncurrent assets', 29), ('equity liabilities', 29), ('noncurrentliabilities', 29), ('noncurrent liabilities', 28), ('currentassets', 24), ('equityandliabilities', 24), ('assets', 22), ('liabilities', 21), ('equityliabilities', 20), ('currentliabilities', 19), ('equity', 14)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current assets | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentassets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD current liabilities | score 47
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD currentliabilities | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent assets | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrent liabilities | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current assets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD non current liabilities | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentassets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD noncurrentliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity and liabilities | score 48
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Trade and other payables | MATCH WORD equityandliabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Lease Liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD current assets | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD currentassets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD current liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD currentliabilities | score 69
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrent assets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD non current assets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD non current liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD equity and liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Lease Liabilities | MATCH WORD equityandliabilities | score 70
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Employee benefits | [('equity and liabilities', 38), ('equity liabilities', 36), ('equityliabilities', 35), ('current liabilities', 34), ('currentliabilities', 33), ('equityandliabilities', 31), ('currentassets', 30), ('noncurrentliabilities', 30), ('current assets', 29), ('noncurrent assets', 29), ('liabilities', 29), ('equity', 29), ('noncurrent liabilities', 28), ('noncurrentassets', 27), ('assets', 20)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current assets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentassets | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD current liabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD currentliabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent assets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current assets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD non current liabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD noncurrentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity and liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equity | score 45
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Employee benefits | MATCH WORD equityandliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Share capital | [('current assets', 42), ('assets', 38), ('equity and liabilities', 36), ('currentassets', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('current liabilities', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('equityandliabilities', 27), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('equityliabilities', 21)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current assets | score 37
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD currentliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent assets | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrent liabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current assets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD non current liabilities | score 41
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentassets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD noncurrentliabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity and liabilities | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equity | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Share capital | MATCH WORD equityandliabilities | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-24 12:23:39+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-24 12:23:39+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-24 12:23:39+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-24 12:23:39+0530 - sLogger - DEBUG - set_section_details started
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from operating activities | operating cash flow before working capital changes
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash receipts from customers | adiustments for movements in working capital
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash paid to suppliers and employees | changes in operating assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash generated from operating activities | adjustments for increase decrease in operating assets
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income taxes received | adiustments for movements in working capital
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from operating activities | adjustments for increase decrease in operating assets
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from investing activities | operating cash flow before working capital changes
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment | operating profit before changes in assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Acquisition of property, plant and equipment | changes in operating assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Advance of loans to related parties | changes in operating assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash used in investing activities | adjustments for increase decrease in operating liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash flows from financing activities | operating cash flow before working capital changes
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of finance lease liabilities | changes in operating assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash from financing activities | operating cash flow before working capital changes
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net increase/decrease) in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at beginning of year | changes in operating assets and liabilities
2023-08-24 12:23:40+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at end of year | changes in operating assets and liabilities
2023-08-24 12:23:41+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-24 12:23:41+0530 - sLogger - ERROR - error occured: 'value'
2023-08-24 12:23:41+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 4075354.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [4075354.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('cash asset', 67), ('cash and cash equivalents', 31), ('cash and short term deposits', 25), ('Cash and short term deposits', 25), ('bank balances other than cash and cash equivalents', 20), ('bank balances other than above', 19), ('other bank balances', 18), ('cash and bank balances', 16)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('cash and cash equivalents', 100), ('bank balances other than cash and cash equivalents', 65), ('cash and bank balances', 54), ('cash and short term deposits', 54), ('Cash and short term deposits', 54), ('cash asset', 45), ('other bank balances', 37), ('bank balances other than above', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('cash and cash equivalents', 51), ('bank balances other than above', 45), ('cash and short term deposits', 45), ('Cash and short term deposits', 45), ('bank balances other than cash and cash equivalents', 42), ('other bank balances', 41), ('cash and bank balances', 33), ('cash asset', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other bank balances', 31), ('cash and short term deposits', 28), ('Cash and short term deposits', 28), ('bank balances other than above', 22), ('cash asset', 21), ('cash and cash equivalents', 20), ('bank balances other than cash and cash equivalents', 15), ('cash and bank balances', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), ('cash and short term deposits', 18), ('Cash and short term deposits', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 6387380.0, 'line_item_label': ['Cash and cash equivalents'], 'note_numbers': ['9'], 'line_item_value': [6387380.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none cash at bank , res_fuzz_match = [(' cash at bank ', 100), ('cash on hand ', 78), (' cash at bank and on hand ', 64), (' cash asset', 63), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 57), (' cash on hand and at bank ', 57), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 50), (' bank balances ', 45), (' short term deposits ', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statements of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none 10 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' short term deposits ', 25), (' cash and cash equivalents ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), ('  cash and bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none cash at bank , res_fuzz_match = [(' cash at bank ', 100), ('cash on hand ', 78), (' cash at bank and on hand ', 64), (' cash asset', 63), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 57), (' cash on hand and at bank ', 57), (' cash and cash equivalents ', 50), ('  cash and bank balances ', 50), (' bank balances ', 45), (' short term deposits ', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none cash and cash equivalents in the statements of cash flows , res_fuzz_match = [(' cash and cash equivalents ', 100), ('cash on hand ', 89), (' cash at bank ', 78), (' cash on hand and at bank ', 61), ('  cash and bank balances ', 60), (' cash asset', 60), (' cash at bank and on hand ', 56), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 46), (' short term deposits ', 39), (' bank balances ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = none 10 , res_fuzz_match = [(' cash at banks earns interest at floating rates based on daily bank deposit rates ', 50), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' short term deposits ', 25), (' cash and cash equivalents ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), ('  cash and bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' short term deposits ', 38), (' cash and cash equivalents ', 38), ('  cash and bank balances ', 38), ('cash on hand ', 25), (' cash at bank ', 25), (' cash at bank and on hand ', 25), (' cash at banks earns interest at floating rates based on daily bank deposit rates ', 25), (' cash on hand and at bank ', 25), (' bank balances ', 25), (' cash asset', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': [100, 100, 100, 100], 'value': [6387380.0, 6387380.0, 4075354.0, 4075354.0], 'label': ['None Cash at bank', 'None Cash and cash equivalents in the statements of cash flows', 'None Cash at bank', 'None Cash and cash equivalents in the statements of cash flows'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['inventories']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 371956.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [371956.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['inventories'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('inventories', 40)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('inventories', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('inventories', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('inventories', 100)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('inventories', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 766168.0, 'line_item_label': ['Inventories'], 'note_numbers': ['11'], 'line_item_value': [766168.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' parts and accessories (at cost) ', ' stock in transit ', ' Vehicles ', ' Demonstrator units ', ' Training Vehicles'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud coal stocks , res_fuzz_match = [(' finished goods at cost ', 44), (' stores and other consumables at cost ', 43), (' parts and accessories (at cost) ', 43), (' goods in transit ', 42), (' cranes ', 40), (' cranes - in transit ', 38), (' stock in transit ', 38), (' provision for inventory obsolescence ', 36), (' Vehicles ', 33), (' Demonstrator units ', 32), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' finished goods ', 27), (' Training Vehicles', 25), (' work in progress ', 23), (' inventories ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud materials and supplies , res_fuzz_match = [('raw materials ', 80), (' raw materials ', 80), (' goods in transit ', 50), (' stores and other consumables at cost ', 48), (' cranes - in transit ', 46), (' stock in transit ', 46), (' Demonstrator units ', 46), (' parts and accessories (at cost) ', 43), (' Training Vehicles', 42), (' cranes ', 40), (' spare parts ', 40), (' provision for inventory obsolescence ', 33), (' Vehicles ', 33), (' finished goods at cost ', 31), (' finished goods ', 27), (' work in progress ', 23), (' inventories ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud allowance for obsolesence , res_fuzz_match = [(' provision for inventory obsolescence ', 57), (' work in progress ', 54), (' stores and other consumables at cost ', 48), (' parts and accessories (at cost) ', 43), ('raw materials ', 40), (' raw materials ', 40), (' finished goods at cost ', 38), (' finished goods ', 36), (' goods in transit ', 33), (' cranes - in transit ', 31), (' stock in transit ', 31), (' Demonstrator units ', 31), (' spare parts ', 30), (' Training Vehicles', 25), (' inventories ', 22), (' cranes ', 20), (' Vehicles ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud total , res_fuzz_match = [(' stores and other consumables at cost ', 56), (' finished goods at cost ', 44), (' goods in transit ', 44), (' cranes - in transit ', 44), (' parts and accessories (at cost) ', 44), (' spare parts ', 35), ('raw materials ', 33), (' raw materials ', 33), (' provision for inventory obsolescence ', 33), (' stock in transit ', 33), (' finished goods ', 24), (' work in progress ', 22), (' inventories ', 22), (' Demonstrator units ', 22), (' Training Vehicles', 22), (' cranes ', 20), (' Vehicles ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud coal stocks , res_fuzz_match = [(' finished goods at cost ', 44), (' stores and other consumables at cost ', 43), (' parts and accessories (at cost) ', 43), (' goods in transit ', 42), (' cranes ', 40), (' cranes - in transit ', 38), (' stock in transit ', 38), (' provision for inventory obsolescence ', 36), (' Vehicles ', 33), (' Demonstrator units ', 32), ('raw materials ', 30), (' raw materials ', 30), (' spare parts ', 30), (' finished goods ', 27), (' Training Vehicles', 25), (' work in progress ', 23), (' inventories ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud materials and supplies , res_fuzz_match = [('raw materials ', 80), (' raw materials ', 80), (' goods in transit ', 50), (' stores and other consumables at cost ', 48), (' cranes - in transit ', 46), (' stock in transit ', 46), (' Demonstrator units ', 46), (' parts and accessories (at cost) ', 43), (' Training Vehicles', 42), (' cranes ', 40), (' spare parts ', 40), (' provision for inventory obsolescence ', 33), (' Vehicles ', 33), (' finished goods at cost ', 31), (' finished goods ', 27), (' work in progress ', 23), (' inventories ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud allowance for obsolesence , res_fuzz_match = [(' provision for inventory obsolescence ', 57), (' work in progress ', 54), (' stores and other consumables at cost ', 48), (' parts and accessories (at cost) ', 43), ('raw materials ', 40), (' raw materials ', 40), (' finished goods at cost ', 38), (' finished goods ', 36), (' goods in transit ', 33), (' cranes - in transit ', 31), (' stock in transit ', 31), (' Demonstrator units ', 31), (' spare parts ', 30), (' Training Vehicles', 25), (' inventories ', 22), (' cranes ', 20), (' Vehicles ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = in aud total , res_fuzz_match = [(' stores and other consumables at cost ', 56), (' finished goods at cost ', 44), (' goods in transit ', 44), (' cranes - in transit ', 44), (' parts and accessories (at cost) ', 44), (' spare parts ', 35), ('raw materials ', 33), (' raw materials ', 33), (' provision for inventory obsolescence ', 33), (' stock in transit ', 33), (' finished goods ', 24), (' work in progress ', 22), (' inventories ', 22), (' Demonstrator units ', 22), (' Training Vehicles', 22), (' cranes ', 20), (' Vehicles ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = inventories , res_fuzz_match = [(' provision for inventory obsolescence ', 100), (' inventories ', 100), (' cranes - in transit ', 56), (' Training Vehicles', 56), (' parts and accessories (at cost) ', 44), (' Demonstrator units ', 44), (' cranes ', 40), ('raw materials ', 33), (' finished goods ', 33), (' finished goods at cost ', 33), (' stores and other consumables at cost ', 33), (' raw materials ', 33), (' goods in transit ', 33), (' stock in transit ', 33), (' Vehicles ', 33), (' work in progress ', 22), (' spare parts ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 1, 2, 3, 4, 5, 5, 6, 7], 'score': [100, 80, 100, 100, 100, 100, 80, 100, 100, 100], 'value': [535348.0, 312838.0, 312838.0, -82018.0, 766168.0, 158181.0, 282620.0, 282620.0, -68845.0, 371956.0], 'label': ['Inventories', 'In AUD Materials and supplies', 'Inventories', 'Inventories', 'Inventories', 'Inventories', 'In AUD Materials and supplies', 'Inventories', 'Inventories', 'Inventories'], 'year': [], 'colname_found': ['columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4], 'score': 100, 'value': 590258.0, 'line_item_label': ['Trade and other receivables', 'Prepayments'], 'note_numbers': ['10', nan], 'line_item_value': [555857.0, 34401.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('other assets ', 62), (' other current assets ', 42), (' other financial assets ', 42), (' other current financial assets ', 31), (' trade and other receivables', 22), (' prepayments ', 18)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), ('other assets ', 31), (' other current assets ', 30), (' other financial assets ', 30), (' other current financial assets ', 29), (' prepayments ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), ('other assets ', 42), (' other current financial assets ', 41), (' other current assets ', 39), (' other financial assets ', 39), (' prepayments ', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('other assets ', 40), (' other current assets ', 36), (' other financial assets ', 36), (' other current financial assets ', 28), (' trade and other receivables', 26), (' prepayments ', 13)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 4], 'score': 100, 'value': 330335.0, 'line_item_label': ['Trade and other receivables', 'Prepayments'], 'note_numbers': ['10', nan], 'line_item_value': [290928.0, 39407.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' other receivables and prepayments ', 53), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' other receivables and prepayments ', 40), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' prepaid expenditure ', 46), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' other receivables and prepayments ', 41), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' other prepayments ', 67), (' other receivables and prepayments ', 50), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' prepaid expenditure ', 34), (' prepayments ', 33), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' prepaid expenditure ', 43), (' other prepayments ', 43), (' other receivables and prepayments ', 43), (' prepayments ', 33), ('prepaid expense ', 29), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' other receivables and prepayments ', 53), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' prepaid expenditure ', 39), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 41), (' other receivables and prepayments ', 40), (' prepayments ', 33), (' other prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' prepaid expenditure ', 46), (' prepaid ', 43), (' prepaid ', 43), (' other prepayments ', 42), (' other receivables and prepayments ', 41), ('prepaid expense ', 36), (' charges paid in advance', 35), (' prepayments ', 33), (' in advance ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' other prepayments ', 67), (' other receivables and prepayments ', 50), (' prepaid ', 43), (' prepaid ', 43), ('prepaid expense ', 36), (' prepaid expenditure ', 34), (' prepayments ', 33), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' other receivables and prepayments ', 38), (' prepayments ', 33), (' other prepayments ', 33), (' charges paid in advance', 31), (' prepaid ', 29), (' prepaid ', 29), ('prepaid expense ', 23), (' prepaid expenditure ', 23), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' prepaid expenditure ', 43), (' other prepayments ', 43), (' other receivables and prepayments ', 43), (' prepayments ', 33), ('prepaid expense ', 29), (' prepaid ', 29), (' prepaid ', 29), (' charges paid in advance', 29), (' in advance ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other prepayments ', 67), (' in advance ', 67), (' other receivables and prepayments ', 50), (' prepaid expenditure ', 44), ('prepaid expense ', 43), (' prepaid ', 43), (' prepaid ', 43), (' charges paid in advance', 35), (' prepayments ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 555857.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [555857.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' other assets ', 62), (' biological assets ', 59), (' financial assets ', 56), ('other current assets ', 42), (' other financial assets ', 42), (' trade and other receivables', 22), (' income tax receivable from related parties ', 16), (' deferred operating expenditure ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' trade and other receivables', 51), (' biological assets ', 36), (' financial assets ', 35), (' income tax receivable from related parties ', 33), (' other assets ', 31), ('other current assets ', 30), (' other financial assets ', 30), (' deferred operating expenditure ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' trade and other receivables', 100), (' income tax receivable from related parties ', 47), (' deferred operating expenditure ', 47), (' other assets ', 42), ('other current assets ', 39), (' other financial assets ', 39), (' financial assets ', 29), (' biological assets ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [(' other assets ', 40), ('other current assets ', 36), (' financial assets ', 36), (' other financial assets ', 36), (' deferred operating expenditure ', 33), (' biological assets ', 29), (' trade and other receivables', 26), (' income tax receivable from related parties ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables', 21), ('other current assets ', 16), (' other financial assets ', 16), (' other assets ', 12), (' biological assets ', 11)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 290928.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [290928.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' other receivables - related party', 79), (' income tax receivable from related parties', 75), (' other deposits receivable - related party', 69), (' current investments', 64), (' related party receivable', 61), (' rental bond', 55), (' accrued rebates', 55), (' interest receivable', 53), (' related party disclosures', 52), (' amount receivable from controlling entity', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' lng', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' current investments', 64), (' rental bond', 55), (' interest receivable', 47), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 45), (' accrued rebates', 45), (' other debtors and prepayments', 45), (' related party receivable', 44), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' forward exchange contracts', 40), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' derivative contracts - fair value', 35), (' lng', 33), (' long service leave receivable', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' accrued rebates', 73), (' accrued interest', 62), (' current investments', 57), (' related party receivable', 56), (' rental bond', 55), (' interest receivable', 47), (' electricity derivatives at fair value', 45), (' derivative contracts - fair value', 45), (' condensate', 43), (' share of jv prepayments', 42), (' other debtors and prepayments', 41), (' related party disclosures', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 38), ('other assets', 36), (' other receivables - related party', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' long service leave receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' lng', 33), (' deposits', 29), (' other', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' other deposits receivable - related party', 55), (' rental bond', 55), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), ('foreign exchange derivatives at fair value', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), (' other debtors and prepayments', 41), (' electricity derivatives at fair value', 40), (' forward exchange contracts', 40), (' related party disclosures', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' lng', 33), (' bank guarantee', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' current investments', 100), (' amount receivable from controlling entity', 57), (' bank guarantee', 57), (' accrued rebates', 57), ('other assets', 43), (' electricity derivatives at fair value', 43), (' accrued interest', 43), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' other receivables - related party', 43), (' other deposits receivable - related party', 43), (' interest receivable', 43), (' condensate', 43), (' foreign exchange forward contracts', 43), (' forward exchange contracts', 43), (' lng', 33), ('foreign exchange derivatives at fair value', 29), (' long service leave receivable', 29), (' deposits', 29), (' related party receivable', 29), (' share of jv prepayments', 29), (' other debtors and prepayments', 29), (' other', 20), (' rental bond', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' other receivables - related party', 79), (' income tax receivable from related parties', 75), (' other deposits receivable - related party', 69), (' current investments', 64), (' related party receivable', 61), (' rental bond', 55), (' accrued rebates', 55), (' interest receivable', 53), (' related party disclosures', 52), (' amount receivable from controlling entity', 48), (' derivative contracts - fair value', 46), ('foreign exchange derivatives at fair value', 45), (' long service leave receivable', 43), (' deposits', 43), (' condensate', 43), (' other debtors and prepayments', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' foreign exchange forward contracts', 41), (' other', 40), (' bank guarantee', 38), (' forward exchange contracts', 38), ('other assets', 36), (' accrued interest', 36), (' lng', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' current investments', 64), (' rental bond', 55), (' interest receivable', 47), ('other assets', 45), ('foreign exchange derivatives at fair value', 45), (' foreign exchange forward contracts', 45), (' accrued rebates', 45), (' other debtors and prepayments', 45), (' related party receivable', 44), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), (' other', 40), (' related party disclosures', 40), (' income tax receivable from related parties', 40), (' other receivables - related party', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' forward exchange contracts', 40), (' bank guarantee', 38), (' electricity derivatives at fair value', 36), (' derivative contracts - fair value', 35), (' lng', 33), (' long service leave receivable', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' accrued rebates', 73), (' accrued interest', 62), (' current investments', 57), (' related party receivable', 56), (' rental bond', 55), (' interest receivable', 47), (' electricity derivatives at fair value', 45), (' derivative contracts - fair value', 45), (' condensate', 43), (' share of jv prepayments', 42), (' other debtors and prepayments', 41), (' related party disclosures', 40), (' other deposits receivable - related party', 40), (' amount receivable from controlling entity', 40), (' bank guarantee', 38), ('other assets', 36), (' other receivables - related party', 36), ('foreign exchange derivatives at fair value', 35), (' income tax receivable from related parties', 35), (' long service leave receivable', 35), (' foreign exchange forward contracts', 35), (' forward exchange contracts', 35), (' lng', 33), (' deposits', 29), (' other', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), (' related party receivable', 67), ('other assets', 64), (' current investments', 64), (' other deposits receivable - related party', 55), (' rental bond', 55), (' income tax receivable from related parties', 50), (' long service leave receivable', 50), (' other receivables - related party', 50), (' amount receivable from controlling entity', 50), ('foreign exchange derivatives at fair value', 45), (' accrued rebates', 45), (' accrued interest', 43), (' deposits', 43), (' condensate', 43), (' share of jv prepayments', 42), (' other debtors and prepayments', 41), (' electricity derivatives at fair value', 40), (' forward exchange contracts', 40), (' related party disclosures', 35), (' derivative contracts - fair value', 35), (' foreign exchange forward contracts', 35), (' lng', 33), (' bank guarantee', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' current investments', 62), (' rental bond', 57), (' income tax receivable from related parties', 46), (' amount receivable from controlling entity', 46), (' foreign exchange forward contracts', 46), (' forward exchange contracts', 46), (' accrued rebates', 45), (' condensate', 43), (' accrued interest', 40), (' other', 40), ('foreign exchange derivatives at fair value', 38), (' electricity derivatives at fair value', 38), (' derivative contracts - fair value', 38), (' other receivables - related party', 38), (' other deposits receivable - related party', 38), (' other debtors and prepayments', 38), (' share of jv prepayments', 33), (' lng', 33), (' related party disclosures', 31), (' interest receivable', 31), (' bank guarantee', 31), (' deposits', 29), ('other assets', 27), (' long service leave receivable', 23), (' related party receivable', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' current investments', 100), (' amount receivable from controlling entity', 57), (' bank guarantee', 57), (' accrued rebates', 57), ('other assets', 43), (' electricity derivatives at fair value', 43), (' accrued interest', 43), (' related party disclosures', 43), (' income tax receivable from related parties', 43), (' derivative contracts - fair value', 43), (' other receivables - related party', 43), (' other deposits receivable - related party', 43), (' interest receivable', 43), (' condensate', 43), (' foreign exchange forward contracts', 43), (' forward exchange contracts', 43), (' lng', 33), ('foreign exchange derivatives at fair value', 29), (' long service leave receivable', 29), (' deposits', 29), (' related party receivable', 29), (' share of jv prepayments', 29), (' other debtors and prepayments', 29), (' other', 20), (' rental bond', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' other', 100), (' interest receivable', 73), ('other assets', 64), (' related party receivable', 61), (' other deposits receivable - related party', 59), (' long service leave receivable', 51), (' other receivables - related party', 50), (' forward exchange contracts', 50), (' other debtors and prepayments', 50), ('foreign exchange derivatives at fair value', 45), (' income tax receivable from related parties', 45), (' rental bond', 45), (' accrued interest', 43), (' deposits', 43), (' share of jv prepayments', 42), (' electricity derivatives at fair value', 41), (' amount receivable from controlling entity', 41), (' foreign exchange forward contracts', 41), (' bank guarantee', 38), (' derivative contracts - fair value', 36), (' current investments', 36), (' accrued rebates', 36), (' related party disclosures', 33), (' lng', 33), (' condensate', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 3, 4, 5, 5, 6, 7, 8, 9, 9, 10, 11, 11], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [0.0, 108249.0, 113896.0, 68783.0, 68783.0, 290928.0, 0.0, 0.0, 343293.0, 116819.0, 0.0, 95745.0, 95745.0, 555857.0, 0.0, 0.0], 'label': ['Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Current Other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Current 11', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Current Other receivables', 'Trade and other receivables', 'Trade and other receivables', 'Current 11', 'Trade and other receivables'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'rows', 'columns']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = [' '] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [(' ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31), ('plant and equipment ', 29), (' Property ', 29), (' plant and equipment ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 17415270.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17415270.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31), ('plant and equipment ', 29), (' Property ', 29), (' plant and equipment ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 18626484.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [18626484.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings', 57), (' Building & mine infrastructure ', 43), (' Marine ', 40), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), ('accumulated depreciation ', 29), (' Capitalised pre stripping costs ', 29), (' Mine infrastructure ', 29), ('depreciatio', 27), (' Mining properties ', 23), (' Stripping WIP ', 22), (' Development properties ', 21), (' Other assets ', 18), (' Subsea ', 17), (' Workshop tooling ', 15), (' Construction in progress ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Marine ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), ('depreciatio', 45), (' Development properties ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Construction in progress ', 27), (' Fishing vessels & equipment ', 27), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' Development properties ', 77), (' Marine ', 60), ('depreciatio', 57), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), ('accumulated depreciation ', 46), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Construction in progress ', 38), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), (' Freehold land and buildings ', 23), (' Leasehold buildings', 23), (' Facilities ', 20), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Leasehold buildings', 41), (' Capitalised pre stripping costs ', 40), (' Assets under construction ', 40), (' Marine ', 40), (' Other assets ', 36), ('accumulated depreciation ', 33), (' Asset Retirement Obligation ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Development properties ', 28), ('depreciatio', 27), (' Construction in progress ', 27), (' Mine infrastructure ', 27), (' under construction ', 27), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' Construction in progress ', 71), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Development properties ', 43), (' Marine ', 40), (' Pipeline Asset ', 38), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), ('depreciatio', 29), ('accumulated depreciation ', 29), (' Assets under construction ', 29), (' Mine infrastructure ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), (' Facilities ', 20), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' Plant and equipment ', 60), (' Marine ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Capitalised pre stripping costs ', 36), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), ('depreciatio', 27), (' Development properties ', 25), (' Fishing vessels & equipment ', 24)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('depreciatio', 30), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' Stripping WIP ', 56), (' Construction in progress ', 55), (' Capitalised pre stripping costs ', 55), (' Plant and equipment ', 45), (' Other assets ', 45), (' land and improvement ', 45), ('depreciatio', 36), ('accumulated depreciation ', 36), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings', 27), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [(' Other assets ', 73), (' Construction in progress ', 47), (' Assets under construction ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), ('accumulated depreciation ', 27), (' Leasehold buildings', 27), (' land and improvement ', 20), (' Marine ', 20), (' Facilities ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' Subsea ', 50), (' Freehold land and buildings ', 44), ('accumulated depreciation ', 41), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Assets under construction ', 39), (' Other assets ', 36), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Leasehold buildings', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), ('depreciatio', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Development properties ', 19), (' Mine infrastructure ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Marine ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Fishing vessels & equipment ', 35), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Other assets ', 55), (' Plant and equipment ', 53), (' Capitalised pre stripping costs ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Development properties ', 44), (' Fishing vessels & equipment ', 41), (' Marine ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Asset Retirement Obligation ', 35), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation ', 100), ('depreciatio', 73), (' land and improvement ', 67), (' Facilities ', 60), (' Plant and equipment ', 53), (' Subsea ', 50), (' Mining properties ', 46), (' Pipeline Asset ', 46), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Construction in progress ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 47), (' Plant and equipment ', 47), (' Other assets ', 45), (' under construction ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Pipeline Asset ', 38), ('depreciatio', 36), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Asset Retirement Obligation ', 35), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Development properties ', 19)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' Marine ', 60), ('accumulated depreciation ', 48), (' Plant and equipment ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 37), (' Capitalised pre stripping costs ', 37), (' Assets under construction ', 37), ('depreciatio', 36), (' Other assets ', 36), (' Construction in progress ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' Development properties ', 19), (' Subsea ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('depreciatio', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 5, 6, 6, 7, 7, 8, 8, 9, 10, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 27, 28, 28, 29, 29, 30, 30, 31, 32, 33, 34, 35, 36, 37, 38, 38, 39, 39, 40, 40, 41, 41, 42, 43, 49, 50, 51, 52, 60, 61, 62, 63], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [1964984.0, 26478.0, 0.0, -259119.0, 1732343.0, 742495.0, 742495.0, 56020.0, 56020.0, 0.0, 0.0, 798515.0, 798515.0, 1222489.0, 933828.0, 8728892.0, 1205000.0, 0.0, 9933892.0, 2266061.0, 125263.0, 0.0, 0.0, 2391324.0, 986195.0, 986195.0, 139293.0, 139293.0, 0.0, 0.0, 1125488.0, 1125488.0, 1279866.0, 1265836.0, 14839237.0, 522953.0, -15773.0, 0.0, 15346417.0, 7678818.0, 7678818.0, 975910.0, 975910.0, -15732.0, -15732.0, 8638996.0, 8638996.0, 7160419.0, 6707421.0, 0.0, 0.0, 0.0, 0.0, 18136400.0, 2376223.0, -15732.0, 20496891.0], 'label': ['Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Land and Buildings', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Land and Buildings', 'Accumulated depreciation and impairment losses Disposals', 'Land and Buildings', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Mine Properties', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Mine Properties', 'Accumulated depreciation and impairment losses Disposals', 'Mine Properties', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Plant and Equipment', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Plant and Equipment', 'Accumulated depreciation and impairment losses Disposals', 'Plant and Equipment', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 0), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('gross', 40), ('net value', 38), ('net book value', 33), ('cost', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('gross', 80), ('cost', 25), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost', 100), ('gross', 40), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost', 100), ('net value', 50), ('net book value', 46), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('gross', 60), ('cost', 50), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost', 50), ('net value', 50), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 33, 34, 35, 36, 37, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [1964984.0, 26478.0, 0.0, -259119.0, 1732343.0, 12466018.0, 12466018.0, 1130891.0, 1130891.0, 0.0, 0.0, 0.0, 0.0, 13596909.0, 13596909.0, 8728892.0, 1205000.0, 0.0, 9933892.0, 3737126.0, 3663017.0, 2266061.0, 125263.0, 0.0, 0.0, 2391324.0, 14839237.0, 522953.0, -15773.0, 0.0, 15346417.0, 4015370.0, 4015370.0, 2041012.0, 2041012.0, 0.0, 0.0, 0.0, 0.0, 6056382.0, 6056382.0, 0.0, 0.0, 0.0, 0.0, 4015370.0, 6056382.0, 35551670.0, 3846597.0, -15773.0, -259119.0, 39123375.0], 'label': ['Cost Balance at1 1 January 2022', 'Cost Additions', 'Cost Disposals', 'Cost Other adjustments', 'Cost Balance at 31 December 2022', 'Cost Balance at1 1 January 2022', 'Deferred Mining Cost', 'Cost Additions', 'Deferred Mining Cost', 'Cost Disposals', 'Deferred Mining Cost', 'Cost Other adjustments', 'Deferred Mining Cost', 'Cost Balance at 31 December 2022', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Cost Balance at1 1 January 2022', 'Cost Additions', 'Cost Disposals', 'Cost Other adjustments', 'Cost Balance at 31 December 2022', 'Cost Balance at1 1 January 2022', 'Cost Additions', 'Cost Disposals', 'Cost Other adjustments', 'Cost Balance at 31 December 2022', 'Cost Balance at1 1 January 2022', 'Worki in Progress', 'Cost Additions', 'Worki in Progress', 'Cost Disposals', 'Worki in Progress', 'Cost Other adjustments', 'Worki in Progress', 'Cost Balance at 31 December 2022', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Cost Balance at1 1 January 2022', 'Cost Additions', 'Cost Disposals', 'Cost Other adjustments', 'Cost Balance at 31 December 2022'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 17415270.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17415270.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 18626484.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [18626484.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' investment property', 100), ('Work in progress ', 33), (' plant property equipment ', 33), (' property plant equipment ', 33), (' plant and equipment ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 17434029.0, 'line_item_label': ['Property, plant and equipment', 'Investments'], 'note_numbers': ['12', nan], 'line_item_value': [17415270.0, 18759.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' investment property', 100), ('Work in progress ', 33), (' plant property equipment ', 33), (' property plant equipment ', 33), (' plant and equipment ', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 3], 'score': 100, 'value': 18645243.0, 'line_item_label': ['Property, plant and equipment', 'Investments'], 'note_numbers': ['12', nan], 'line_item_value': [18626484.0, 18759.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['construction in progress ', ' work in progress ', ' capital works in progress ', ' WIP'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' WIP', 33), (' capital works in progress ', 21), ('construction in progress ', 14), (' work in progress ', 8)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' WIP', 33), (' work in progress ', 31), ('construction in progress ', 27), (' capital works in progress ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('construction in progress ', 38), (' work in progress ', 38), (' capital works in progress ', 38), (' WIP', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 33), ('construction in progress ', 27), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' capital works in progress ', 96), (' work in progress ', 92), ('construction in progress ', 71), (' WIP', 67)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('construction in progress ', 39), (' WIP', 33), (' capital works in progress ', 26), (' work in progress ', 15)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress ', 40), (' WIP', 33), (' work in progress ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' WIP', 67), ('construction in progress ', 55), (' work in progress ', 36), (' capital works in progress ', 36)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('construction in progress ', 47), (' capital works in progress ', 35), (' work in progress ', 31), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 28), (' work in progress ', 15), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' WIP', 67), (' capital works in progress ', 47), (' work in progress ', 46), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' WIP', 67), (' work in progress ', 46), (' capital works in progress ', 42), ('construction in progress ', 39)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('construction in progress ', 39), (' capital works in progress ', 37), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' capital works in progress ', 37), ('construction in progress ', 33), (' WIP', 33), (' work in progress ', 23)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress ', 40), (' work in progress ', 20), (' WIP', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [44, 45, 46, 47, 48, 49, 50, 51, 52, 53, 54], 'score': [96, 96, 96, 96, 96, 96, 96, 96, 96, 96, 96], 'value': [4015370.0, 2041012.0, 0.0, 0.0, 6056382.0, 0.0, 0.0, 0.0, 0.0, 4015370.0, 6056382.0], 'label': ['Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:12+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('tangible assets', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('tangible assets', 21)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 33), ('goodwill ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 33), ('goodwill ', 17)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:12+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-24 12:24:12+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('intangible assets ', 50), (' intangible under development ', 50), (' intangible assets under development ', 50), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 80, 'value': 17415270.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17415270.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('intangible assets ', 50), (' intangible under development ', 50), (' intangible assets under development ', 50), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 80, 'value': 18626484.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [18626484.0]}
2023-08-24 12:24:12+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:12+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' software ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' development and software ', 43), (' mining rights ', 30), ('Other intangibles ', 25), (' water licenses', 25), (' consumer contracts ', 21), (' software ', 14), (' computer software ', 14)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [(' mining rights ', 63), ('Other intangibles ', 50), (' water licenses', 50), (' development and software ', 47), (' consumer contracts ', 33), (' computer software ', 32), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' mining rights ', 60), (' consumer contracts ', 38), ('Other intangibles ', 33), (' computer software ', 32), (' development and software ', 31), (' software ', 29), (' water licenses', 25)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' development and software ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' mining rights ', 40), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 29), (' software ', 29), (' computer software ', 29), (' consumer contracts ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 37), (' computer software ', 36), (' water licenses', 33), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' mining rights ', 30), (' water licenses', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('Other intangibles ', 58), (' consumer contracts ', 53), (' computer software ', 50), (' software ', 43), (' water licenses', 42), (' development and software ', 35), (' mining rights ', 30)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [(' software ', 43), ('Other intangibles ', 42), (' consumer contracts ', 40), (' computer software ', 36), (' water licenses', 33), (' development and software ', 28), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 50), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' development and software ', 53), ('Other intangibles ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' software ', 29)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [(' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), ('Other intangibles ', 42), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 26)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [(' computer software ', 36), ('Other intangibles ', 33), (' consumer contracts ', 33), (' water licenses', 33), (' mining rights ', 30), (' software ', 29), (' development and software ', 22)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-24 12:24:12+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('donations', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('donations', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 100), (' investments accounted for using the equity method', 100), ('joint ventures and associates', 67), ('derivative financial instruments', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18759.0, 'line_item_label': ['Investments'], 'note_numbers': [nan], 'line_item_value': [18759.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method', 40), ('investment', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method', 38), ('investment', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('investment', 100), (' investment in joint venture', 100), (' investment in associate', 100), (' investments accounted for using the equity method', 100), ('joint ventures and associates', 67), ('derivative financial instruments', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 18759.0, 'line_item_label': ['Investments'], 'note_numbers': [nan], 'line_item_value': [18759.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('deferred tax', 27), ('deferred tax assets', 19), ('deferred charges', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 983594.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['8'], 'line_item_value': [983594.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [('deferred tax', 27), ('deferred tax assets', 19), ('deferred charges', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 1007180.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['8'], 'line_item_value': [1007180.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' leases', 40), (' leased assets', 25), (' exploration and evaluation expenditure', 24), (' other assets', 24), (' loan receivables', 24), (' financial assets', 21), (' other non-current assets', 16), (' other non-current assets', 16), ('non-current', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' leases', 40), (' leased assets', 25), (' exploration and evaluation expenditure', 24), (' other assets', 24), (' loan receivables', 24), (' financial assets', 21), (' other non-current assets', 16), (' other non-current assets', 16), ('non-current', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft ']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 24171.0, 'line_item_label': ['Lease Liabilities'], 'note_numbers': [nan], 'line_item_value': [24171.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash overdraft '] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' lease liabilities ', 71), (' interest bearing liabilites ', 43), ('  leases ', 40), (' loans and borrowings ', 29), (' cash and cash equivalents ', 22), (' borrowings ', 17), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' bank overdraft ', 10), (' cash overdraft ', 10), (' shortterm borrowings ', 9)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' loans and borrowings ', 49), (' interest bearing liabilites ', 45), (' bank overdraft ', 44), (' cash and cash equivalents ', 42), (' cash overdraft ', 39), ('short term debt ', 38), (' short-term debt ', 33), (' shortterm debt ', 33), (' lease liabilities ', 30), (' shortterm borrowings ', 26), (' borrowings ', 21), ('  leases ', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' interest bearing liabilites ', 38), (' short-term debt ', 34), (' shortterm debt ', 34), (' bank overdraft ', 34), ('short term debt ', 33), (' loans and borrowings ', 27), (' shortterm borrowings ', 26), (' lease liabilities ', 23), (' cash and cash equivalents ', 22), ('  leases ', 21), (' cash overdraft ', 21), (' borrowings ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash overdraft ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' cash overdraft ', 32), (' loans and borrowings ', 31), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 33193.0, 'line_item_label': ['Lease Liabilities'], 'note_numbers': [nan], 'line_item_value': [33193.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 2133061.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['13'], 'line_item_value': [2133061.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade payable', 33), ('other trade payables', 25), ('trade and other payables', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100), ('other trade payables', 90), ('trade payable', 71)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32), ('other trade payables', 30), ('trade payable', 22)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 3210007.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['13'], 'line_item_value': [3210007.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', '  accounts payable - trade ', ' Related party payables ', ' trade payables - related parties'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' trade and other payables ', 42), (' amounts payable to controlling entity ', 42), (' other trade payables ', 42), ('  accounts payable - trade ', 42), (' trade payables ', 33), (' trade payables - other parties ', 33), (' payables to related parties ', 33), (' Related party payables ', 33), (' trade payables - related parties', 33), ('trade creditors ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [('trade creditors ', 100), (' trade payables ', 50), (' other trade payables ', 50), ('  accounts payable - trade ', 50), (' amounts payable to controlling entity ', 43), (' trade payables - related parties', 43), (' trade and other payables ', 41), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' Related party payables ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' payables to related parties ', 100), (' trade payables - related parties', 83), (' trade payables ', 67), (' trade payables - other parties ', 67), ('  accounts payable - trade ', 65), (' other trade payables ', 61), (' Related party payables ', 61), (' trade and other payables ', 59), (' amounts payable to controlling entity ', 57), ('trade creditors ', 43)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' trade and other payables ', 81), (' trade payables ', 75), (' other trade payables ', 67), (' Related party payables ', 61), (' trade payables - other parties ', 59), ('  accounts payable - trade ', 50), (' amounts payable to controlling entity ', 48), (' trade payables - related parties', 43), (' payables to related parties ', 33), ('trade creditors ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' amounts payable to controlling entity ', 50), (' other trade payables ', 50), (' trade and other payables ', 43), ('  accounts payable - trade ', 43), (' trade payables - related parties', 43), (' trade payables - other parties ', 36), (' Related party payables ', 36), (' trade payables ', 33), ('trade creditors ', 29), (' payables to related parties ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [(' trade payables ', 42), (' trade payables - other parties ', 40), (' amounts payable to controlling entity ', 40), (' other trade payables ', 39), ('trade creditors ', 38), (' trade and other payables ', 35), ('  accounts payable - trade ', 35), (' trade payables - related parties', 35), (' payables to related parties ', 28), (' Related party payables ', 28)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' trade and other payables ', 42), (' amounts payable to controlling entity ', 42), (' other trade payables ', 42), ('  accounts payable - trade ', 42), (' trade payables ', 33), (' trade payables - other parties ', 33), (' payables to related parties ', 33), (' Related party payables ', 33), (' trade payables - related parties', 33), ('trade creditors ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [('trade creditors ', 100), (' trade payables ', 50), (' other trade payables ', 50), ('  accounts payable - trade ', 50), (' amounts payable to controlling entity ', 43), (' trade payables - related parties', 43), (' trade and other payables ', 41), (' trade payables - other parties ', 39), (' payables to related parties ', 39), (' Related party payables ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' payables to related parties ', 100), (' trade payables - related parties', 83), (' trade payables ', 67), (' trade payables - other parties ', 67), ('  accounts payable - trade ', 65), (' other trade payables ', 61), (' Related party payables ', 61), (' trade and other payables ', 59), (' amounts payable to controlling entity ', 57), ('trade creditors ', 43)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' trade and other payables ', 81), (' trade payables ', 75), (' other trade payables ', 67), (' Related party payables ', 61), (' trade payables - other parties ', 59), ('  accounts payable - trade ', 50), (' amounts payable to controlling entity ', 48), (' trade payables - related parties', 43), (' payables to related parties ', 33), ('trade creditors ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' amounts payable to controlling entity ', 50), (' other trade payables ', 50), (' trade and other payables ', 43), ('  accounts payable - trade ', 43), (' trade payables - related parties', 43), (' trade payables - other parties ', 36), (' Related party payables ', 36), (' trade payables ', 33), ('trade creditors ', 29), (' payables to related parties ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [(' trade payables ', 42), (' trade payables - other parties ', 40), (' amounts payable to controlling entity ', 40), (' other trade payables ', 39), ('trade creditors ', 38), (' trade and other payables ', 35), ('  accounts payable - trade ', 35), (' trade payables - related parties', 35), (' payables to related parties ', 28), (' Related party payables ', 28)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' amounts payable to controlling entity ', 62), ('  accounts payable - trade ', 38), ('trade creditors ', 25), (' trade and other payables ', 25), (' trade payables ', 12), (' trade payables - other parties ', 12), (' other trade payables ', 12), (' payables to related parties ', 12), (' Related party payables ', 12), (' trade payables - related parties', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 3, 7, 8, 9], 'score': [100, 100, 81, 100, 100, 81], 'value': [742849.0, 1420777.0, 1046381.0, 689004.0, 0.0, 1444057.0], 'label': ['None nan Trade creditors', 'None nan Tax funding payable related party', 'None nan Other payables', 'None nan Trade creditors', 'None nan Tax funding payable related party', 'None nan Other payables'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 2133061.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['13'], 'line_item_value': [2133061.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('trade and other payables', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [('trade and other payables', 100)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('trade and other payables', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 3210007.0, 'line_item_label': ['Trade and other payables'], 'note_numbers': ['13'], 'line_item_value': [3210007.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['accrued expenses ', ' interest accrued'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' interest accrued', 33), ('accrued expenses ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [('accrued expenses ', 33), (' interest accrued', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' interest accrued', 33), ('accrued expenses ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [(' interest accrued', 50), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' interest accrued', 43), ('accrued expenses ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' interest accrued', 36), ('accrued expenses ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [('accrued expenses ', 33), (' interest accrued', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('accrued expenses ', 25), (' interest accrued', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': 100, 'value': 1220467.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 1220467.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [('current tax liabilities ', 100), (' income tax payable ', 50), (' tax ', 33), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' tax ', 67), (' income tax payable ', 62), ('current tax liabilities ', 44), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' tax ', 33), (' provision', 33), ('current tax liabilities ', 27), (' income tax payable ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' tax ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' tax ', 33), (' provision', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3], 'score': 100, 'value': 375017.0, 'line_item_label': ['Liabilities', 'Provisions'], 'note_numbers': [nan, '15'], 'line_item_value': [0.0, 375017.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provision for income tax ', 65), ('income tax (refundable)/payable ', 48), (' tax receivable/payable', 47)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [(' provision for income tax ', 40), ('income tax (refundable)/payable ', 37), (' tax receivable/payable', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 29), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 40), (' tax receivable/payable', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 35), (' tax receivable/payable', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' provision for income tax ', 50), ('income tax (refundable)/payable ', 32), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' tax receivable/payable', 41), (' provision for income tax ', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [('income tax (refundable)/payable ', 36), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [(' provision for income tax ', 40), ('income tax (refundable)/payable ', 37), (' tax receivable/payable', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [(' tax receivable/payable', 45), (' provision for income tax ', 40), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provision for income tax ', 65), ('income tax (refundable)/payable ', 48), (' tax receivable/payable', 47)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [(' provision for income tax ', 40), ('income tax (refundable)/payable ', 37), (' tax receivable/payable', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 29), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 40), (' tax receivable/payable', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('income tax (refundable)/payable ', 41), (' provision for income tax ', 35), (' tax receivable/payable', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' provision for income tax ', 50), ('income tax (refundable)/payable ', 32), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [('income tax (refundable)/payable ', 50), (' tax receivable/payable', 41), (' provision for income tax ', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [('income tax (refundable)/payable ', 36), (' provision for income tax ', 35), (' tax receivable/payable', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provision for income tax ', 50), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provision for income tax ', 55), (' tax receivable/payable', 41), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [(' provision for income tax ', 40), ('income tax (refundable)/payable ', 37), (' tax receivable/payable', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [(' tax receivable/payable', 45), (' provision for income tax ', 40), ('income tax (refundable)/payable ', 35)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' provision for income tax ', 38), ('income tax (refundable)/payable ', 25), (' tax receivable/payable', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 3], 'score': 100, 'value': 3719739.0, 'line_item_label': ['Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': ['13', '14', '15'], 'line_item_value': [2133061.0, 366211.0, 1220467.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = liabilities , res_fuzz_match = [(' financial liabilities', 60), ('other current liabilities', 46), (' other current liabilities', 46), (' other financial liabilities', 46), (' foreign exchange contract liability', 32), (' employee benefits', 29), (' trade and other payables', 21), ('provisions', 17), (' customer deposits', 10), (' deferred revenue', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other payables , res_fuzz_match = [(' trade and other payables', 100), ('other current liabilities', 43), (' other current liabilities', 43), (' other financial liabilities', 43), (' deferred revenue', 35), (' foreign exchange contract liability', 34), (' financial liabilities', 33), (' employee benefits', 32), (' customer deposits', 22), ('provisions', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits', 100), ('other current liabilities', 40), (' other current liabilities', 40), (' deferred revenue', 37), (' other financial liabilities', 34), (' customer deposits', 34), (' trade and other payables', 32), (' financial liabilities', 28), (' foreign exchange contract liability', 26), ('provisions', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' customer deposits', 30), (' deferred revenue', 22), (' employee benefits', 19), (' foreign exchange contract liability', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities', 64), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability', 43), (' trade and other payables', 30), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 3], 'score': 100, 'value': 3935230.0, 'line_item_label': ['Trade and other payables', 'Employee benefits', 'Provisions'], 'note_numbers': ['13', '14', '15'], 'line_item_value': [3210007.0, 350206.0, 375017.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' abandonment and decommissioning costs', 67), ('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' gst payable and accruals', 50), (' current - liability for annual and long service leave', 50), (' other related parties', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' rebates', 40), (' other', 40), (' ultimate parent entity', 33), (' other creditors', 33), (' other creditors', 33), (' employee benefits - current', 33), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' other creditors', 33), (' total current employee benefits', 33), (' gst payables', 30), (' provisions - current', 25), (' arising from service contracts', 25), (' make good provisions', 25), (' warranty', 25), (' gst liabilities', 20), (' restructuring', 20), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 52), (' abandonment and decommissioning costs', 52), (' loans from related party', 47), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' forward exchange contracts', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 39), (' contract liabilites - current', 39), (' arising from service contracts', 39), (' total current employee benefits', 39), (' make good provisions', 38), (' warranty', 38), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' share of joint venture payables', 35), (' gst', 33), (' gst payables', 30), (' provision for associate funding', 27), (' gst liabilities', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' rebates', 80), (' other related parties', 71), (' gst payables', 70), (' loans from related party', 67), (' loan payable to relayed party under tax funding agreement', 58), (' gst payable and accruals', 55), (' share of joint venture payables', 52), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 42), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' employee benefits - payroll', 42), (' contract liabilites - current', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' total current employee benefits', 38), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' arising from service contracts', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 62), (' employee benefits - payroll', 50), (' loan payable to relayed party under tax funding agreement', 48), (' current - liability for annual and long service leave', 48), (' other related parties', 47), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 43), (' loans from related party', 43), (' abandonment and decommissioning costs', 43), (' forward exchange contracts', 43), (' gst liabilities', 42), (' rebates', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' warranty', 38), (' arising from service contracts', 33), (' gst', 33), (' total current employee benefits', 33), (' make good provisions', 31), (' employee benefits - current', 29), (' provision for associate funding', 29), (' ultimate parent entity', 26), (' provisions - current', 21), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [(' total current employee benefits', 85), (' employee benefits - current', 75), (' employee benefits - payroll', 75), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' ultimate parent entity', 43), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' current - liability for annual and long service leave', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 35), (' other related parties', 35), (' loans from related party', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' make good provisions', 31), (' derivative contracts - at fair value', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' forward exchange contracts', 30), (' gst payable and accruals', 25), (' provision for associate funding', 25), (' warranty', 25), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan in aud , res_fuzz_match = [(' abandonment and decommissioning costs', 67), ('other creditors and accruals', 50), (' loan payable to relayed party under tax funding agreement', 50), (' secured long-term bank loans', 50), (' gst payable and accruals', 50), (' current - liability for annual and long service leave', 50), (' other related parties', 42), (' derivative contracts - at fair value', 42), (' loans from related party', 42), (' contract liabilites - current', 42), (' share of joint venture payables', 42), (' provision for associate funding', 42), (' rebates', 40), (' other', 40), (' ultimate parent entity', 33), (' other creditors', 33), (' other creditors', 33), (' employee benefits - current', 33), (' employee benefits - payroll', 33), (' forward exchange contracts', 33), (' other creditors', 33), (' total current employee benefits', 33), (' gst payables', 30), (' provisions - current', 25), (' arising from service contracts', 25), (' make good provisions', 25), (' warranty', 25), (' gst liabilities', 20), (' restructuring', 20), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan trade creditors , res_fuzz_match = [(' other creditors', 79), (' other creditors', 79), (' other creditors', 79), ('other creditors and accruals', 52), (' abandonment and decommissioning costs', 52), (' loans from related party', 47), (' loan payable to relayed party under tax funding agreement', 43), (' employee benefits - current', 43), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' forward exchange contracts', 43), (' ultimate parent entity', 42), (' other related parties', 41), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 39), (' contract liabilites - current', 39), (' arising from service contracts', 39), (' total current employee benefits', 39), (' make good provisions', 38), (' warranty', 38), (' gst payable and accruals', 36), (' employee benefits - payroll', 36), (' secured long-term bank loans', 35), (' share of joint venture payables', 35), (' gst', 33), (' gst payables', 30), (' provision for associate funding', 27), (' gst liabilities', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan tax funding payable related party , res_fuzz_match = [(' rebates', 80), (' other related parties', 71), (' gst payables', 70), (' loans from related party', 67), (' loan payable to relayed party under tax funding agreement', 58), (' gst payable and accruals', 55), (' share of joint venture payables', 52), (' warranty', 50), (' ultimate parent entity', 47), ('other creditors and accruals', 42), (' derivative contracts - at fair value', 42), (' current - liability for annual and long service leave', 42), (' employee benefits - payroll', 42), (' contract liabilites - current', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' make good provisions', 38), (' total current employee benefits', 38), (' other creditors', 36), (' other creditors', 36), (' provisions - current', 36), (' other creditors', 36), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' secured long-term bank loans', 33), (' gst', 33), (' forward exchange contracts', 33), (' provision for associate funding', 32), (' arising from service contracts', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan other payables , res_fuzz_match = [(' other', 100), (' gst payables', 70), (' share of joint venture payables', 62), (' employee benefits - payroll', 50), (' loan payable to relayed party under tax funding agreement', 48), (' current - liability for annual and long service leave', 48), (' other related parties', 47), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 43), (' loans from related party', 43), (' abandonment and decommissioning costs', 43), (' forward exchange contracts', 43), (' gst liabilities', 42), (' rebates', 40), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' gst payable and accruals', 38), (' contract liabilites - current', 38), (' warranty', 38), (' arising from service contracts', 33), (' gst', 33), (' total current employee benefits', 33), (' make good provisions', 31), (' employee benefits - current', 29), (' provision for associate funding', 29), (' ultimate parent entity', 26), (' provisions - current', 21), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none 14.0 employee benefits , res_fuzz_match = [(' total current employee benefits', 85), (' employee benefits - current', 75), (' employee benefits - payroll', 75), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' provisions - current', 44), (' ultimate parent entity', 43), (' loan payable to relayed party under tax funding agreement', 40), (' secured long-term bank loans', 40), (' current - liability for annual and long service leave', 40), (' gst payables', 40), (' rebates', 40), (' other', 40), ('other creditors and accruals', 35), (' other related parties', 35), (' loans from related party', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' abandonment and decommissioning costs', 35), (' gst', 33), (' make good provisions', 31), (' derivative contracts - at fair value', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' forward exchange contracts', 30), (' gst payable and accruals', 25), (' provision for associate funding', 25), (' warranty', 25), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 3, 5, 8, 9, 11], 'score': [80, 100, 85, 80, 100, 85], 'value': [1420777.0, 1046381.0, 0.0, 0.0, 1444057.0, 0.0], 'label': ['None nan Tax funding payable related party', 'None nan Other payables', 'None 14.0 Employee benefits', 'None nan Tax funding payable related party', 'None nan Other payables', 'None 14.0 Employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll', 81), (' total current employee benefits', 76), (' share of joint venture payables', 72), (' employee benefits - current', 65), (' ultimate parent entity', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), ('other creditors and accruals', 35), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll', 81), (' total current employee benefits', 76), (' share of joint venture payables', 72), (' employee benefits - current', 65), (' ultimate parent entity', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), ('other creditors and accruals', 35), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan provisions , res_fuzz_match = [(' abandonment and decommissioning costs', 60), (' make good provisions', 60), (' other related parties', 48), (' loans from related party', 48), (' secured long-term bank loans', 47), (' current - liability for annual and long service leave', 47), (' provisions - current', 43), ('other creditors and accruals', 40), (' derivative contracts - at fair value', 40), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' ultimate parent entity', 33), (' gst payable and accruals', 33), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' total current employee benefits', 33), (' gst payables', 20), (' gst liabilities', 20), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll', 81), (' total current employee benefits', 76), (' share of joint venture payables', 72), (' employee benefits - current', 65), (' ultimate parent entity', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), ('other creditors and accruals', 35), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll', 81), (' total current employee benefits', 76), (' share of joint venture payables', 72), (' employee benefits - current', 65), (' ultimate parent entity', 47), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' secured long-term bank loans', 42), (' other related parties', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' other', 40), (' derivative contracts - at fair value', 38), (' loan payable to relayed party under tax funding agreement', 38), (' current - liability for annual and long service leave', 38), (' abandonment and decommissioning costs', 38), (' forward exchange contracts', 38), (' warranty', 38), ('other creditors and accruals', 35), (' gst', 33), (' gst payable and accruals', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' make good provisions', 31), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [(' loan payable to relayed party under tax funding agreement', 50), (' current - liability for annual and long service leave', 50), (' total current employee benefits', 50), ('other creditors and accruals', 43), (' other related parties', 43), (' derivative contracts - at fair value', 43), (' secured long-term bank loans', 43), (' loans from related party', 43), (' gst payable and accruals', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' abandonment and decommissioning costs', 43), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - current', 36), (' employee benefits - payroll', 36), (' provision for associate funding', 36), (' arising from service contracts', 36), (' forward exchange contracts', 36), (' other creditors', 36), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' ultimate parent entity', 29), (' make good provisions', 29), (' provisions - current', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan provisions , res_fuzz_match = [(' abandonment and decommissioning costs', 60), (' make good provisions', 60), (' other related parties', 48), (' loans from related party', 48), (' secured long-term bank loans', 47), (' current - liability for annual and long service leave', 47), (' provisions - current', 43), ('other creditors and accruals', 40), (' derivative contracts - at fair value', 40), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' employee benefits - payroll', 40), (' arising from service contracts', 40), (' rebates', 40), (' other', 40), (' warranty', 38), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' ultimate parent entity', 33), (' gst payable and accruals', 33), (' employee benefits - current', 33), (' contract liabilites - current', 33), (' provision for associate funding', 33), (' gst', 33), (' forward exchange contracts', 33), (' total current employee benefits', 33), (' gst payables', 20), (' gst liabilities', 20), (' restructuring', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 7], 'score': [81, 81, 81, 81], 'value': [350206.0, 5866.0, 366211.0, 0.0], 'label': ['None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provisions - current', 64), (' provision for associate funding', 64), (' current - liability for annual and long service leave', 61), (' rebates', 60), (' gst payables', 50), (' make good provisions', 50), (' warranty', 50), (' loans from related party', 48), (' loan payable to relayed party under tax funding agreement', 45), (' arising from service contracts', 45), (' total current employee benefits', 45), (' share of joint venture payables', 44), (' other creditors', 43), (' derivative contracts - at fair value', 43), (' other creditors', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' employee benefits - payroll', 41), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' gst', 33), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [(' gst', 67), (' current - liability for annual and long service leave', 65), (' warranty', 62), (' rebates', 60), (' other', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' total current employee benefits', 52), (' restructuring', 50), (' secured long-term bank loans', 49), ('other creditors and accruals', 48), (' share of joint venture payables', 48), (' other related parties', 47), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), (' gst liabilities', 40), (' loan payable to relayed party under tax funding agreement', 39), (' loans from related party', 39), (' contract liabilites - current', 39), (' arising from service contracts', 39), (' provision for associate funding', 37), (' derivative contracts - at fair value', 36), (' employee benefits - current', 35), (' forward exchange contracts', 35), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [(' gst', 67), (' other', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), ('other creditors and accruals', 52), (' restructuring', 50), (' secured long-term bank loans', 48), (' other related parties', 47), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' total current employee benefits', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' arising from service contracts', 39), (' forward exchange contracts', 39), (' loans from related party', 38), (' warranty', 38), (' provision for associate funding', 37), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' employee benefits - payroll', 32), (' gst payable and accruals', 27), (' make good provisions', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' secured long-term bank loans', 47), (' current - liability for annual and long service leave', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' loans from related party', 41), (' share of joint venture payables', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' warranty', 38), (' other related parties', 36), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 35), (' employee benefits - current', 35), (' contract liabilites - current', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 35), (' arising from service contracts', 35), (' forward exchange contracts', 35), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' employee benefits - payroll', 29), (' ultimate parent entity', 24), (' make good provisions', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' provisions - current', 67), (' abandonment and decommissioning costs', 55), (' make good provisions', 50), (' warranty', 50), (' other related parties', 47), (' provision for associate funding', 47), (' current - liability for annual and long service leave', 45), (' total current employee benefits', 45), (' loans from related party', 43), (' secured long-term bank loans', 41), (' arising from service contracts', 41), (' forward exchange contracts', 41), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' contract liabilites - current', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' derivative contracts - at fair value', 32), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' share of joint venture payables', 27), (' gst payable and accruals', 23), (' gst payables', 20), (' gst liabilities', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [(' warranty', 62), (' provisions - current', 50), (' gst payables', 50), (' total current employee benefits', 50), ('other creditors and accruals', 45), (' loan payable to relayed party under tax funding agreement', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' abandonment and decommissioning costs', 45), (' other related parties', 41), (' derivative contracts - at fair value', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' employee benefits - payroll', 40), (' rebates', 40), (' forward exchange contracts', 40), (' other', 40), (' contract liabilites - current', 35), (' gst', 33), (' ultimate parent entity', 32), (' make good provisions', 31), (' gst payable and accruals', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' loans from related party', 48), ('other creditors and accruals', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 45), (' gst payable and accruals', 41), (' contract liabilites - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' other', 40), (' warranty', 38), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' abandonment and decommissioning costs', 36), (' employee benefits - current', 32), (' share of joint venture payables', 32), (' employee benefits - payroll', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' make good provisions', 25), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' secured long-term bank loans', 50), (' warranty', 50), (' other related parties', 47), (' provision for associate funding', 45), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' total current employee benefits', 41), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loans from related party', 38), (' gst payable and accruals', 36), (' current - liability for annual and long service leave', 36), (' gst', 33), (' employee benefits - payroll', 32), (' gst liabilities', 30), (' forward exchange contracts', 29), (' abandonment and decommissioning costs', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' other related parties', 53), (' provision for associate funding', 50), (' make good provisions', 50), (' restructuring', 50), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' total current employee benefits', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 35), (' current - liability for annual and long service leave', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' gst liabilities', 30), (' forward exchange contracts', 29), (' warranty', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [(' secured long-term bank loans', 46), (' abandonment and decommissioning costs', 46), (' provisions - current', 43), ('other creditors and accruals', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' derivative contracts - at fair value', 38), (' share of joint venture payables', 38), (' warranty', 38), (' ultimate parent entity', 37), (' total current employee benefits', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 29), (' employee benefits - payroll', 27), (' rebates', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 51), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' abandonment and decommissioning costs', 48), (' total current employee benefits', 44), (' forward exchange contracts', 42), (' contract liabilites - current', 41), ('other creditors and accruals', 40), (' loan payable to relayed party under tax funding agreement', 40), (' other', 40), (' gst payable and accruals', 36), (' other related parties', 35), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' ultimate parent entity', 32), (' share of joint venture payables', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' employee benefits - payroll', 27), (' make good provisions', 25), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provisions - current', 64), (' provision for associate funding', 64), (' current - liability for annual and long service leave', 61), (' rebates', 60), (' gst payables', 50), (' make good provisions', 50), (' warranty', 50), (' loans from related party', 48), (' loan payable to relayed party under tax funding agreement', 45), (' arising from service contracts', 45), (' total current employee benefits', 45), (' share of joint venture payables', 44), (' other creditors', 43), (' derivative contracts - at fair value', 43), (' other creditors', 43), (' other creditors', 43), ('other creditors and accruals', 42), (' ultimate parent entity', 42), (' secured long-term bank loans', 42), (' other related parties', 41), (' gst payable and accruals', 41), (' employee benefits - payroll', 41), (' restructuring', 40), (' other', 40), (' forward exchange contracts', 38), (' gst', 33), (' contract liabilites - current', 32), (' abandonment and decommissioning costs', 31), (' employee benefits - current', 30), (' gst liabilities', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [(' gst', 67), (' current - liability for annual and long service leave', 65), (' warranty', 62), (' rebates', 60), (' other', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), (' total current employee benefits', 52), (' restructuring', 50), (' secured long-term bank loans', 49), ('other creditors and accruals', 48), (' share of joint venture payables', 48), (' other related parties', 47), (' ultimate parent entity', 43), (' provisions - current', 43), (' gst payables', 40), (' gst liabilities', 40), (' loan payable to relayed party under tax funding agreement', 39), (' loans from related party', 39), (' contract liabilites - current', 39), (' arising from service contracts', 39), (' provision for associate funding', 37), (' derivative contracts - at fair value', 36), (' employee benefits - current', 35), (' forward exchange contracts', 35), (' employee benefits - payroll', 32), (' make good provisions', 31), (' gst payable and accruals', 27), (' abandonment and decommissioning costs', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [(' current - liability for annual and long service leave', 65), (' rebates', 60), (' total current employee benefits', 59), (' secured long-term bank loans', 53), (' warranty', 50), ('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' ultimate parent entity', 45), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' employee benefits - current', 41), (' contract liabilites - current', 41), (' share of joint venture payables', 41), (' forward exchange contracts', 41), (' gst payables', 40), (' gst liabilities', 40), (' restructuring', 40), (' other', 40), (' other related parties', 38), (' other creditors', 36), (' other creditors', 36), (' employee benefits - payroll', 36), (' other creditors', 36), (' loans from related party', 35), (' gst payable and accruals', 35), (' gst', 33), (' provision for associate funding', 29), (' arising from service contracts', 29), (' make good provisions', 25), (' abandonment and decommissioning costs', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [(' gst', 67), (' other', 60), (' other creditors', 57), (' other creditors', 57), (' other creditors', 57), ('other creditors and accruals', 52), (' restructuring', 50), (' secured long-term bank loans', 48), (' other related parties', 47), (' current - liability for annual and long service leave', 43), (' provisions - current', 43), (' contract liabilites - current', 43), (' share of joint venture payables', 43), (' total current employee benefits', 43), (' ultimate parent entity', 42), (' gst payables', 40), (' gst liabilities', 40), (' rebates', 40), (' arising from service contracts', 39), (' forward exchange contracts', 39), (' loans from related party', 38), (' warranty', 38), (' provision for associate funding', 37), (' derivative contracts - at fair value', 35), (' loan payable to relayed party under tax funding agreement', 35), (' employee benefits - current', 35), (' abandonment and decommissioning costs', 35), (' employee benefits - payroll', 32), (' gst payable and accruals', 27), (' make good provisions', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('other creditors and accruals', 47), (' loan payable to relayed party under tax funding agreement', 47), (' secured long-term bank loans', 47), (' current - liability for annual and long service leave', 47), (' provisions - current', 43), (' derivative contracts - at fair value', 41), (' loans from related party', 41), (' share of joint venture payables', 41), (' total current employee benefits', 41), (' rebates', 40), (' other', 40), (' warranty', 38), (' other related parties', 36), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' gst payable and accruals', 35), (' employee benefits - current', 35), (' contract liabilites - current', 35), (' abandonment and decommissioning costs', 35), (' provision for associate funding', 35), (' arising from service contracts', 35), (' forward exchange contracts', 35), (' gst', 33), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' employee benefits - payroll', 29), (' ultimate parent entity', 24), (' make good provisions', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' provisions - current', 67), (' abandonment and decommissioning costs', 55), (' make good provisions', 50), (' warranty', 50), (' other related parties', 47), (' provision for associate funding', 47), (' current - liability for annual and long service leave', 45), (' total current employee benefits', 45), (' loans from related party', 43), (' secured long-term bank loans', 41), (' arising from service contracts', 41), (' forward exchange contracts', 41), (' rebates', 40), (' other', 40), ('other creditors and accruals', 36), (' other creditors', 36), (' loan payable to relayed party under tax funding agreement', 36), (' other creditors', 36), (' contract liabilites - current', 36), (' other creditors', 36), (' gst', 33), (' ultimate parent entity', 32), (' derivative contracts - at fair value', 32), (' employee benefits - current', 32), (' employee benefits - payroll', 32), (' restructuring', 30), (' share of joint venture payables', 27), (' gst payable and accruals', 23), (' gst payables', 20), (' gst liabilities', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [(' warranty', 62), (' provisions - current', 50), (' gst payables', 50), (' total current employee benefits', 50), ('other creditors and accruals', 45), (' loan payable to relayed party under tax funding agreement', 45), (' secured long-term bank loans', 45), (' loans from related party', 45), (' share of joint venture payables', 45), (' abandonment and decommissioning costs', 45), (' other related parties', 41), (' derivative contracts - at fair value', 40), (' employee benefits - current', 40), (' current - liability for annual and long service leave', 40), (' employee benefits - payroll', 40), (' rebates', 40), (' forward exchange contracts', 40), (' other', 40), (' contract liabilites - current', 35), (' gst', 33), (' ultimate parent entity', 32), (' make good provisions', 31), (' gst payable and accruals', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' other creditors', 29), (' provision for associate funding', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 50), (' current - liability for annual and long service leave', 50), (' loans from related party', 48), ('other creditors and accruals', 47), (' other related parties', 47), (' loan payable to relayed party under tax funding agreement', 45), (' gst payable and accruals', 41), (' contract liabilites - current', 41), (' forward exchange contracts', 41), (' total current employee benefits', 41), (' other', 40), (' warranty', 38), (' ultimate parent entity', 37), (' derivative contracts - at fair value', 36), (' abandonment and decommissioning costs', 36), (' employee benefits - current', 32), (' share of joint venture payables', 32), (' employee benefits - payroll', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' make good provisions', 25), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' secured long-term bank loans', 50), (' warranty', 50), (' other related parties', 47), (' provision for associate funding', 45), (' loan payable to relayed party under tax funding agreement', 44), (' arising from service contracts', 44), (' make good provisions', 44), (' other creditors', 43), (' other creditors', 43), (' other creditors', 43), (' ultimate parent entity', 42), (' total current employee benefits', 41), (' contract liabilites - current', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' rebates', 40), (' restructuring', 40), (' employee benefits - current', 39), ('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' loans from related party', 38), (' gst payable and accruals', 36), (' current - liability for annual and long service leave', 36), (' gst', 33), (' employee benefits - payroll', 32), (' gst liabilities', 30), (' forward exchange contracts', 29), (' abandonment and decommissioning costs', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provisions - current', 64), (' other', 60), (' other related parties', 53), (' provision for associate funding', 50), (' make good provisions', 50), (' restructuring', 50), (' other creditors', 43), (' loans from related party', 43), (' other creditors', 43), (' employee benefits - current', 43), (' other creditors', 43), (' total current employee benefits', 41), (' loan payable to relayed party under tax funding agreement', 40), (' share of joint venture payables', 40), (' gst payables', 40), (' arising from service contracts', 40), (' rebates', 40), ('other creditors and accruals', 38), (' secured long-term bank loans', 38), (' ultimate parent entity', 37), (' employee benefits - payroll', 36), (' abandonment and decommissioning costs', 35), (' current - liability for annual and long service leave', 34), (' derivative contracts - at fair value', 33), (' gst', 33), (' gst payable and accruals', 32), (' contract liabilites - current', 32), (' gst liabilities', 30), (' forward exchange contracts', 29), (' warranty', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [(' secured long-term bank loans', 46), (' abandonment and decommissioning costs', 46), (' provisions - current', 43), ('other creditors and accruals', 42), (' forward exchange contracts', 42), (' loan payable to relayed party under tax funding agreement', 41), (' current - liability for annual and long service leave', 41), (' contract liabilites - current', 40), (' gst payables', 40), (' arising from service contracts', 40), (' gst liabilities', 40), (' other', 40), (' employee benefits - current', 39), (' derivative contracts - at fair value', 38), (' share of joint venture payables', 38), (' warranty', 38), (' ultimate parent entity', 37), (' total current employee benefits', 37), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' provision for associate funding', 33), (' gst', 33), (' gst payable and accruals', 32), (' make good provisions', 31), (' restructuring', 30), (' other related parties', 29), (' loans from related party', 29), (' employee benefits - payroll', 27), (' rebates', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [(' rebates', 60), (' secured long-term bank loans', 51), (' warranty', 50), (' current - liability for annual and long service leave', 48), (' abandonment and decommissioning costs', 48), (' total current employee benefits', 44), (' forward exchange contracts', 42), (' contract liabilites - current', 41), ('other creditors and accruals', 40), (' loan payable to relayed party under tax funding agreement', 40), (' other', 40), (' gst payable and accruals', 36), (' other related parties', 35), (' employee benefits - current', 35), (' derivative contracts - at fair value', 33), (' loans from related party', 33), (' ultimate parent entity', 32), (' share of joint venture payables', 32), (' provision for associate funding', 32), (' arising from service contracts', 32), (' gst payables', 30), (' gst liabilities', 30), (' restructuring', 30), (' other creditors', 29), (' other creditors', 29), (' provisions - current', 29), (' other creditors', 29), (' employee benefits - payroll', 27), (' make good provisions', 25), (' gst', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [('other creditors and accruals', 38), (' derivative contracts - at fair value', 38), (' secured long-term bank loans', 38), (' loans from related party', 38), (' current - liability for annual and long service leave', 38), (' contract liabilites - current', 38), (' abandonment and decommissioning costs', 38), (' provision for associate funding', 38), (' arising from service contracts', 38), (' make good provisions', 38), (' forward exchange contracts', 38), (' gst', 33), (' ultimate parent entity', 25), (' other creditors', 25), (' loan payable to relayed party under tax funding agreement', 25), (' other creditors', 25), (' gst payable and accruals', 25), (' employee benefits - current', 25), (' provisions - current', 25), (' share of joint venture payables', 25), (' employee benefits - payroll', 25), (' gst liabilities', 25), (' other creditors', 25), (' warranty', 25), (' total current employee benefits', 25), (' other', 20), (' other related parties', 12), (' gst payables', 12), (' restructuring', 12), (' rebates', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_liabilities
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: 2021
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('long term debt', 41)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' later than 1 year ', ' not later than 5 years']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities ', 45), (' lease liability', 45), ('interest bearing loans and borrowings ', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' lease liability'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' lease liabilities ', 45), (' lease liability', 45), ('interest bearing loans and borrowings ', 40), (' loans and borrowings', 27), (' borrowings ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' lease liabilities ', 17), (' lease liability', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('interest bearing loans and borrowings', 36), ('(bond)', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('deferred taxes ', 33), (' deferred tax liabilities', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits ', 100), (' deferred revenue', 37), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' trade and other payables ', 32), (' other non-current liabilities ', 29), (' financial liabilities ', 28), (' provision for associate funding ', 22), (' provisions ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': 100, 'value': 776257.0, 'line_item_label': ['Employee benefits', 'Provisions'], 'note_numbers': ['14', '15'], 'line_item_value': [0.0, 776257.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [(' employee benefits ', 100), (' deferred revenue', 37), (' other financial liabilities ', 34), ('other long term liabilities ', 32), (' trade and other payables ', 32), (' other non-current liabilities ', 29), (' financial liabilities ', 28), (' provision for associate funding ', 22), (' provisions ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' provision for associate funding ', 43), (' deferred revenue', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': 100, 'value': 1079995.0, 'line_item_label': ['Employee benefits', 'Provisions'], 'note_numbers': ['14', '15'], 'line_item_value': [5866.0, 1074129.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll ', 81), (' total non-current employee benefits', 76), (' employee benefits - non current ', 56), ('non-current trade and other payables ', 50), (' provisions - non-current ', 43), (' non-current - liability for long-service leave ', 41), (' contract liabilites - non-current ', 40), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 33), (' electricity derivatives at fair value through oci ', 32), (' provision for associate funding ', 32), (' make good provisions ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [('non-current trade and other payables ', 50), (' derivative contracts - at fair value ', 43), (' employee benefits - non current ', 43), (' non-current - liability for long-service leave ', 43), (' contract liabilites - non-current ', 43), (' abandonment and decommissioning costs ', 43), (' trade payables - related parties ', 43), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' total non-current employee benefits', 36), (' electricity derivatives at fair value through oci ', 29), (' provisions - non-current ', 29), (' make good provisions ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll ', 81), (' total non-current employee benefits', 76), (' employee benefits - non current ', 56), ('non-current trade and other payables ', 50), (' provisions - non-current ', 43), (' non-current - liability for long-service leave ', 41), (' contract liabilites - non-current ', 40), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 33), (' electricity derivatives at fair value through oci ', 32), (' provision for associate funding ', 32), (' make good provisions ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [('non-current trade and other payables ', 50), (' derivative contracts - at fair value ', 43), (' employee benefits - non current ', 43), (' non-current - liability for long-service leave ', 43), (' contract liabilites - non-current ', 43), (' abandonment and decommissioning costs ', 43), (' trade payables - related parties ', 43), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' total non-current employee benefits', 36), (' electricity derivatives at fair value through oci ', 29), (' provisions - non-current ', 29), (' make good provisions ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan provisions , res_fuzz_match = [(' abandonment and decommissioning costs ', 60), (' make good provisions ', 60), (' employee benefits - non current ', 47), (' provisions - non-current ', 43), (' trade payables - related parties ', 41), ('non-current trade and other payables ', 40), (' derivative contracts - at fair value ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' total non-current employee benefits', 40), (' electricity derivatives at fair value through oci ', 33), (' contract liabilites - non-current ', 33), (' provision for associate funding ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll ', 81), (' total non-current employee benefits', 76), (' employee benefits - non current ', 56), ('non-current trade and other payables ', 50), (' provisions - non-current ', 43), (' non-current - liability for long-service leave ', 41), (' contract liabilites - non-current ', 40), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 33), (' electricity derivatives at fair value through oci ', 32), (' provision for associate funding ', 32), (' make good provisions ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [('non-current trade and other payables ', 50), (' derivative contracts - at fair value ', 43), (' employee benefits - non current ', 43), (' non-current - liability for long-service leave ', 43), (' contract liabilites - non-current ', 43), (' abandonment and decommissioning costs ', 43), (' trade payables - related parties ', 43), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' total non-current employee benefits', 36), (' electricity derivatives at fair value through oci ', 29), (' provisions - non-current ', 29), (' make good provisions ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan joint venture employee benefits , res_fuzz_match = [(' employee benefits - payroll ', 81), (' total non-current employee benefits', 76), (' employee benefits - non current ', 56), ('non-current trade and other payables ', 50), (' provisions - non-current ', 43), (' non-current - liability for long-service leave ', 41), (' contract liabilites - non-current ', 40), (' derivative contracts - at fair value ', 38), (' abandonment and decommissioning costs ', 38), (' trade payables - related parties ', 33), (' electricity derivatives at fair value through oci ', 32), (' provision for associate funding ', 32), (' make good provisions ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none total nan , res_fuzz_match = [('non-current trade and other payables ', 50), (' derivative contracts - at fair value ', 43), (' employee benefits - non current ', 43), (' non-current - liability for long-service leave ', 43), (' contract liabilites - non-current ', 43), (' abandonment and decommissioning costs ', 43), (' trade payables - related parties ', 43), (' employee benefits - payroll ', 36), (' provision for associate funding ', 36), (' total non-current employee benefits', 36), (' electricity derivatives at fair value through oci ', 29), (' provisions - non-current ', 29), (' make good provisions ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = none nan provisions , res_fuzz_match = [(' abandonment and decommissioning costs ', 60), (' make good provisions ', 60), (' employee benefits - non current ', 47), (' provisions - non-current ', 43), (' trade payables - related parties ', 41), ('non-current trade and other payables ', 40), (' derivative contracts - at fair value ', 40), (' non-current - liability for long-service leave ', 40), (' employee benefits - payroll ', 40), (' total non-current employee benefits', 40), (' electricity derivatives at fair value through oci ', 33), (' contract liabilites - non-current ', 33), (' provision for associate funding ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 5, 7], 'score': [81, 81, 81, 81], 'value': [350206.0, 5866.0, 366211.0, 0.0], 'label': ['None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits', 'None nan Joint Venture employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provisions - non-current ', 64), (' provision for associate funding ', 64), ('non-current trade and other payables ', 50), (' make good provisions ', 50), (' non-current - liability for long-service leave ', 45), (' derivative contracts - at fair value ', 43), (' trade payables - related parties ', 42), (' employee benefits - payroll ', 41), (' electricity derivatives at fair value through oci ', 39), (' total non-current employee benefits', 38), (' employee benefits - non current ', 33), (' contract liabilites - non-current ', 32), (' abandonment and decommissioning costs ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [('non-current trade and other payables ', 52), (' non-current - liability for long-service leave ', 48), (' contract liabilites - non-current ', 39), (' trade payables - related parties ', 39), (' total non-current employee benefits', 39), (' provision for associate funding ', 37), (' derivative contracts - at fair value ', 36), (' provisions - non-current ', 36), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' employee benefits - payroll ', 32), (' make good provisions ', 31), (' abandonment and decommissioning costs ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('non-current trade and other payables ', 59), (' non-current - liability for long-service leave ', 47), (' contract liabilites - non-current ', 47), (' total non-current employee benefits', 47), (' electricity derivatives at fair value through oci ', 41), (' derivative contracts - at fair value ', 41), (' employee benefits - non current ', 41), (' trade payables - related parties ', 41), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' provision for associate funding ', 29), (' make good provisions ', 25), (' abandonment and decommissioning costs ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [('non-current trade and other payables ', 61), (' non-current - liability for long-service leave ', 61), (' total non-current employee benefits', 52), (' employee benefits - non current ', 39), (' contract liabilites - non-current ', 39), (' provision for associate funding ', 37), (' provisions - non-current ', 36), (' electricity derivatives at fair value through oci ', 35), (' derivative contracts - at fair value ', 35), (' abandonment and decommissioning costs ', 35), (' trade payables - related parties ', 35), (' employee benefits - payroll ', 32), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('non-current trade and other payables ', 76), (' non-current - liability for long-service leave ', 65), (' total non-current employee benefits', 59), (' employee benefits - non current ', 47), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 41), (' derivative contracts - at fair value ', 41), (' contract liabilites - non-current ', 41), (' abandonment and decommissioning costs ', 35), (' provision for associate funding ', 35), (' employee benefits - payroll ', 29), (' trade payables - related parties ', 29), (' make good provisions ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' non-current - liability for long-service leave ', 64), (' provisions - non-current ', 64), ('non-current trade and other payables ', 55), (' abandonment and decommissioning costs ', 55), (' total non-current employee benefits', 55), (' make good provisions ', 50), (' provision for associate funding ', 47), (' electricity derivatives at fair value through oci ', 36), (' employee benefits - non current ', 36), (' contract liabilites - non-current ', 36), (' derivative contracts - at fair value ', 32), (' employee benefits - payroll ', 32), (' trade payables - related parties ', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [('non-current trade and other payables ', 65), (' non-current - liability for long-service leave ', 55), (' total non-current employee benefits', 55), (' employee benefits - non current ', 46), (' abandonment and decommissioning costs ', 45), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 40), (' derivative contracts - at fair value ', 40), (' employee benefits - payroll ', 40), (' trade payables - related parties ', 40), (' contract liabilites - non-current ', 35), (' make good provisions ', 31), (' provision for associate funding ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [('non-current trade and other payables ', 55), (' non-current - liability for long-service leave ', 55), (' total non-current employee benefits', 55), (' provisions - non-current ', 43), (' contract liabilites - non-current ', 41), (' electricity derivatives at fair value through oci ', 36), (' derivative contracts - at fair value ', 36), (' employee benefits - non current ', 36), (' abandonment and decommissioning costs ', 36), (' trade payables - related parties ', 36), (' employee benefits - payroll ', 32), (' provision for associate funding ', 32), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 60), (' total non-current employee benefits', 48), (' non-current - liability for long-service leave ', 47), (' provision for associate funding ', 45), (' make good provisions ', 44), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 33), (' contract liabilites - non-current ', 32), (' employee benefits - payroll ', 32), (' abandonment and decommissioning costs ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 53), (' provision for associate funding ', 50), (' make good provisions ', 50), (' total non-current employee benefits', 48), (' non-current - liability for long-service leave ', 47), (' electricity derivatives at fair value through oci ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' abandonment and decommissioning costs ', 35), (' derivative contracts - at fair value ', 33), (' contract liabilites - non-current ', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [('non-current trade and other payables ', 56), (' non-current - liability for long-service leave ', 48), (' abandonment and decommissioning costs ', 46), (' total non-current employee benefits', 44), (' derivative contracts - at fair value ', 38), (' employee benefits - non current ', 37), (' provisions - non-current ', 36), (' contract liabilites - non-current ', 36), (' provision for associate funding ', 33), (' make good provisions ', 31), (' electricity derivatives at fair value through oci ', 30), (' employee benefits - payroll ', 27), (' trade payables - related parties ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [('non-current trade and other payables ', 56), (' non-current - liability for long-service leave ', 52), (' total non-current employee benefits', 50), (' abandonment and decommissioning costs ', 48), (' provisions - non-current ', 43), (' contract liabilites - non-current ', 41), (' employee benefits - non current ', 37), (' trade payables - related parties ', 35), (' derivative contracts - at fair value ', 33), (' provision for associate funding ', 32), (' electricity derivatives at fair value through oci ', 28), (' employee benefits - payroll ', 27), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current provision for take or pay nan , res_fuzz_match = [(' provisions - non-current ', 64), (' provision for associate funding ', 64), ('non-current trade and other payables ', 50), (' make good provisions ', 50), (' non-current - liability for long-service leave ', 45), (' derivative contracts - at fair value ', 43), (' trade payables - related parties ', 42), (' employee benefits - payroll ', 41), (' electricity derivatives at fair value through oci ', 39), (' total non-current employee benefits', 38), (' employee benefits - non current ', 33), (' contract liabilites - non-current ', 32), (' abandonment and decommissioning costs ', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current site restoration nan , res_fuzz_match = [('non-current trade and other payables ', 52), (' non-current - liability for long-service leave ', 48), (' contract liabilites - non-current ', 39), (' trade payables - related parties ', 39), (' total non-current employee benefits', 39), (' provision for associate funding ', 37), (' derivative contracts - at fair value ', 36), (' provisions - non-current ', 36), (' electricity derivatives at fair value through oci ', 35), (' employee benefits - non current ', 35), (' employee benefits - payroll ', 32), (' make good provisions ', 31), (' abandonment and decommissioning costs ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total nan , res_fuzz_match = [('non-current trade and other payables ', 59), (' non-current - liability for long-service leave ', 47), (' contract liabilites - non-current ', 47), (' total non-current employee benefits', 47), (' electricity derivatives at fair value through oci ', 41), (' derivative contracts - at fair value ', 41), (' employee benefits - non current ', 41), (' trade payables - related parties ', 41), (' provisions - non-current ', 36), (' employee benefits - payroll ', 36), (' provision for associate funding ', 29), (' make good provisions ', 25), (' abandonment and decommissioning costs ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current site restoration nan , res_fuzz_match = [('non-current trade and other payables ', 61), (' non-current - liability for long-service leave ', 61), (' total non-current employee benefits', 52), (' employee benefits - non current ', 39), (' contract liabilites - non-current ', 39), (' provision for associate funding ', 37), (' provisions - non-current ', 36), (' electricity derivatives at fair value through oci ', 35), (' derivative contracts - at fair value ', 35), (' abandonment and decommissioning costs ', 35), (' trade payables - related parties ', 35), (' employee benefits - payroll ', 32), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current total nan , res_fuzz_match = [('non-current trade and other payables ', 76), (' non-current - liability for long-service leave ', 65), (' total non-current employee benefits', 59), (' employee benefits - non current ', 47), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 41), (' derivative contracts - at fair value ', 41), (' contract liabilites - non-current ', 41), (' abandonment and decommissioning costs ', 35), (' provision for associate funding ', 35), (' employee benefits - payroll ', 29), (' trade payables - related parties ', 29), (' make good provisions ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan provision for , res_fuzz_match = [(' non-current - liability for long-service leave ', 64), (' provisions - non-current ', 64), ('non-current trade and other payables ', 55), (' abandonment and decommissioning costs ', 55), (' total non-current employee benefits', 55), (' make good provisions ', 50), (' provision for associate funding ', 47), (' electricity derivatives at fair value through oci ', 36), (' employee benefits - non current ', 36), (' contract liabilites - non-current ', 36), (' derivative contracts - at fair value ', 32), (' employee benefits - payroll ', 32), (' trade payables - related parties ', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current nan take or pay , res_fuzz_match = [('non-current trade and other payables ', 65), (' non-current - liability for long-service leave ', 55), (' total non-current employee benefits', 55), (' employee benefits - non current ', 46), (' abandonment and decommissioning costs ', 45), (' provisions - non-current ', 43), (' electricity derivatives at fair value through oci ', 40), (' derivative contracts - at fair value ', 40), (' employee benefits - payroll ', 40), (' trade payables - related parties ', 40), (' contract liabilites - non-current ', 35), (' make good provisions ', 31), (' provision for associate funding ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 1 january 2022 156891 , res_fuzz_match = [('non-current trade and other payables ', 55), (' non-current - liability for long-service leave ', 55), (' total non-current employee benefits', 55), (' provisions - non-current ', 43), (' contract liabilites - non-current ', 41), (' electricity derivatives at fair value through oci ', 36), (' derivative contracts - at fair value ', 36), (' employee benefits - non current ', 36), (' abandonment and decommissioning costs ', 36), (' trade payables - related parties ', 36), (' employee benefits - payroll ', 32), (' provision for associate funding ', 32), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions used during the year nan , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 60), (' total non-current employee benefits', 48), (' non-current - liability for long-service leave ', 47), (' provision for associate funding ', 45), (' make good provisions ', 44), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 33), (' contract liabilites - non-current ', 32), (' employee benefits - payroll ', 32), (' abandonment and decommissioning costs ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current provisions reversed during the year (156,891) , res_fuzz_match = [(' provisions - non-current ', 64), ('non-current trade and other payables ', 53), (' provision for associate funding ', 50), (' make good provisions ', 50), (' total non-current employee benefits', 48), (' non-current - liability for long-service leave ', 47), (' electricity derivatives at fair value through oci ', 38), (' trade payables - related parties ', 38), (' employee benefits - non current ', 37), (' employee benefits - payroll ', 36), (' abandonment and decommissioning costs ', 35), (' derivative contracts - at fair value ', 33), (' contract liabilites - non-current ', 32)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current unwind of discount nan , res_fuzz_match = [('non-current trade and other payables ', 56), (' non-current - liability for long-service leave ', 48), (' abandonment and decommissioning costs ', 46), (' total non-current employee benefits', 44), (' derivative contracts - at fair value ', 38), (' employee benefits - non current ', 37), (' provisions - non-current ', 36), (' contract liabilites - non-current ', 36), (' provision for associate funding ', 33), (' make good provisions ', 31), (' electricity derivatives at fair value through oci ', 30), (' employee benefits - payroll ', 27), (' trade payables - related parties ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = non-current balance at 31 december 2022 nan , res_fuzz_match = [('non-current trade and other payables ', 56), (' non-current - liability for long-service leave ', 52), (' total non-current employee benefits', 50), (' abandonment and decommissioning costs ', 48), (' provisions - non-current ', 43), (' contract liabilites - non-current ', 41), (' employee benefits - non current ', 37), (' trade payables - related parties ', 35), (' derivative contracts - at fair value ', 33), (' provision for associate funding ', 32), (' electricity derivatives at fair value through oci ', 28), (' employee benefits - payroll ', 27), (' make good provisions ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = consolidated , res_fuzz_match = [(' non-current - liability for long-service leave ', 50), (' electricity derivatives at fair value through oci ', 38), (' derivative contracts - at fair value ', 38), (' provisions - non-current ', 38), (' contract liabilites - non-current ', 38), (' abandonment and decommissioning costs ', 38), (' provision for associate funding ', 38), (' make good provisions ', 38), (' total non-current employee benefits', 38), ('non-current trade and other payables ', 25), (' employee benefits - non current ', 25), (' employee benefits - payroll ', 25), (' trade payables - related parties ', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_liabilities
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: 2021
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = employee benefits , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 3000000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['16'], 'line_item_value': [3000000.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' share capital ', 100), (' share capital ', 100), (' equity share capital ', 76), (' issued capital ', 67), (' contributed equity ', 37), (' contributed equity', 37), (' perpetual equity instrument ', 33), ('common stock ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 3000000.0, 'line_item_label': ['Share capital'], 'note_numbers': ['16'], 'line_item_value': [3000000.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('Share premium', 67)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 15959215.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [15959215.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [(' retained profits', 50), ('other equity ', 43), (' retained earnings ', 36), (' accumulated losses ', 26), (' reserves surplus ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': 19120823.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [19120823.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('minority interest ', 32), (' non controlling interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 27), (' non-controlling interest', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('shareholders equity(a)', 57)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve', 16), ('other reserves ', 11)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = share capital , res_fuzz_match = [('other reserves ', 35), (' reserves ', 24), (' foreign currency translation reserve', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve', 43), (' reserves ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' investment property ', 57), ('plant property equipment ', 31), (' property plant equipment ', 31), (' plant and equipment ', 29), (' property ', 29), (' oil and gas properties ', 24), (' Exploration and evaluation assets', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 17415270.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [17415270.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = investments , res_fuzz_match = [(' investment property ', 57), ('plant property equipment ', 31), (' property plant equipment ', 31), (' plant and equipment ', 29), (' property ', 29), (' oil and gas properties ', 24), (' Exploration and evaluation assets', 21)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 91, 'value': 18626484.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['12'], 'line_item_value': [18626484.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', ''] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [(' Freehold land and buildings ', 100), (' Buildings ', 100), (' Plant and equipment ', 71), (' land and improvement ', 71), (' Leasehold buildings ', 57), (' Freehold land ', 46), (' Building & mine infrastructure ', 43), (' Facilities ', 40), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 30), (' Fishing vessels & equipment ', 30), (' Mine infrastructure ', 29), (' Capitalised pre stripping costs ', 29), (' Mining properties ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' investment property ', 21), (' Other assets in progress ', 21), (' Subsea ', 17), (' Workshop tooling ', 15), ('cost ', 0), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('cost ', 100), (' Mining properties ', 64), (' Assets under construction ', 60), (' Building & mine infrastructure ', 60), (' Capitalised pre stripping costs ', 53), (' under construction ', 53), (' Pipeline Asset ', 48), (' Mine infrastructure ', 47), (' Construction ', 44), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' Marine  Development properties ', 40), (' Freehold land and buildings ', 33), (' Asset Retirement Obligation ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 27), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Plant and equipment ', 21), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [(' Mining properties ', 100), (' investment property ', 77), (' Marine  Development properties ', 77), (' Mine infrastructure ', 54), (' Building & mine infrastructure ', 54), (' Asset Retirement Obligation ', 46), (' Capitalised pre stripping costs ', 46), (' Other assets in progress ', 46), (' gross ', 40), (' Assets under construction ', 38), (' land and improvement ', 38), (' under construction ', 38), (' Pipeline Asset ', 38), (' Construction ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 32), (' Plant and equipment ', 31), (' Fishing vessels & equipment ', 31), ('cost ', 25), (' Freehold land and buildings ', 23), (' Leasehold buildings ', 23), (' Buildings ', 20), (' Facilities ', 20), (' Subsea ', 17), (' Freehold land ', 15), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [(' Plant and equipment ', 100), (' land and improvement ', 69), (' Freehold land and buildings ', 67), (' Fishing vessels & equipment ', 47), (' Pipeline Asset ', 46), (' Buildings ', 44), (' Leasehold buildings ', 41), (' Assets under construction ', 40), (' Capitalised pre stripping costs ', 40), (' Marine  Development properties ', 40), (' Freehold land ', 38), (' investment property ', 33), (' Asset Retirement Obligation ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' Mining properties ', 31), (' Mine infrastructure ', 27), (' under construction ', 27), ('cost ', 25), (' Construction ', 22), (' Facilities ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), (' gross ', 0), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [(' gross ', 80), (' Other assets in progress ', 64), (' Mining properties ', 46), (' Workshop tooling ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' Pipeline Asset ', 38), (' investment property ', 36), (' Asset Retirement Obligation ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Mine infrastructure ', 29), (' Assets under construction ', 29), (' land and improvement ', 29), (' Building & mine infrastructure ', 29), (' under construction ', 29), ('cost ', 25), (' Construction ', 22), (' Buildings ', 20), (' Facilities ', 20), (' Freehold land ', 15), (' Freehold land and buildings ', 14), (' Plant and equipment ', 14), (' Leasehold buildings ', 14), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('cost ', 100), (' Plant and equipment ', 60), (' Subsea ', 50), (' Freehold land and buildings ', 47), (' land and improvement ', 47), (' Construction ', 44), (' gross ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 36), (' Other assets in progress ', 35), (' investment property ', 34), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Marine  Development properties ', 28), (' Fishing vessels & equipment ', 24), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('cost ', 100), (' Stripping WIP ', 56), (' Capitalised pre stripping costs ', 55), (' investment property ', 45), (' Plant and equipment ', 45), (' Other assets in progress ', 45), (' land and improvement ', 45), (' Construction ', 44), (' gross ', 40), (' Asset Retirement Obligation ', 36), (' Assets under construction ', 36), (' under construction ', 36), (' Marine  Development properties ', 36), (' Workshop tooling ', 36), (' Fishing vessels & equipment ', 36), (' Subsea ', 33), (' Freehold land and buildings ', 27), (' Mine infrastructure ', 27), (' Building & mine infrastructure ', 27), (' Mining properties ', 27), (' Freehold land ', 27), (' Pipeline Asset ', 27), (' Leasehold buildings ', 27), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 47), (' Assets under construction ', 47), (' Other assets in progress ', 47), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 41), (' under construction ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' Plant and equipment ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Leasehold buildings ', 27), (' gross ', 20), (' land and improvement ', 20), (' Buildings ', 20), (' Facilities ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('cost ', 100), (' Subsea ', 50), (' Freehold land ', 46), (' Freehold land and buildings ', 44), (' Construction ', 44), (' gross ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Assets under construction ', 39), (' Capitalised pre stripping costs ', 33), (' Other assets in progress ', 33), (' Stripping WIP ', 33), (' Marine  Development properties ', 33), (' Leasehold buildings ', 33), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' investment property ', 27), (' under construction ', 27), (' Mining properties ', 23), (' Building & mine infrastructure ', 22), (' Mine infrastructure ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' Fishing vessels & equipment ', 35), (' investment property ', 33), (' Construction ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Capitalised pre stripping costs ', 50), (' Marine  Development properties ', 50), (' Freehold land and buildings ', 48), (' Assets under construction ', 48), (' investment property ', 47), (' Asset Retirement Obligation ', 47), (' under construction ', 47), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Construction ', 44), (' Fishing vessels & equipment ', 41), (' Buildings ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' Building & mine infrastructure ', 38), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [(' gross ', 60), (' land and improvement ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Freehold land and buildings ', 48), (' Capitalised pre stripping costs ', 46), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [(' land and improvement ', 67), (' gross ', 60), (' Facilities ', 60), (' Plant and equipment ', 53), ('cost ', 50), (' Subsea ', 50), (' Mining properties ', 46), (' Freehold land ', 46), (' Pipeline Asset ', 46), (' Other assets in progress ', 45), (' Freehold land and buildings ', 43), (' Capitalised pre stripping costs ', 42), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Marine  Development properties ', 36), (' investment property ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Workshop tooling ', 31), (' Construction ', 22), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' under construction ', 40), (' Facilities ', 40), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 36), (' Capitalised pre stripping costs ', 36), (' Building & mine infrastructure ', 36), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' investment property ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Fishing vessels & equipment ', 24), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('cost ', 50), (' Construction ', 44), (' Marine  Development properties ', 42), (' Plant and equipment ', 40), (' under construction ', 40), (' Buildings ', 40), (' Facilities ', 40), (' Freehold land ', 38), (' Freehold land and buildings ', 37), (' Assets under construction ', 37), (' Capitalised pre stripping costs ', 37), (' investment property ', 33), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Other assets in progress ', 32), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Asset Retirement Obligation ', 29), (' Mine infrastructure ', 28), (' Leasehold buildings ', 27), (' Building & mine infrastructure ', 26), (' Fishing vessels & equipment ', 24), (' Workshop tooling ', 23), (' gross ', 20), (' Subsea ', 17), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 3, 4, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 12, 13, 13, 14, 14, 15, 15, 16, 17, 18, 19, 20, 21, 22, 22, 23, 23, 24, 24, 25, 25, 26, 26, 27, 28, 29, 30, 31, 32, 33, 33, 34, 34, 35, 35, 36, 36, 37, 37, 38, 39, 40, 41, 42, 43, 44, 44, 45, 45, 46, 46, 47, 47, 48, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57, 58, 59], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 80, 100, 80, 100, 80, 100, 80, 100, 80, 80, 80, 80, 80, 80, 80, 100, 100, 100, 100, 100], 'value': [1964984.0, 1964984.0, 26478.0, 26478.0, 0.0, 0.0, -259119.0, -259119.0, 1732343.0, 1732343.0, 742495.0, 56020.0, 0.0, 798515.0, 1222489.0, 933828.0, 12466018.0, 12466018.0, 1130891.0, 1130891.0, 0.0, 0.0, 0.0, 0.0, 13596909.0, 13596909.0, 8728892.0, 1205000.0, 0.0, 9933892.0, 3737126.0, 3663017.0, 2266061.0, 2266061.0, 125263.0, 125263.0, 0.0, 0.0, 0.0, 0.0, 2391324.0, 2391324.0, 986195.0, 139293.0, 0.0, 1125488.0, 1279866.0, 1265836.0, 14839237.0, 14839237.0, 522953.0, 522953.0, -15773.0, -15773.0, 0.0, 0.0, 15346417.0, 15346417.0, 7678818.0, 975910.0, -15732.0, 8638996.0, 7160419.0, 6707421.0, 4015370.0, 4015370.0, 2041012.0, 2041012.0, 0.0, 0.0, 0.0, 0.0, 6056382.0, 6056382.0, 0.0, 0.0, 0.0, 0.0, 4015370.0, 6056382.0, 35551670.0, 3846597.0, -15773.0, -259119.0, 39123375.0], 'label': ['Cost Balance at1 1 January 2022', 'Land and Buildings', 'Cost Additions', 'Land and Buildings', 'Cost Disposals', 'Land and Buildings', 'Cost Other adjustments', 'Land and Buildings', 'Cost Balance at 31 December 2022', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Land and Buildings', 'Cost Balance at1 1 January 2022', 'Deferred Mining Cost', 'Cost Additions', 'Deferred Mining Cost', 'Cost Disposals', 'Deferred Mining Cost', 'Cost Other adjustments', 'Deferred Mining Cost', 'Cost Balance at 31 December 2022', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Deferred Mining Cost', 'Cost Balance at1 1 January 2022', 'Mine Properties', 'Cost Additions', 'Mine Properties', 'Cost Disposals', 'Mine Properties', 'Cost Other adjustments', 'Mine Properties', 'Cost Balance at 31 December 2022', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Mine Properties', 'Cost Balance at1 1 January 2022', 'Plant and Equipment', 'Cost Additions', 'Plant and Equipment', 'Cost Disposals', 'Plant and Equipment', 'Cost Other adjustments', 'Plant and Equipment', 'Cost Balance at 31 December 2022', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Plant and Equipment', 'Cost Balance at1 1 January 2022', 'Worki in Progress', 'Cost Additions', 'Worki in Progress', 'Cost Disposals', 'Worki in Progress', 'Cost Other adjustments', 'Worki in Progress', 'Cost Balance at 31 December 2022', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Worki in Progress', 'Cost Balance at1 1 January 2022', 'Cost Additions', 'Cost Disposals', 'Cost Other adjustments', 'Cost Balance at 31 December 2022'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = land and buildings , res_fuzz_match = [('net value', 38), ('net book value', 31), ('accumulated depreciation', 29), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = deferred mining cost , res_fuzz_match = [('depreciatio', 45), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = mine properties , res_fuzz_match = [('depreciatio', 57), ('accumulated depreciation', 46), ('net value', 38), ('net book value', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = plant and equipment , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = worki in progress , res_fuzz_match = [('depreciatio', 29), ('accumulated depreciation', 29), ('net book value', 23), ('net value', 12)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at1 1 january 2022 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [('depreciatio', 36), ('accumulated depreciation', 36), ('net book value', 27), ('net value', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost other adjustments , res_fuzz_match = [('net value', 50), ('net book value', 46), ('depreciatio', 36), ('accumulated depreciation', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = cost balance at 31 december 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 41), ('net book value', 38), ('depreciatio', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 1 january 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 50), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses depreciation for the year , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses disposals , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation and impairment losses balance at 31 december 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 38)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2021 at31 december 2021 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 47), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = carrying amounts 2022 at 31 december2 2022 , res_fuzz_match = [('accumulated depreciation', 48), ('net value', 38), ('depreciatio', 36), ('net book value', 31)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = total , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6, 7, 8, 16, 17, 18, 19, 27, 28, 29, 30, 38, 39, 40, 41, 49, 50, 51, 52, 60, 61, 62, 63], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [742495.0, 56020.0, 0.0, 798515.0, 8728892.0, 1205000.0, 0.0, 9933892.0, 986195.0, 139293.0, 0.0, 1125488.0, 7678818.0, 975910.0, -15732.0, 8638996.0, 0.0, 0.0, 0.0, 0.0, 18136400.0, 2376223.0, -15732.0, 20496891.0], 'label': ['Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022', 'Accumulated depreciation and impairment losses Balance at 1 January 2022', 'Accumulated depreciation and impairment losses Depreciation for the year', 'Accumulated depreciation and impairment losses Disposals', 'Accumulated depreciation and impairment losses Balance at 31 December 2022'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:13+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-24 12:24:13+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 555857.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [555857.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' trade receivables ', 40), (' government subsidies receivable ', 40), (' trade and other receivables', 40), ('account receivables ', 20), (' receivable ', 20), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' unbilled ', 60), (' trade and other receivables', 54), ('account receivables ', 50), (' trade receivables ', 50), (' receivable ', 50), (' billed ', 50), (' government subsidies receivable ', 34)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' receivable ', 100), (' trade and other receivables', 100), (' trade receivables ', 75), ('account receivables ', 64), (' government subsidies receivable ', 48), (' billed ', 25), (' unbilled ', 20)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = inventories , res_fuzz_match = [('account receivables ', 44), (' unbilled ', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' receivable ', 33), (' trade and other receivables', 33), (' billed ', 25)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 290928.0, 'line_item_label': ['Trade and other receivables'], 'note_numbers': ['10'], 'line_item_value': [290928.0]}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:13+0530 - sLogger - DEBUG - keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' receivables from related parties ', 78), ('trade receivables ', 67), (' related party receivables ', 61), (' share of joint venture receivables ', 56), (' net trade debtors ', 50), (' trade debtors ', 42), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' provision for impairment losses ', 36), ('charges paid in advance ', 35), (' other debtors ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' trade debtors ', 100), (' net trade debtors ', 94), (' other debtors ', 75), ('trade receivables ', 58), (' share of joint venture receivables ', 45), (' allowance for expected credit loss ', 45), (' trade debtors from contracts with customers', 45), (' related party receivables ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 40), (' provision for impairment losses ', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' related party receivables ', 56), ('trade receivables ', 50), (' share of joint venture receivables ', 45), (' net trade debtors ', 38), ('charges paid in advance ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' trade debtors from contracts with customers', 35), (' trade debtors ', 33), (' other debtors ', 33), (' provision for impairment losses ', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' share of joint venture receivables ', 60), (' other debtors ', 58), (' net trade debtors ', 44), (' allowance for expected credit loss ', 40), (' trade debtors from contracts with customers', 40), (' receivables from related parties ', 36), (' trade debtors ', 33), (' provision for impairment losses ', 30), ('charges paid in advance ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit loss ', 46), (' trade debtors from contracts with customers', 46), (' trade debtors ', 42), (' share of joint venture receivables ', 38), (' net trade debtors ', 38), (' receivables from related parties ', 38), (' other debtors ', 33), ('charges paid in advance ', 31), (' provision for impairment losses ', 31), ('trade receivables ', 25), (' related party receivables ', 23)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' share of joint venture receivables ', 57), (' allowance for expected credit loss ', 57), (' other debtors ', 43), (' receivables from related parties ', 43), (' trade debtors from contracts with customers', 43), ('trade receivables ', 29), (' related party receivables ', 29), (' trade debtors ', 29), (' net trade debtors ', 29), ('charges paid in advance ', 29), (' provision for impairment losses ', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current tax funding receivable related party , res_fuzz_match = [(' receivables from related parties ', 78), ('trade receivables ', 67), (' related party receivables ', 61), (' share of joint venture receivables ', 56), (' net trade debtors ', 50), (' trade debtors ', 42), (' allowance for expected credit loss ', 39), (' trade debtors from contracts with customers', 37), (' provision for impairment losses ', 36), ('charges paid in advance ', 35), (' other debtors ', 33)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current trade debtors , res_fuzz_match = [(' trade debtors ', 100), (' net trade debtors ', 94), (' other debtors ', 75), ('trade receivables ', 58), (' share of joint venture receivables ', 45), (' allowance for expected credit loss ', 45), (' trade debtors from contracts with customers', 45), (' related party receivables ', 44), ('charges paid in advance ', 41), (' receivables from related parties ', 40), (' provision for impairment losses ', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current accrued revenue , res_fuzz_match = [(' related party receivables ', 56), ('trade receivables ', 50), (' share of joint venture receivables ', 45), (' net trade debtors ', 38), ('charges paid in advance ', 35), (' receivables from related parties ', 35), (' allowance for expected credit loss ', 35), (' trade debtors from contracts with customers', 35), (' trade debtors ', 33), (' other debtors ', 33), (' provision for impairment losses ', 30)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current other receivables , res_fuzz_match = [('trade receivables ', 75), (' related party receivables ', 67), (' share of joint venture receivables ', 60), (' other debtors ', 58), (' net trade debtors ', 44), (' allowance for expected credit loss ', 40), (' trade debtors from contracts with customers', 40), (' receivables from related parties ', 36), (' trade debtors ', 33), (' provision for impairment losses ', 30), ('charges paid in advance ', 29)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' allowance for expected credit loss ', 46), (' trade debtors from contracts with customers', 46), (' trade debtors ', 42), (' share of joint venture receivables ', 38), (' net trade debtors ', 38), (' receivables from related parties ', 38), (' other debtors ', 33), ('charges paid in advance ', 31), (' provision for impairment losses ', 31), ('trade receivables ', 25), (' related party receivables ', 23)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = current 11 , res_fuzz_match = [(' share of joint venture receivables ', 57), (' allowance for expected credit loss ', 57), (' other debtors ', 43), (' receivables from related parties ', 43), (' trade debtors from contracts with customers', 43), ('trade receivables ', 29), (' related party receivables ', 29), (' trade debtors ', 29), (' net trade debtors ', 29), ('charges paid in advance ', 29), (' provision for impairment losses ', 14)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - txt_rows = trade and other receivables , res_fuzz_match = [('trade receivables ', 75), (' trade debtors ', 67), (' share of joint venture receivables ', 64), (' related party receivables ', 61), (' other debtors ', 58), (' net trade debtors ', 56), (' trade debtors from contracts with customers', 55), (' allowance for expected credit loss ', 41), ('charges paid in advance ', 35), (' receivables from related parties ', 33), (' provision for impairment losses ', 27)]
2023-08-24 12:24:13+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 7], 'score': [100, 100], 'value': [108249.0, 116819.0], 'label': ['Current Trade debtors', 'Current Trade debtors'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-24 12:24:13+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:13+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:13+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('revenue from operations ', 40), (' Sales revenue ', 40), (' Revenue ', 40), (' sale of products ', 38), (' revenue from continuing activities', 31), (' transmission and distribution business ', 29), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' Sale of coal ', 26), (' from trading business ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' from trading business ', 44), ('revenue from operations ', 38), (' transmission and distribution business ', 37), (' sale of products ', 36), (' revenue from contracts with customers ', 34), (' net sales ', 28), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Sales revenue ', 25), (' Revenue ', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' net sales ', 44), (' from trading business ', 35), (' Sales revenue ', 33), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' sale of products ', 26), (' Revenue ', 24), (' Sale of coal ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' from trading business ', 36), (' sale of products ', 35), (' Sales revenue ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 32), (' Sale of coal ', 29), (' transmission and distribution business ', 26), (' net sales ', 25), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' transmission and distribution business ', 49), (' sale of products ', 40), (' revenue from continuing activities', 37), (' Sales revenue ', 33), (' net sales ', 29), (' from trading business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), ('revenue from operations ', 21), (' Revenue ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('revenue from operations ', 48), (' from trading business ', 38), (' Sale of coal ', 38), (' revenue from continuing activities', 38), (' revenue from contracts with customers ', 37), (' net sales ', 32), (' transmission and distribution business ', 31), (' sale of products ', 28), (' Sales revenue ', 21), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), (' revenue from contracts with customers ', 42), (' Sales revenue ', 39), (' from trading business ', 36), ('revenue from operations ', 35), (' sale of products ', 33), (' Sale of coal ', 31), (' net sales ', 26), (' Revenue ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('revenue from operations ', 48), (' from trading business ', 38), (' Sale of coal ', 38), (' revenue from continuing activities', 38), (' revenue from contracts with customers ', 37), (' net sales ', 32), (' transmission and distribution business ', 31), (' sale of products ', 28), (' Sales revenue ', 21), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' from trading business ', 36), (' sale of products ', 35), (' Sales revenue ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 32), (' Sale of coal ', 29), (' transmission and distribution business ', 26), (' net sales ', 25), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 5624766.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [5624766.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' revenue from continuing activities', 54), ('revenue from operations ', 43), (' net sales ', 40), (' Sale of coal ', 38), (' revenue from contracts with customers ', 36), (' Sales revenue ', 35), (' sale of products ', 33), (' transmission and distribution business ', 30), (' from trading business ', 30), (' Revenue ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Revenue ', 100), (' Sales revenue ', 71), ('revenue from operations ', 55), (' revenue from continuing activities', 39), (' revenue from contracts with customers ', 32), (' net sales ', 29), (' sale of products ', 22), (' from trading business ', 19), (' Sale of coal ', 13), (' transmission and distribution business ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities', 29), ('revenue from operations ', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' from trading business ', 37), ('revenue from operations ', 36), (' sale of products ', 33), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19), (' Sales revenue ', 17), (' Revenue ', 11), (' net sales ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities', 33), (' net sales ', 32), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('revenue from operations ', 40), (' Sales revenue ', 40), (' Revenue ', 40), (' sale of products ', 38), (' revenue from continuing activities', 31), (' transmission and distribution business ', 29), (' net sales ', 27), (' revenue from contracts with customers ', 26), (' Sale of coal ', 26), (' from trading business ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities', 22), (' Sale of coal ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('revenue from operations ', 68), (' revenue from continuing activities', 60), (' from trading business ', 49), (' revenue from contracts with customers ', 48), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' net sales ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities', 38), (' revenue from contracts with customers ', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities', 33), (' net sales ', 32), (' from trading business ', 31), (' transmission and distribution business ', 26), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Sale of coal ', 42), (' revenue from contracts with customers ', 38), (' sale of products ', 37), (' net sales ', 35), (' revenue from continuing activities', 35), (' from trading business ', 33), ('revenue from operations ', 26), (' transmission and distribution business ', 23), (' Sales revenue ', 23), (' Revenue ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' from trading business ', 44), ('revenue from operations ', 38), (' transmission and distribution business ', 37), (' sale of products ', 36), (' revenue from contracts with customers ', 34), (' net sales ', 28), (' Sale of coal ', 27), (' revenue from continuing activities', 26), (' Sales revenue ', 25), (' Revenue ', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' net sales ', 44), (' from trading business ', 35), (' Sales revenue ', 33), (' revenue from continuing activities', 32), (' revenue from contracts with customers ', 31), (' transmission and distribution business ', 30), ('revenue from operations ', 29), (' sale of products ', 26), (' Revenue ', 24), (' Sale of coal ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' from trading business ', 36), (' sale of products ', 35), (' Sales revenue ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 32), (' Sale of coal ', 29), (' transmission and distribution business ', 26), (' net sales ', 25), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' transmission and distribution business ', 49), (' sale of products ', 40), (' revenue from continuing activities', 37), (' Sales revenue ', 33), (' net sales ', 29), (' from trading business ', 29), (' revenue from contracts with customers ', 27), (' Sale of coal ', 27), ('revenue from operations ', 21), (' Revenue ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('revenue from operations ', 48), (' from trading business ', 38), (' Sale of coal ', 38), (' revenue from continuing activities', 38), (' revenue from contracts with customers ', 37), (' net sales ', 32), (' transmission and distribution business ', 31), (' sale of products ', 28), (' Sales revenue ', 21), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('revenue from operations ', 45), (' revenue from contracts with customers ', 36), (' from trading business ', 36), (' transmission and distribution business ', 35), (' sale of products ', 33), (' revenue from continuing activities', 33), (' Sale of coal ', 24), (' Sales revenue ', 23), (' Revenue ', 20), (' net sales ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' transmission and distribution business ', 45), (' revenue from continuing activities', 44), (' revenue from contracts with customers ', 42), (' Sales revenue ', 39), (' from trading business ', 36), ('revenue from operations ', 35), (' sale of products ', 33), (' Sale of coal ', 31), (' net sales ', 26), (' Revenue ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('revenue from operations ', 48), (' from trading business ', 38), (' Sale of coal ', 38), (' revenue from continuing activities', 38), (' revenue from contracts with customers ', 37), (' net sales ', 32), (' transmission and distribution business ', 31), (' sale of products ', 28), (' Sales revenue ', 21), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' revenue from contracts with customers ', 39), (' from trading business ', 36), (' sale of products ', 35), (' Sales revenue ', 35), (' revenue from continuing activities', 34), ('revenue from operations ', 32), (' Sale of coal ', 29), (' transmission and distribution business ', 26), (' net sales ', 25), (' Revenue ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [1], 'score': 100, 'value': 15135308.0, 'line_item_label': ['Revenue'], 'note_numbers': ['4'], 'line_item_value': [15135308.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Motorcycles ', 64), (' Sale of goods - Marine ', 64), (' Condensate ', 57), (' Feed gas income ', 38), (' Sale of goods - Spareparts ', 37), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Gas transportation income ', 29), (' revenue from continuing activities ', 29), (' revenue form contracts with customers ', 29), (' contribution from joint venture', 29), (' Domgas ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 5 , res_fuzz_match = [(' Condensate ', 75), (' Feed gas income ', 50), (' Gas transportation income ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), (' LNG ', 33), ('Sale of goods ', 25), (' Domgas ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' Goods sold to customer from warehouse ', 25), (' Goods sold to customer direct from supplier ', 25), (' hedge loss / gain ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 82), (' Sale of goods - Motorcycles ', 64), (' Sale of goods - Marine ', 64), (' Condensate ', 57), (' Feed gas income ', 38), (' Sale of goods - Spareparts ', 37), (' Goods sold to customer from warehouse ', 36), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Gas transportation income ', 29), (' revenue from continuing activities ', 29), (' revenue form contracts with customers ', 29), (' contribution from joint venture', 29), (' Domgas ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Total Revenue ', 50), (' Condensate ', 43), (' Domgas ', 40), (' Sale of goods - Cars ', 40), (' Sale of goods - Motorcycles ', 40), (' Sale of goods - Marine ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' revenue form contracts with customers ', 40), (' contribution from joint venture', 40), ('Sale of goods ', 33), (' LNG ', 33), (' Gas transportation income ', 30), (' Sale of goods - Spareparts ', 30), (' hedge loss / gain ', 30), (' Feed gas income ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 5 , res_fuzz_match = [(' Condensate ', 75), (' Feed gas income ', 50), (' Gas transportation income ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), (' LNG ', 33), ('Sale of goods ', 25), (' Domgas ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' Goods sold to customer from warehouse ', 25), (' Goods sold to customer direct from supplier ', 25), (' hedge loss / gain ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = revenue , res_fuzz_match = [(' Total Revenue ', 100), (' revenue from continuing activities ', 100), (' revenue form contracts with customers ', 100), (' contribution from joint venture', 67), (' Goods sold to customer from warehouse ', 50), (' LNG ', 33), (' Condensate ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Marine ', 33), (' Sale of goods - Spareparts ', 33), (' Goods sold to customer direct from supplier ', 33), ('Sale of goods ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Motorcycles ', 17), (' hedge loss / gain ', 17), (' Domgas ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 2, 3, 3, 4, 5], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [15135308.0, 15135308.0, 15135308.0, 0.0, 5624766.0, 5624766.0, 5624766.0, 0.0], 'label': ['None Sale of goods', 'Revenue', 'Revenue', 'Revenue', 'None Sale of goods', 'Revenue', 'Revenue', 'Revenue'], 'year': [], 'colname_found': ['rows', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns']}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('expense', 60), ('total expenses', 46), ('expenditure', 42), (' Personnel costs', 36), ('total expenditure', 33), (' Cost of product sold', 32), (' Cost of goods and services sold', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' change in inventory', 28), ('cost of sales', 26), ('Cost of sales', 26), (' cost of coal sold', 21), (' cost of goods sold ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Cost of product sold', 42), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' cost of goods sold ', 29), ('expenditure', 26), (' change in inventory', 22), ('expense', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('total expenses', 58), ('expense', 48), ('total expenditure', 46), ('expenditure', 41), (' Personnel costs', 30), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory', 29), ('purchase of stock-in-trade', 26), (' Cost of inventory sold', 26), (' Cost of goods and services sold', 23), (' Cost of product sold', 22), (' cost of coal sold', 18), (' cost of goods sold ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' cost of goods sold ', 37), (' change in inventory', 36), (' Cost of product sold', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Personnel costs', 33), ('expenditure', 24), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Cost of product sold', 40), (' Cost of inventory sold', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 32), (' cost of goods sold ', 30), (' change in inventory', 29), ('total expenditure', 28), ('cost of sales', 27), ('Cost of sales', 27), ('purchase of stock-in-trade', 25), ('total expenses', 24), (' Personnel costs', 22), ('expenditure', 17), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' change in inventory', 44), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Personnel costs', 39), ('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of goods sold ', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 30), (' Cost of product sold', 29), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('total expenses', 48), ('purchase of stock-in-trade', 41), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' cost of goods sold ', 36), (' Cost of product sold', 34), (' Personnel costs', 32), (' change in inventory', 27), ('expense', 22), ('expenditure', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' change in inventory', 44), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Personnel costs', 39), ('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of goods sold ', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 30), (' Cost of product sold', 29), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' cost of goods sold ', 37), (' change in inventory', 36), (' Cost of product sold', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Personnel costs', 33), ('expenditure', 24), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -5528209.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-5528209.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Personnel costs', 54), ('cost of sales', 48), ('Cost of sales', 48), (' Cost of inventory sold', 45), (' change in inventory', 44), (' Cost of product sold', 41), (' cost of coal sold', 38), (' Cost of goods and services sold', 38), (' cost of goods sold ', 38), ('expenditure', 36), ('total expenditure', 36), ('purchase of stock-in-trade', 32), ('total expenses', 25), ('expense', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expense', 50), ('expenditure', 50), ('total expenditure', 36), ('total expenses', 33), (' change in inventory', 29), (' Cost of inventory sold', 24), (' Personnel costs', 20), (' Cost of product sold', 17), ('purchase of stock-in-trade', 16), ('cost of sales', 13), ('Cost of sales', 13), (' Cost of goods and services sold', 13), (' cost of coal sold', 0), (' cost of goods sold ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Cost of product sold', 54), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory', 25), ('expense', 13), ('expenditure', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Cost of product sold', 48), (' Personnel costs', 46), ('purchase of stock-in-trade', 39), ('total expenses', 33), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' cost of goods sold ', 31), (' change in inventory', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 27), (' Cost of goods and services sold', 27), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), ('total expenses', 35), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('expense', 60), ('total expenses', 46), ('expenditure', 42), (' Personnel costs', 36), ('total expenditure', 33), (' Cost of product sold', 32), (' Cost of goods and services sold', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' change in inventory', 28), ('cost of sales', 26), ('Cost of sales', 26), (' cost of coal sold', 21), (' cost of goods sold ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of goods and services sold', 32), (' change in inventory', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Cost of goods and services sold', 47), (' Cost of inventory sold', 44), (' Personnel costs', 44), (' cost of goods sold ', 44), (' Cost of product sold', 41), (' cost of coal sold', 39), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory', 27), ('total expenditure', 26), ('purchase of stock-in-trade', 24), ('total expenses', 24), ('expense', 21), ('expenditure', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), ('purchase of stock-in-trade', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Cost of inventory sold', 53), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('cost of sales', 58), ('Cost of sales', 58), (' Personnel costs', 55), (' Cost of inventory sold', 53), (' change in inventory', 47), (' Cost of product sold', 44), (' cost of goods sold ', 41), (' Cost of goods and services sold', 40), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), ('total expenses', 22), ('total expenditure', 19), ('expenditure', 16), ('expense', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Cost of product sold', 42), ('total expenditure', 38), ('total expenses', 36), ('purchase of stock-in-trade', 35), (' cost of coal sold', 34), (' Personnel costs', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Cost of goods and services sold', 30), (' Cost of inventory sold', 30), (' cost of goods sold ', 29), ('expenditure', 26), (' change in inventory', 22), ('expense', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('total expenses', 58), ('expense', 48), ('total expenditure', 46), ('expenditure', 41), (' Personnel costs', 30), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory', 29), ('purchase of stock-in-trade', 26), (' Cost of inventory sold', 26), (' Cost of goods and services sold', 23), (' Cost of product sold', 22), (' cost of coal sold', 18), (' cost of goods sold ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' cost of goods sold ', 37), (' change in inventory', 36), (' Cost of product sold', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Personnel costs', 33), ('expenditure', 24), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Cost of product sold', 40), (' Cost of inventory sold', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 32), (' cost of goods sold ', 30), (' change in inventory', 29), ('total expenditure', 28), ('cost of sales', 27), ('Cost of sales', 27), ('purchase of stock-in-trade', 25), ('total expenses', 24), (' Personnel costs', 22), ('expenditure', 17), ('expense', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' change in inventory', 44), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Personnel costs', 39), ('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of goods sold ', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 30), (' Cost of product sold', 29), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 37), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of coal sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), ('total expenses', 28), (' Cost of inventory sold', 28), (' cost of goods sold ', 26), ('expenditure', 24), (' change in inventory', 21), ('expense', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('total expenses', 48), ('purchase of stock-in-trade', 41), (' cost of coal sold', 41), (' Cost of goods and services sold', 40), ('total expenditure', 39), (' Cost of inventory sold', 37), ('cost of sales', 36), ('Cost of sales', 36), (' cost of goods sold ', 36), (' Cost of product sold', 34), (' Personnel costs', 32), (' change in inventory', 27), ('expense', 22), ('expenditure', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' change in inventory', 44), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Personnel costs', 39), ('total expenditure', 36), ('total expenses', 34), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' cost of goods sold ', 32), ('cost of sales', 31), ('Cost of sales', 31), ('expenditure', 30), (' Cost of product sold', 29), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('total expenditure', 39), ('total expenses', 38), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' cost of goods sold ', 37), (' change in inventory', 36), (' Cost of product sold', 35), ('purchase of stock-in-trade', 34), ('cost of sales', 33), ('Cost of sales', 33), (' Personnel costs', 33), ('expenditure', 24), ('expense', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': -8632741.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-8632741.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Depreciation expenses ', 100), (' Advertising expenses ', 76), (' Depreciation and amortisation expenses ', 70), (' depreciation ', 67), (' Distribution expenses ', 67), (' Amortisation expenses ', 64), ('expenses ', 60), (' Administrative expenses ', 60), (' Administration expenses ', 60), (' Selling & distribution expenses ', 57), (' employee benefits expense ', 56), (' employee benefit espense ', 50), (' Lease expenses ', 48), (' Selling Expenses ', 48), (' other expenses ', 46), (' Occupancy expenses ', 46), (' Other expenses ', 46), (' Management expenses ', 46), (' Other expenses ', 46), (' Administrative and other expenses ', 45), (' Marketing expenses ', 44), (' property espense ', 41), (' Administration ', 35), (' Sales and marketing ', 34), (' Logistics and distribution ', 29), (' levies', 22), (' Occupancy ', 21), (' Royalties ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' property espense ', 44), (' Depreciation and amortisation expenses ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Depreciation expenses ', 34), (' Logistics and distribution ', 34), (' Distribution expenses ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' depreciation ', 29), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Advertising expenses ', 28), (' Sales and marketing ', 28), (' Administrative and other expenses ', 26), (' Lease expenses ', 25), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Administrative expenses ', 22), (' Administration expenses ', 22), (' Royalties ', 21), (' Selling Expenses ', 19), (' levies', 16), ('expenses ', 15), (' Occupancy ', 15), (' Administration ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' employee benefits expense ', 68), (' employee benefit espense ', 63), (' Depreciation expenses ', 61), (' Administrative expenses ', 57), (' Administration expenses ', 57), (' Administrative and other expenses ', 53), (' Lease expenses ', 53), (' Advertising expenses ', 53), (' other expenses ', 52), (' Other expenses ', 52), (' Management expenses ', 52), (' Other expenses ', 52), (' Distribution expenses ', 51), (' Marketing expenses ', 50), (' Selling & distribution expenses ', 50), ('expenses ', 48), (' Amortisation expenses ', 48), (' Selling Expenses ', 47), (' Occupancy expenses ', 45), (' Depreciation and amortisation expenses ', 44), (' property espense ', 41), (' Sales and marketing ', 35), (' Logistics and distribution ', 31), (' Administration ', 29), (' depreciation ', 23), (' levies', 17), (' Occupancy ', 8), (' Royalties ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Administrative and other expenses ', 39), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 33), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 31), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' Occupancy expenses ', 27), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Advertising expenses ', 25), (' Administration ', 24), (' Distribution expenses ', 21), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Logistics and distribution ', 67), (' Distribution expenses ', 55), (' Selling & distribution expenses ', 53), (' employee benefit espense ', 40), (' Amortisation expenses ', 37), (' Advertising expenses ', 36), (' Sales and marketing ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' Depreciation expenses ', 30), (' Royalties ', 30), (' Administration ', 27), (' Administrative and other expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 23), (' depreciation ', 20), (' Selling Expenses ', 17), (' other expenses ', 16), (' Occupancy expenses ', 16), (' Other expenses ', 16), (' Other expenses ', 16), (' property espense ', 14), (' levies', 12), ('expenses ', 11), (' Occupancy ', 11), (' Management expenses ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other expenses ', 48), (' Other expenses ', 48), (' Other expenses ', 48), (' Administrative and other expenses ', 47), (' property espense ', 44), (' Sales and marketing ', 38), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Administration ', 31), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Management expenses ', 28), (' Selling & distribution expenses ', 26), (' depreciation ', 25), (' Royalties ', 25), (' Distribution expenses ', 24), (' Occupancy ', 18), ('expenses ', 17), (' levies', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Selling & distribution expenses ', 55), (' Distribution expenses ', 48), (' Logistics and distribution ', 48), (' Sales and marketing ', 40), (' Administrative and other expenses ', 39), (' Advertising expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Amortisation expenses ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling Expenses ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation expenses ', 32), (' property espense ', 31), (' Occupancy expenses ', 29), (' Management expenses ', 29), (' Marketing expenses ', 28), (' Administration ', 26), ('expenses ', 22), (' Royalties ', 22), (' depreciation ', 16), (' Occupancy ', 11), (' levies', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other expenses ', 48), (' Other expenses ', 48), (' Other expenses ', 48), (' Administrative and other expenses ', 47), (' property espense ', 44), (' Sales and marketing ', 38), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Administration ', 31), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Management expenses ', 28), (' Selling & distribution expenses ', 26), (' depreciation ', 25), (' Royalties ', 25), (' Distribution expenses ', 24), (' Occupancy ', 18), ('expenses ', 17), (' levies', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Administrative and other expenses ', 39), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 33), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 31), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' Occupancy expenses ', 27), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Advertising expenses ', 25), (' Administration ', 24), (' Distribution expenses ', 21), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -2382080.0, 'line_item_label': ['Depreciation expense', 'Other expenses'], 'note_numbers': [nan, '6'], 'line_item_value': [-1935433.0, -446647.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Amortisation expenses ', 46), (' property espense ', 44), (' Distribution expenses ', 43), (' other expenses ', 42), (' Other expenses ', 42), (' Other expenses ', 42), (' Depreciation expenses ', 38), (' Logistics and distribution ', 38), (' Administrative and other expenses ', 37), (' Advertising expenses ', 37), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Selling & distribution expenses ', 36), (' Administration expenses ', 36), (' Occupancy ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Occupancy expenses ', 33), (' Royalties ', 32), (' Sales and marketing ', 30), (' Administration ', 29), (' Lease expenses ', 26), (' Selling Expenses ', 26), (' Marketing expenses ', 24), ('expenses ', 22), (' depreciation ', 21), (' Management expenses ', 17), (' levies', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('expenses ', 50), (' Occupancy expenses ', 44), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' levies', 40), (' Advertising expenses ', 38), (' Distribution expenses ', 36), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' Lease expenses ', 35), (' Selling Expenses ', 35), (' other expenses ', 33), (' Other expenses ', 33), (' Management expenses ', 33), (' Other expenses ', 33), (' Marketing expenses ', 32), (' depreciation ', 31), (' Selling & distribution expenses ', 30), (' Sales and marketing ', 29), (' property espense ', 29), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' employee benefits expense ', 21), (' employee benefit espense ', 21), (' Occupancy ', 18), (' Logistics and distribution ', 15), (' Royalties ', 15), (' Administration ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' levies', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' property espense ', 52), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' depreciation ', 32), (' Marketing expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' Royalties ', 32), (' Amortisation expenses ', 31), (' Logistics and distribution ', 31), (' Advertising expenses ', 30), (' Distribution expenses ', 29), (' Administrative and other expenses ', 26), (' Occupancy expenses ', 25), (' Selling & distribution expenses ', 24), (' Occupancy ', 24), (' Depreciation expenses ', 23), (' Sales and marketing ', 22), (' Administrative expenses ', 21), (' Administration expenses ', 21), (' Administration ', 19), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' Management expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Depreciation expenses ', 100), (' Advertising expenses ', 76), (' Depreciation and amortisation expenses ', 70), (' depreciation ', 67), (' Distribution expenses ', 67), (' Amortisation expenses ', 64), ('expenses ', 60), (' Administrative expenses ', 60), (' Administration expenses ', 60), (' Selling & distribution expenses ', 57), (' employee benefits expense ', 56), (' employee benefit espense ', 50), (' Lease expenses ', 48), (' Selling Expenses ', 48), (' other expenses ', 46), (' Occupancy expenses ', 46), (' Other expenses ', 46), (' Management expenses ', 46), (' Other expenses ', 46), (' Administrative and other expenses ', 45), (' Marketing expenses ', 44), (' property espense ', 41), (' Administration ', 35), (' Sales and marketing ', 34), (' Logistics and distribution ', 29), (' levies', 22), (' Occupancy ', 21), (' Royalties ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Amortisation expenses ', 39), (' Advertising expenses ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Administrative expenses ', 37), (' Selling & distribution expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 34), (' Depreciation expenses ', 33), (' Administrative and other expenses ', 33), (' Logistics and distribution ', 33), (' Distribution expenses ', 32), (' Lease expenses ', 30), (' Selling Expenses ', 30), (' Royalties ', 28), (' Administration ', 26), (' other expenses ', 24), (' Occupancy expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), ('expenses ', 21), (' depreciation ', 21), (' Management expenses ', 18), (' Occupancy ', 15), (' levies', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies', 12), ('expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies', 13), ('expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Administrative and other expenses ', 39), (' Depreciation and amortisation expenses ', 39), (' Marketing expenses ', 36), (' Amortisation expenses ', 34), (' Selling & distribution expenses ', 33), (' Sales and marketing ', 33), (' property espense ', 33), (' Distribution expenses ', 32), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' Depreciation expenses ', 28), (' Advertising expenses ', 27), (' Royalties ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Administration ', 25), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' other expenses ', 22), (' Occupancy expenses ', 22), (' Other expenses ', 22), (' Other expenses ', 22), (' employee benefits expense ', 22), (' employee benefit espense ', 22), (' Occupancy ', 20), (' depreciation ', 18), (' levies', 11), ('expenses ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' property espense ', 44), (' Depreciation and amortisation expenses ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Depreciation expenses ', 34), (' Logistics and distribution ', 34), (' Distribution expenses ', 32), (' other expenses ', 30), (' Other expenses ', 30), (' Other expenses ', 30), (' depreciation ', 29), (' Marketing expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Advertising expenses ', 28), (' Sales and marketing ', 28), (' Administrative and other expenses ', 26), (' Lease expenses ', 25), (' Occupancy expenses ', 24), (' Management expenses ', 24), (' Administrative expenses ', 22), (' Administration expenses ', 22), (' Royalties ', 21), (' Selling Expenses ', 19), (' levies', 16), ('expenses ', 15), (' Occupancy ', 15), (' Administration ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' employee benefits expense ', 68), (' employee benefit espense ', 63), (' Depreciation expenses ', 61), (' Administrative expenses ', 57), (' Administration expenses ', 57), (' Administrative and other expenses ', 53), (' Lease expenses ', 53), (' Advertising expenses ', 53), (' other expenses ', 52), (' Other expenses ', 52), (' Management expenses ', 52), (' Other expenses ', 52), (' Distribution expenses ', 51), (' Marketing expenses ', 50), (' Selling & distribution expenses ', 50), ('expenses ', 48), (' Amortisation expenses ', 48), (' Selling Expenses ', 47), (' Occupancy expenses ', 45), (' Depreciation and amortisation expenses ', 44), (' property espense ', 41), (' Sales and marketing ', 35), (' Logistics and distribution ', 31), (' Administration ', 29), (' depreciation ', 23), (' levies', 17), (' Occupancy ', 8), (' Royalties ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Administrative and other expenses ', 39), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 33), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 31), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' Occupancy expenses ', 27), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Advertising expenses ', 25), (' Administration ', 24), (' Distribution expenses ', 21), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Logistics and distribution ', 67), (' Distribution expenses ', 55), (' Selling & distribution expenses ', 53), (' employee benefit espense ', 40), (' Amortisation expenses ', 37), (' Advertising expenses ', 36), (' Sales and marketing ', 36), (' Administrative expenses ', 34), (' Administration expenses ', 34), (' employee benefits expense ', 34), (' Depreciation and amortisation expenses ', 31), (' Depreciation expenses ', 30), (' Royalties ', 30), (' Administration ', 27), (' Administrative and other expenses ', 26), (' Lease expenses ', 25), (' Marketing expenses ', 23), (' depreciation ', 20), (' Selling Expenses ', 17), (' other expenses ', 16), (' Occupancy expenses ', 16), (' Other expenses ', 16), (' Other expenses ', 16), (' property espense ', 14), (' levies', 12), ('expenses ', 11), (' Occupancy ', 11), (' Management expenses ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other expenses ', 48), (' Other expenses ', 48), (' Other expenses ', 48), (' Administrative and other expenses ', 47), (' property espense ', 44), (' Sales and marketing ', 38), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Administration ', 31), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Management expenses ', 28), (' Selling & distribution expenses ', 26), (' depreciation ', 25), (' Royalties ', 25), (' Distribution expenses ', 24), (' Occupancy ', 18), ('expenses ', 17), (' levies', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' property espense ', 41), (' Depreciation and amortisation expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Other expenses ', 39), (' Selling & distribution expenses ', 36), (' Administrative and other expenses ', 36), (' Distribution expenses ', 35), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' employee benefits expense ', 30), (' employee benefit espense ', 30), (' Lease expenses ', 29), (' Marketing expenses ', 27), (' Advertising expenses ', 26), (' Sales and marketing ', 26), (' Royalties ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Selling Expenses ', 23), (' Management expenses ', 22), (' depreciation ', 19), (' Administration ', 18), (' Occupancy expenses ', 17), (' Occupancy ', 14), (' levies', 14), ('expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Selling & distribution expenses ', 55), (' Distribution expenses ', 48), (' Logistics and distribution ', 48), (' Sales and marketing ', 40), (' Administrative and other expenses ', 39), (' Advertising expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' Amortisation expenses ', 36), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' employee benefits expense ', 35), (' employee benefit espense ', 35), (' Lease expenses ', 34), (' Selling Expenses ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Depreciation expenses ', 32), (' property espense ', 31), (' Occupancy expenses ', 29), (' Management expenses ', 29), (' Marketing expenses ', 28), (' Administration ', 26), ('expenses ', 22), (' Royalties ', 22), (' depreciation ', 16), (' Occupancy ', 11), (' levies', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other expenses ', 48), (' Other expenses ', 48), (' Other expenses ', 48), (' Administrative and other expenses ', 47), (' property espense ', 44), (' Sales and marketing ', 38), (' Depreciation and amortisation expenses ', 37), (' Administrative expenses ', 36), (' Administration expenses ', 36), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Marketing expenses ', 33), (' Depreciation expenses ', 32), (' Amortisation expenses ', 32), (' Logistics and distribution ', 32), (' Advertising expenses ', 31), (' Administration ', 31), (' Lease expenses ', 29), (' Selling Expenses ', 29), (' Occupancy expenses ', 28), (' Management expenses ', 28), (' Selling & distribution expenses ', 26), (' depreciation ', 25), (' Royalties ', 25), (' Distribution expenses ', 24), (' Occupancy ', 18), ('expenses ', 17), (' levies', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Administrative and other expenses ', 39), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 33), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Selling Expenses ', 31), (' Management expenses ', 31), (' Marketing expenses ', 30), (' Selling & distribution expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' Amortisation expenses ', 30), (' Logistics and distribution ', 30), (' Sales and marketing ', 29), (' Occupancy expenses ', 27), (' Depreciation expenses ', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' Advertising expenses ', 25), (' Administration ', 24), (' Distribution expenses ', 21), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': -2807931.0, 'line_item_label': ['Depreciation expense', 'Other expenses'], 'note_numbers': [nan, '6'], 'line_item_value': [-2383232.0, -424699.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none jv operating expenses , res_fuzz_match = [(' Other expenses ', 83), (' Depreciation expense ', 71), (' Employee expenses ', 71), (' Contractors, subcontractors and employee related expenses ', 69), (' Amortisation expense ', 64), (' Depreciation expense right-of-use asset ', 62), (' Research and development expenses ', 62), (' employee benefits expenses ', 62), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' Other Expenses from Ordinary Activities ', 62), (' power ', 60), (' Facilities Expense ', 58), (' Included in administrative expenses ', 56), (' Administrative expenses ', 56), (' Rental equipment expenses ', 56), (' Distribution Expenses ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Defined contribution plans ', 44), (' Other employement costs', 44), (' exchange ', 43), (' equipment ', 40), (' donation ', 40), (' Depreciation property ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 38), ('consum ', 33), (' machinery ', 33), (' csr ', 33), (' plant and equipment ', 33), (' Depreciation right-of-use assets ', 31), (' loss allowance ', 30), (' Wages and salaries ', 27), (' loss on ', 25), (' Staff welfare ', 25), (' miscellaneous ', 22), (' charges ', 20), (' analytical ', 17), (' social ', 17), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 7 , res_fuzz_match = [('consum ', 50), (' power ', 50), (' machinery ', 50), (' donation ', 50), (' Depreciation property ', 50), (' plant and equipment ', 50), (' Compulsory superannuation contributions ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Contractors, subcontractors and employee related expenses ', 50), (' employee benefits expenses ', 50), (' Employee expenses ', 50), (' Defined contribution plans ', 50), (' research ', 25), (' analytical ', 25), (' exchange ', 25), (' loss on ', 25), (' social ', 25), (' miscellaneous ', 25), (' loss allowance ', 25), (' Included in administrative expenses ', 25), (' Depreciation right-of-use assets ', 25), (' Administrative expenses ', 25), (' Wages and salaries ', 25), (' Staff welfare ', 25), (' Facilities Expense ', 25), (' Rental equipment expenses ', 25), (' Depreciation expense right-of-use asset ', 25), (' Depreciation expense ', 25), (' Amortisation expense ', 25), (' Other expenses ', 25), (' Research and development expenses ', 25), (' depreciation and amortisation expenses ', 25), (' Distribution Expenses ', 25), (' Depreciation and Amortisation Expenses ', 25), (' Other Expenses from Ordinary Activities ', 25), (' Other employement costs', 25), (' charges ', 0), (' equipment ', 0), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none jv operating expenses , res_fuzz_match = [(' Other expenses ', 83), (' Depreciation expense ', 71), (' Employee expenses ', 71), (' Contractors, subcontractors and employee related expenses ', 69), (' Amortisation expense ', 64), (' Depreciation expense right-of-use asset ', 62), (' Research and development expenses ', 62), (' employee benefits expenses ', 62), (' depreciation and amortisation expenses ', 62), (' Depreciation and Amortisation Expenses ', 62), (' Other Expenses from Ordinary Activities ', 62), (' power ', 60), (' Facilities Expense ', 58), (' Included in administrative expenses ', 56), (' Administrative expenses ', 56), (' Rental equipment expenses ', 56), (' Distribution Expenses ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 44), (' Defined contribution plans ', 44), (' Other employement costs', 44), (' exchange ', 43), (' equipment ', 40), (' donation ', 40), (' Depreciation property ', 40), (' research ', 38), (' Compulsory superannuation contributions ', 38), ('consum ', 33), (' machinery ', 33), (' csr ', 33), (' plant and equipment ', 33), (' Depreciation right-of-use assets ', 31), (' loss allowance ', 30), (' Wages and salaries ', 27), (' loss on ', 25), (' Staff welfare ', 25), (' miscellaneous ', 22), (' charges ', 20), (' analytical ', 17), (' social ', 17), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' social ', 50), (' Compulsory superannuation contributions ', 50), (' power ', 40), (' donation ', 40), (' loss allowance ', 40), (' Wages and salaries ', 40), (' Payroll on-costs (excluding employee benefit provision) ', 40), (' Contractors, subcontractors and employee related expenses ', 40), (' Rental equipment expenses ', 40), (' depreciation and amortisation expenses ', 40), (' Depreciation and Amortisation Expenses ', 40), (' Other Expenses from Ordinary Activities ', 40), (' Defined contribution plans ', 40), (' Other employement costs', 40), ('consum ', 33), (' analytical ', 33), (' Included in administrative expenses ', 30), (' Depreciation property ', 30), (' plant and equipment ', 30), (' Depreciation right-of-use assets ', 30), (' Staff welfare ', 30), (' Depreciation expense right-of-use asset ', 30), (' Other expenses ', 30), (' Research and development expenses ', 30), (' employee benefits expenses ', 30), (' Employee expenses ', 30), (' exchange ', 29), (' research ', 25), (' loss on ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' charges ', 20), (' equipment ', 20), (' Administrative expenses ', 20), (' Facilities Expense ', 20), (' Depreciation expense ', 20), (' Amortisation expense ', 20), (' Distribution Expenses ', 10), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 7 , res_fuzz_match = [('consum ', 50), (' power ', 50), (' machinery ', 50), (' donation ', 50), (' Depreciation property ', 50), (' plant and equipment ', 50), (' Compulsory superannuation contributions ', 50), (' Payroll on-costs (excluding employee benefit provision) ', 50), (' Contractors, subcontractors and employee related expenses ', 50), (' employee benefits expenses ', 50), (' Employee expenses ', 50), (' Defined contribution plans ', 50), (' research ', 25), (' analytical ', 25), (' exchange ', 25), (' loss on ', 25), (' social ', 25), (' miscellaneous ', 25), (' loss allowance ', 25), (' Included in administrative expenses ', 25), (' Depreciation right-of-use assets ', 25), (' Administrative expenses ', 25), (' Wages and salaries ', 25), (' Staff welfare ', 25), (' Facilities Expense ', 25), (' Rental equipment expenses ', 25), (' Depreciation expense right-of-use asset ', 25), (' Depreciation expense ', 25), (' Amortisation expense ', 25), (' Other expenses ', 25), (' Research and development expenses ', 25), (' depreciation and amortisation expenses ', 25), (' Distribution Expenses ', 25), (' Depreciation and Amortisation Expenses ', 25), (' Other Expenses from Ordinary Activities ', 25), (' Other employement costs', 25), (' charges ', 0), (' equipment ', 0), (' csr ', 0), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other expenses , res_fuzz_match = [(' Other expenses ', 100), (' Other Expenses from Ordinary Activities ', 100), (' Included in administrative expenses ', 75), (' Administrative expenses ', 75), (' Amortisation expense ', 75), (' depreciation and amortisation expenses ', 75), (' Employee expenses ', 75), (' Depreciation and Amortisation Expenses ', 75), (' Contractors, subcontractors and employee related expenses ', 67), (' Rental equipment expenses ', 67), (' Depreciation expense right-of-use asset ', 67), (' Depreciation expense ', 67), (' Research and development expenses ', 67), (' employee benefits expenses ', 67), (' Distribution Expenses ', 67), (' Other employement costs', 67), (' power ', 60), (' Facilities Expense ', 58), (' Compulsory superannuation contributions ', 50), (' exchange ', 43), (' Depreciation property ', 42), (' Payroll on-costs (excluding employee benefit provision) ', 42), (' Defined contribution plans ', 42), (' charges ', 40), (' equipment ', 40), (' research ', 38), (' plant and equipment ', 35), ('consum ', 33), (' csr ', 33), (' Wages and salaries ', 33), (' Depreciation right-of-use assets ', 26), (' loss on ', 25), (' Staff welfare ', 25), (' machinery ', 22), (' miscellaneous ', 22), (' donation ', 20), (' analytical ', 17), (' social ', 17), (' loss allowance ', 10), ('  ', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 2, 3, 4, 4, 5, 6, 7], 'score': [83, 100, 100, 100, 100, 83, 100, 100, 100, 100], 'value': [424699.0, 424699.0, 424699.0, 0.0, 0.0, 446647.0, 446647.0, 446647.0, 0.0, 2022.0], 'label': ['None JV operating expenses', 'Other expenses', 'Other expenses', 'Other expenses', 'Other expenses', 'None JV operating expenses', 'Other expenses', 'Other expenses', 'Other expenses', 'Other expenses'], 'year': [], 'colname_found': ['rows', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns']}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Administration expenses ', 60), (' Occupancy expenses', 46), (' Rental expenses ', 44), ('Rent ', 33), (' Occupancy ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Rental expenses ', 35), (' Occupancy expenses', 24), (' Administration expenses ', 22), ('Rent ', 16), (' Occupancy ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Administration expenses ', 57), (' Rental expenses ', 56), (' Occupancy expenses', 45), ('Rent ', 26), (' Occupancy ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 38), (' Occupancy expenses', 27), (' Administration expenses ', 25), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Administration expenses ', 34), ('Rent ', 24), (' Rental expenses ', 23), (' Occupancy expenses', 16), (' Occupancy ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 33), (' Occupancy expenses', 28), ('Rent ', 19), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Rental expenses ', 37), (' Administration expenses ', 35), (' Occupancy expenses', 29), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 33), (' Occupancy expenses', 28), ('Rent ', 19), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 38), (' Occupancy expenses', 27), (' Administration expenses ', 25), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Administration expenses ', 36), (' Occupancy ', 35), (' Occupancy expenses', 33), ('Rent ', 25), (' Rental expenses ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Rent ', 60), (' Occupancy expenses', 44), (' Administration expenses ', 36), (' Rental expenses ', 32), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Rental expenses ', 36), (' Administration expenses ', 32), (' Occupancy expenses', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Rental expenses ', 32), ('Rent ', 25), (' Occupancy expenses', 25), (' Occupancy ', 24), (' Administration expenses ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Administration expenses ', 60), (' Occupancy expenses', 46), (' Rental expenses ', 44), ('Rent ', 33), (' Occupancy ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Occupancy expenses', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Occupancy ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 34), (' Occupancy expenses', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Occupancy expenses', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses', 26), (' Occupancy ', 25), ('Rent ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Rental expenses ', 29), (' Administration expenses ', 26), (' Occupancy expenses', 22), ('Rent ', 21), (' Occupancy ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Rental expenses ', 35), (' Occupancy expenses', 24), (' Administration expenses ', 22), ('Rent ', 16), (' Occupancy ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Administration expenses ', 57), (' Rental expenses ', 56), (' Occupancy expenses', 45), ('Rent ', 26), (' Occupancy ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 38), (' Occupancy expenses', 27), (' Administration expenses ', 25), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Administration expenses ', 34), ('Rent ', 24), (' Rental expenses ', 23), (' Occupancy expenses', 16), (' Occupancy ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 33), (' Occupancy expenses', 28), ('Rent ', 19), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 27), (' Administration expenses ', 25), (' Occupancy expenses', 17), ('Rent ', 14), (' Occupancy ', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Rental expenses ', 37), (' Administration expenses ', 35), (' Occupancy expenses', 29), ('Rent ', 24), (' Occupancy ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' Administration expenses ', 36), (' Rental expenses ', 33), (' Occupancy expenses', 28), ('Rent ', 19), (' Occupancy ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Rental expenses ', 38), (' Occupancy expenses', 27), (' Administration expenses ', 25), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue', ' Other income']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('Other revenue', 46), ('other operating', 33), (' Other income', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('other operating', 32), (' Other income', 25), ('Other revenue', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('Other revenue', 32), ('other operating', 28), (' Other income', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Other income', 43), ('other operating', 40), ('Other revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other operating', 59), (' Other income', 57), ('Other revenue', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Other income', 34), ('Other revenue', 33), ('other operating', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other operating', 59), (' Other income', 57), ('Other revenue', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Other income', 43), ('other operating', 40), ('Other revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 354542.0, 'line_item_label': ['Other income'], 'note_numbers': ['5'], 'line_item_value': [354542.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Other income', 52), ('other operating', 45), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('Other revenue', 67), ('other operating', 25), (' Other income', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue', 38), ('other operating', 32)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('other operating', 45), (' Other income', 35), ('Other revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('Other revenue', 46), ('other operating', 33), (' Other income', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue', 42)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Other income', 42), ('Other revenue', 41), ('other operating', 38)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue', 35), (' Other income', 27), ('other operating', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Other income', 38), ('Other revenue', 30), ('other operating', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('other operating', 32), (' Other income', 25), ('Other revenue', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('Other revenue', 32), ('other operating', 28), (' Other income', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Other income', 43), ('other operating', 40), ('Other revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('other operating', 26), (' Other income', 25), ('Other revenue', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other operating', 59), (' Other income', 57), ('Other revenue', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other operating', 47), (' Other income', 40), ('Other revenue', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Other income', 34), ('Other revenue', 33), ('other operating', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other operating', 59), (' Other income', 57), ('Other revenue', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Other income', 43), ('other operating', 40), ('Other revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4], 'score': 100, 'value': 913338.0, 'line_item_label': ['Other income'], 'note_numbers': ['5'], 'line_item_value': [913338.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Other income ', ' Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' rental revenue', 54), (' Rent ', 50), ('Other income ', 45), (' Commission revenue ', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [('Other income ', 64), (' Rent ', 50), (' rental revenue', 38), (' Commission revenue ', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' Rent ', 50), ('Other income ', 45), (' rental revenue', 38), (' Commission revenue ', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [('Other income ', 64), (' rental revenue', 31), (' Commission revenue ', 29), (' Rent ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), ('Other income ', 40), (' rental revenue', 40), (' Commission revenue ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('Other income ', 50), (' Commission revenue ', 25), (' Rent ', 25), (' rental revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' rental revenue', 54), (' Rent ', 50), ('Other income ', 45), (' Commission revenue ', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [('Other income ', 64), (' Rent ', 50), (' rental revenue', 38), (' Commission revenue ', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' Rent ', 50), ('Other income ', 45), (' rental revenue', 38), (' Commission revenue ', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [('Other income ', 64), (' rental revenue', 31), (' Commission revenue ', 29), (' Rent ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), ('Other income ', 40), (' rental revenue', 40), (' Commission revenue ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('Other income ', 50), (' Commission revenue ', 25), (' Rent ', 25), (' rental revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Other income ', 100), (' Rent ', 50), (' rental revenue', 27), (' Commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [102310.0, 8805.0, 783730.0, 18493.0, 913338.0, 0.0, 50087.0, 77893.0, 178660.0, 47902.0, 354542.0, 0.0], 'label': ['Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Interest revenue', 48), ('Finance income and costs', 29), (' Net finance costs', 28), ('other income', 24), (' Finance income and finance costs', 24), ('finance income', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Net finance costs', 39), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('other income', 25), ('finance income', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Interest revenue', 41), (' Net finance costs', 29), ('other income', 27), ('finance income', 26), (' Finance income and finance costs', 26), ('Finance income and costs', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), (' Net finance costs', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 32), ('finance income', 27), (' Interest revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('Finance income and costs', 29), (' Interest revenue', 29), ('other income', 25), ('finance income', 24), (' Finance income and finance costs', 24), (' Net finance costs', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other income', 57), (' Net finance costs', 50), (' Interest revenue', 38), ('Finance income and costs', 32), (' Finance income and finance costs', 31), ('finance income', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Interest revenue', 36), ('other income', 34), ('Finance income and costs', 31), (' Finance income and finance costs', 28), (' Net finance costs', 27), ('finance income', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other income', 57), (' Net finance costs', 50), (' Interest revenue', 38), ('Finance income and costs', 32), (' Finance income and finance costs', 31), ('finance income', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), (' Net finance costs', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 32), ('finance income', 27), (' Interest revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8, 9, 10], 'score': 100, 'value': 354542.0, 'line_item_label': ['Other income', 'Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': ['5', nan, nan, '7'], 'line_item_value': [354542.0, 0.0, 0.0, 0.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('other income', 52), (' Net finance costs', 52), ('Finance income and costs', 42), (' Finance income and finance costs', 35), ('finance income', 33), (' Interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' Interest revenue', 57), ('other income', 12), ('finance income', 11), (' Net finance costs', 10), ('Finance income and costs', 7), (' Finance income and finance costs', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs', 58), ('other income', 40), ('Finance income and costs', 40), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' Net finance costs', 44), ('other income', 35), ('Finance income and costs', 30), (' Interest revenue', 30), (' Finance income and finance costs', 25), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' Interest revenue', 48), ('Finance income and costs', 29), (' Net finance costs', 28), ('other income', 24), (' Finance income and finance costs', 24), ('finance income', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs', 22), (' Finance income and finance costs', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('other income', 42), (' Interest revenue', 38), (' Net finance costs', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 32), ('finance income', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs', 59), ('other income', 43), (' Interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Interest revenue', 31), ('other income', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Net finance costs', 100), ('Finance income and costs', 72), (' Finance income and finance costs', 60), ('finance income', 59), ('other income', 38), (' Interest revenue', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Net finance costs', 39), ('Finance income and costs', 33), (' Finance income and finance costs', 33), (' Interest revenue', 28), ('other income', 25), ('finance income', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Interest revenue', 41), (' Net finance costs', 29), ('other income', 27), ('finance income', 26), (' Finance income and finance costs', 26), ('Finance income and costs', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), (' Net finance costs', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 32), ('finance income', 27), (' Interest revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('Finance income and costs', 29), (' Interest revenue', 29), ('other income', 25), ('finance income', 24), (' Finance income and finance costs', 24), (' Net finance costs', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other income', 57), (' Net finance costs', 50), (' Interest revenue', 38), ('Finance income and costs', 32), (' Finance income and finance costs', 31), ('finance income', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('other income', 40), (' Net finance costs', 36), ('Finance income and costs', 31), (' Interest revenue', 31), (' Finance income and finance costs', 31), ('finance income', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Interest revenue', 36), ('other income', 34), ('Finance income and costs', 31), (' Finance income and finance costs', 28), (' Net finance costs', 27), ('finance income', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('other income', 57), (' Net finance costs', 50), (' Interest revenue', 38), ('Finance income and costs', 32), (' Finance income and finance costs', 31), ('finance income', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('other income', 43), (' Net finance costs', 40), ('Finance income and costs', 36), (' Finance income and finance costs', 32), ('finance income', 27), (' Interest revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 8, 9, 10], 'score': 100, 'value': 730658.0, 'line_item_label': ['Other income', 'Finance income', 'Finance costs', 'Net finance costs'], 'note_numbers': ['5', nan, nan, '7'], 'line_item_value': [913338.0, 22241.0, -113581.0, -91340.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' interest revenue', 53), ('interest ', 50), (' Interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' interest revenue', 40), (' Interest received - Bank ', 37), (' Interest received - Loan ', 37), (' Share of JV interest received/(paid) ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Bank interest ', 31), ('interest ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' Share of JV interest received/(paid) ', 56), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest received - Bank ', 44), (' Interest received - Loan ', 44), (' Interest income ', 43), (' interest revenue', 43), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 38), (' Bank Deposits - cash and cash equivalents ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' Interest received - Loan ', 41), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Interest received - Bank ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue', 33), (' Bank interest ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('interest ', 50), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue', 50), (' Bank Deposits - cash and cash equivalents ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' interest revenue', 53), ('interest ', 50), (' Interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' interest revenue', 40), (' Interest received - Bank ', 37), (' Interest received - Loan ', 37), (' Share of JV interest received/(paid) ', 37), (' Bank Deposits - cash and cash equivalents ', 37), (' Bank interest ', 31), ('interest ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' Share of JV interest received/(paid) ', 56), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest received - Bank ', 44), (' Interest received - Loan ', 44), (' Interest income ', 43), (' interest revenue', 43), ('interest ', 38), (' Bank interest ', 38), (' Sublease interest income ', 38), (' Bank Deposits - cash and cash equivalents ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' Interest received - Loan ', 41), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Interest received - Bank ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue', 33), (' Bank interest ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('interest ', 50), (' Bank interest ', 50), (' Interest income ', 50), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' interest revenue', 50), (' Bank Deposits - cash and cash equivalents ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' Interest income ', 73), (' Sublease interest income ', 73), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 45), ('interest ', 38), (' Bank Deposits - cash and cash equivalents ', 36), (' interest revenue', 36), (' Bank interest ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [('Interest expense', 50), ('interest expense', 50)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [('Interest expense', 36), ('interest expense', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' interest expense', 48), (' finance expenses ', 44), (' net finance costs ', 28), ('finance cost ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 38), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' finance expenses ', 50), (' interest expense', 47), (' net finance costs ', 29), ('finance cost ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' net finance costs ', 40), (' interest expense', 36), (' finance expenses ', 34), ('finance cost ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' net finance costs ', 21), (' interest expense', 21), ('finance cost ', 17), (' finance expenses ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' net finance costs ', 50), (' interest expense', 44), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' interest expense', 31), (' finance expenses ', 28), (' net finance costs ', 27), ('finance cost ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' net finance costs ', 50), (' interest expense', 44), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' net finance costs ', 40), (' interest expense', 36), (' finance expenses ', 34), ('finance cost ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 100, 'value': 0.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '7'], 'line_item_value': [0.0, 0.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' net finance costs ', 52), ('finance cost ', 43), (' interest expense', 37), (' finance expenses ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' finance expenses ', 32), (' interest expense', 29), ('finance cost ', 12), (' net finance costs ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' finance expenses ', 27), (' interest expense', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' net finance costs ', 44), ('finance cost ', 43), (' finance expenses ', 32), (' interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' interest expense', 48), (' finance expenses ', 44), (' net finance costs ', 28), ('finance cost ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense', 74), (' finance expenses ', 56), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' net finance costs ', 38), (' interest expense', 38), ('finance cost ', 24), (' finance expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' interest expense', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance expenses ', 57), (' interest expense', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' net finance costs ', 39), ('finance cost ', 38), (' finance expenses ', 35), (' interest expense', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' finance expenses ', 50), (' interest expense', 47), (' net finance costs ', 29), ('finance cost ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' net finance costs ', 40), (' interest expense', 36), (' finance expenses ', 34), ('finance cost ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' net finance costs ', 21), (' interest expense', 21), ('finance cost ', 17), (' finance expenses ', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' net finance costs ', 50), (' interest expense', 44), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' net finance costs ', 36), ('finance cost ', 34), (' interest expense', 31), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' interest expense', 31), (' finance expenses ', 28), (' net finance costs ', 27), ('finance cost ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' net finance costs ', 50), (' interest expense', 44), ('finance cost ', 29), (' finance expenses ', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' net finance costs ', 40), (' interest expense', 36), (' finance expenses ', 34), ('finance cost ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [9, 10], 'score': 100, 'value': -204921.0, 'line_item_label': ['Finance costs', 'Net finance costs'], 'note_numbers': [nan, '7'], 'line_item_value': [-113581.0, -91340.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' expenses ', 60), (' interest revenue ', 48), (' Impairement (expenses)/reversal ', 47), (' finance expenses', 44), (' other income and revenue ', 39), (' interest gains and losses ', 33), (' Impairment loss ', 32), (' finance income and costs ', 29), (' net of tax ', 29), (' Profit from discontinued operation ', 29), (' net of tax ', 29), (' Finance income and costs ', 29), (' Loss on revaluation of inventories', 29), (' net finance costs ', 28), (' other opertaing income ', 25), ('finance cost ', 24), (' other income ', 24), (' finance income and finance cost ', 24), (' share of profit of equity accounted investees ', 24), (' Other income ', 24), (' Share of gain/(loss) of joint venture ', 24), (' Finance income and finance costs ', 24), (' other gains/losses ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Loss on revaluation of inventories', 52), (' Profit from discontinued operation ', 46), (' other gains/losses ', 44), (' share of profit of equity accounted investees ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other opertaing income ', 41), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 39), ('finance cost ', 38), (' Impairment loss ', 38), (' finance expenses', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' other income and revenue ', 28), (' other income ', 25), (' Other income ', 25), (' expenses ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' net of tax ', 54), (' net of tax ', 54), (' finance expenses', 50), (' expenses ', 48), (' interest revenue ', 41), (' Impairement (expenses)/reversal ', 41), (' share of profit of equity accounted investees ', 37), (' Profit from discontinued operation ', 35), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Share of gain/(loss) of joint venture ', 34), (' other opertaing income ', 32), (' net finance costs ', 29), (' other gains/losses ', 29), ('finance cost ', 27), (' other income ', 27), (' Other income ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 47), (' Loss on revaluation of inventories', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' net finance costs ', 40), (' Impairement (expenses)/reversal ', 37), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance expenses', 34), (' finance income and finance cost ', 32), (' interest gains and losses ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' Impairment loss ', 31), (' interest revenue ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Impairment loss ', 58), (' interest gains and losses ', 51), (' other gains/losses ', 50), (' Loss on revaluation of inventories', 47), (' Share of gain/(loss) of joint venture ', 39), (' share of profit of equity accounted investees ', 33), (' finance income and costs ', 29), (' interest revenue ', 29), (' Finance income and costs ', 29), (' other opertaing income ', 26), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' finance income and finance cost ', 24), (' Impairement (expenses)/reversal ', 24), (' Finance income and finance costs ', 24), (' other income and revenue ', 23), (' net finance costs ', 21), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 17), (' expenses ', 11), (' finance expenses', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other opertaing income ', 63), (' other income ', 57), (' Other income ', 57), (' net finance costs ', 50), (' other gains/losses ', 50), (' other income and revenue ', 46), (' Profit from discontinued operation ', 45), (' Impairment loss ', 43), (' share of profit of equity accounted investees ', 42), (' interest gains and losses ', 41), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of gain/(loss) of joint venture ', 36), (' net of tax ', 33), (' net of tax ', 33), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), ('finance cost ', 29), (' finance expenses', 27), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' other gains/losses ', 49), (' Loss on revaluation of inventories', 47), (' Impairment loss ', 44), (' interest gains and losses ', 42), (' Share of gain/(loss) of joint venture ', 41), (' Profit from discontinued operation ', 39), (' other opertaing income ', 38), (' interest revenue ', 36), (' other income and revenue ', 35), (' other income ', 34), (' share of profit of equity accounted investees ', 34), (' Other income ', 34), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 28), (' finance income and finance cost ', 28), (' Impairement (expenses)/reversal ', 28), (' Finance income and finance costs ', 28), (' net finance costs ', 27), ('finance cost ', 24), (' expenses ', 22), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other opertaing income ', 63), (' other income ', 57), (' Other income ', 57), (' net finance costs ', 50), (' other gains/losses ', 50), (' other income and revenue ', 46), (' Profit from discontinued operation ', 45), (' Impairment loss ', 43), (' share of profit of equity accounted investees ', 42), (' interest gains and losses ', 41), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of gain/(loss) of joint venture ', 36), (' net of tax ', 33), (' net of tax ', 33), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), ('finance cost ', 29), (' finance expenses', 27), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 47), (' Loss on revaluation of inventories', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' net finance costs ', 40), (' Impairement (expenses)/reversal ', 37), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance expenses', 34), (' finance income and finance cost ', 32), (' interest gains and losses ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' Impairment loss ', 31), (' interest revenue ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 9, 10], 'score': 100, 'value': 354542.0, 'line_item_label': ['Other income', 'Finance costs', 'Net finance costs'], 'note_numbers': ['5', nan, '7'], 'line_item_value': [354542.0, 0.0, 0.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Profit from discontinued operation ', 62), (' net finance costs ', 52), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other gains/losses ', 44), ('finance cost ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' finance income and finance cost ', 35), (' interest gains and losses ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Finance income and finance costs ', 35), (' net of tax ', 32), (' net of tax ', 32), (' Impairement (expenses)/reversal ', 31), (' interest revenue ', 30), (' Impairment loss ', 26), (' finance expenses', 24), (' expenses ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [(' interest revenue ', 57), (' expenses ', 50), (' other income and revenue ', 43), (' Share of gain/(loss) of joint venture ', 35), (' finance expenses', 32), (' Impairement (expenses)/reversal ', 31), (' Loss on revaluation of inventories', 30), (' other opertaing income ', 17), (' share of profit of equity accounted investees ', 15), (' net of tax ', 15), (' net of tax ', 15), (' interest gains and losses ', 14), ('finance cost ', 12), (' other income ', 12), (' Other income ', 12), (' Impairment loss ', 12), (' Profit from discontinued operation ', 12), (' net finance costs ', 10), (' other gains/losses ', 10), (' finance income and costs ', 7), (' Finance income and costs ', 7), (' finance income and finance cost ', 6), (' Finance income and finance costs ', 6)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' other gains/losses ', 52), (' Profit from discontinued operation ', 46), (' net finance costs ', 44), ('finance cost ', 43), (' other opertaing income ', 40), (' share of profit of equity accounted investees ', 38), (' Loss on revaluation of inventories', 36), (' other income ', 35), (' Other income ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Impairment loss ', 35), (' finance expenses', 32), (' finance income and costs ', 30), (' interest revenue ', 30), (' Finance income and costs ', 30), (' interest gains and losses ', 29), (' finance income and finance cost ', 25), (' Impairement (expenses)/reversal ', 25), (' Finance income and finance costs ', 25), (' other income and revenue ', 24), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' expenses ', 60), (' interest revenue ', 48), (' Impairement (expenses)/reversal ', 47), (' finance expenses', 44), (' other income and revenue ', 39), (' interest gains and losses ', 33), (' Impairment loss ', 32), (' finance income and costs ', 29), (' net of tax ', 29), (' Profit from discontinued operation ', 29), (' net of tax ', 29), (' Finance income and costs ', 29), (' Loss on revaluation of inventories', 29), (' net finance costs ', 28), (' other opertaing income ', 25), ('finance cost ', 24), (' other income ', 24), (' finance income and finance cost ', 24), (' share of profit of equity accounted investees ', 24), (' Other income ', 24), (' Share of gain/(loss) of joint venture ', 24), (' Finance income and finance costs ', 24), (' other gains/losses ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories', 30), (' interest gains and losses ', 29), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Profit from discontinued operation ', 65), (' other income and revenue ', 55), (' other opertaing income ', 50), (' other gains/losses ', 43), (' other income ', 42), (' Other income ', 42), (' Loss on revaluation of inventories', 42), (' Share of gain/(loss) of joint venture ', 40), (' share of profit of equity accounted investees ', 39), (' net finance costs ', 38), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' finance income and costs ', 33), (' Finance income and costs ', 33), (' finance income and finance cost ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 24), (' expenses ', 21), (' net of tax ', 21), (' net of tax ', 21), (' finance expenses', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' net finance costs ', 100), ('finance cost ', 85), (' finance income and costs ', 72), (' Finance income and costs ', 72), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' finance expenses', 57), (' other income ', 38), (' interest gains and losses ', 38), (' Other income ', 38), (' Profit from discontinued operation ', 38), (' other opertaing income ', 36), (' share of profit of equity accounted investees ', 36), (' Impairement (expenses)/reversal ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income and revenue ', 32), (' Loss on revaluation of inventories', 28), (' other gains/losses ', 27), (' interest revenue ', 27), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 23), (' expenses ', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Loss on revaluation of inventories', 52), (' Profit from discontinued operation ', 46), (' other gains/losses ', 44), (' share of profit of equity accounted investees ', 43), (' net of tax ', 43), (' net of tax ', 43), (' other opertaing income ', 41), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 39), ('finance cost ', 38), (' Impairment loss ', 38), (' finance expenses', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' interest gains and losses ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' other income and revenue ', 28), (' other income ', 25), (' Other income ', 25), (' expenses ', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' net of tax ', 54), (' net of tax ', 54), (' finance expenses', 50), (' expenses ', 48), (' interest revenue ', 41), (' Impairement (expenses)/reversal ', 41), (' share of profit of equity accounted investees ', 37), (' Profit from discontinued operation ', 35), (' Loss on revaluation of inventories', 35), (' interest gains and losses ', 34), (' other income and revenue ', 34), (' Share of gain/(loss) of joint venture ', 34), (' other opertaing income ', 32), (' net finance costs ', 29), (' other gains/losses ', 29), ('finance cost ', 27), (' other income ', 27), (' Other income ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance income and costs ', 25), (' Finance income and costs ', 25), (' Impairment loss ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 47), (' Loss on revaluation of inventories', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' net finance costs ', 40), (' Impairement (expenses)/reversal ', 37), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance expenses', 34), (' finance income and finance cost ', 32), (' interest gains and losses ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' Impairment loss ', 31), (' interest revenue ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Impairment loss ', 58), (' interest gains and losses ', 51), (' other gains/losses ', 50), (' Loss on revaluation of inventories', 47), (' Share of gain/(loss) of joint venture ', 39), (' share of profit of equity accounted investees ', 33), (' finance income and costs ', 29), (' interest revenue ', 29), (' Finance income and costs ', 29), (' other opertaing income ', 26), (' other income ', 25), (' Other income ', 25), (' Profit from discontinued operation ', 25), (' finance income and finance cost ', 24), (' Impairement (expenses)/reversal ', 24), (' Finance income and finance costs ', 24), (' other income and revenue ', 23), (' net finance costs ', 21), (' net of tax ', 20), (' net of tax ', 20), ('finance cost ', 17), (' expenses ', 11), (' finance expenses', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other opertaing income ', 63), (' other income ', 57), (' Other income ', 57), (' net finance costs ', 50), (' other gains/losses ', 50), (' other income and revenue ', 46), (' Profit from discontinued operation ', 45), (' Impairment loss ', 43), (' share of profit of equity accounted investees ', 42), (' interest gains and losses ', 41), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of gain/(loss) of joint venture ', 36), (' net of tax ', 33), (' net of tax ', 33), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), ('finance cost ', 29), (' finance expenses', 27), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' other gains/losses ', 56), (' other opertaing income ', 52), (' Loss on revaluation of inventories', 49), (' share of profit of equity accounted investees ', 47), (' Share of gain/(loss) of joint venture ', 46), (' Profit from discontinued operation ', 43), (' other income ', 40), (' Other income ', 40), (' other income and revenue ', 39), (' net finance costs ', 36), (' Impairement (expenses)/reversal ', 36), ('finance cost ', 34), (' Impairment loss ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' interest revenue ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 27), (' interest gains and losses ', 26), (' net of tax ', 26), (' net of tax ', 26), (' expenses ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' other gains/losses ', 49), (' Loss on revaluation of inventories', 47), (' Impairment loss ', 44), (' interest gains and losses ', 42), (' Share of gain/(loss) of joint venture ', 41), (' Profit from discontinued operation ', 39), (' other opertaing income ', 38), (' interest revenue ', 36), (' other income and revenue ', 35), (' other income ', 34), (' share of profit of equity accounted investees ', 34), (' Other income ', 34), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 28), (' finance income and finance cost ', 28), (' Impairement (expenses)/reversal ', 28), (' Finance income and finance costs ', 28), (' net finance costs ', 27), ('finance cost ', 24), (' expenses ', 22), (' net of tax ', 22), (' net of tax ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' other opertaing income ', 63), (' other income ', 57), (' Other income ', 57), (' net finance costs ', 50), (' other gains/losses ', 50), (' other income and revenue ', 46), (' Profit from discontinued operation ', 45), (' Impairment loss ', 43), (' share of profit of equity accounted investees ', 42), (' interest gains and losses ', 41), (' interest revenue ', 38), (' Impairement (expenses)/reversal ', 38), (' Share of gain/(loss) of joint venture ', 36), (' net of tax ', 33), (' net of tax ', 33), (' finance income and costs ', 32), (' Finance income and costs ', 32), (' Loss on revaluation of inventories', 32), (' finance income and finance cost ', 31), (' Finance income and finance costs ', 31), ('finance cost ', 29), (' finance expenses', 27), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Share of gain/(loss) of joint venture ', 47), (' Loss on revaluation of inventories', 46), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' net finance costs ', 40), (' Impairement (expenses)/reversal ', 37), (' finance income and costs ', 36), (' Finance income and costs ', 36), (' finance expenses', 34), (' finance income and finance cost ', 32), (' interest gains and losses ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' Impairment loss ', 31), (' interest revenue ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 9, 10], 'score': 100, 'value': 708417.0, 'line_item_label': ['Other income', 'Finance costs', 'Net finance costs'], 'note_numbers': ['5', nan, '7'], 'line_item_value': [913338.0, -113581.0, -91340.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' net foreign exchange gain ', 79), (' foreign exchange gain ', 75), (' net foreign exchange (loss)/gain ', 72), (' net foreign exchange gains/(losses) ', 72), (' Net other foreign exchange (losses)/gains ', 59), (' net of tax ', 57), (' insurance proceeds ', 55), (' Investment in joint venture ', 53), (' government grants ', 50), (' Loss on loan refinancing ', 50), (' margin charge income ', 50), (' net ppe disposal (loss)/gain ', 50), (' Arising from inventory of cranes ', 48), (' effective portion of changes in fair value of cash flow ', 48), (' Arising from inventory of spare parts ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' Power purchase agreement unrelaised gain ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Net loss on disposal of property ', 42), (' sundry income ', 42), (' other revenue', 42), (' Interest on unwinding of discount in provisions ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Power purchase agreement realised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Share of gain/(loss) of joint venture ', 36), (' Asset impairment ', 33), (' paid by customers - at amortised cost ', 33), (' profit from discontinued operation ', 33), (' Loss on sale of disposal of assets ', 32), (' Profit on sale of assets ', 29), (' Impairment loss ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' share of jv income ', 64), (' dividend from other parties ', 58), (' Sub-lease rental income ', 53), (' quota lease income ', 50), (' other revenue', 50), (' Interest on unwinding of discount in provisions ', 47), (' secondment income (tw recovery) ', 47), (' margin charge income ', 44), (' net of tax ', 43), (' Arising from inventory of cranes ', 42), (' foreign exchange gain ', 42), (' government grants ', 42), (' net foreign exchange gain ', 42), (' net foreign exchange gains/(losses) ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 42), (' other ', 40), (' plant and equipment ', 40), (' Loss on loan refinancing ', 39), (' Investment in joint venture ', 38), (' Arising from inventory of spare parts ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net foreign exchange (loss)/gain ', 37), (' Net loss on disposal of property ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' net ppe disposal (loss)/gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Share of gain/(loss) of joint venture ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Asset impairment ', 33), (' effective portion of changes in fair value of cash flow ', 32), (' Loss on sale of disposal of assets ', 32), (' paid by customers - at amortised cost ', 32), (' Power purchase agreement realised gain ', 32), ('Accretion expense ', 31), (' Impairment loss ', 27), (' Profit on sale of assets ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' insurance proceeds ', 100), (' Interest on unwinding of discount in provisions ', 56), (' net gain / loss on disposal of property plant and equipment ', 56), (' Net loss on disposal of property ', 56), (' secondment income (tw recovery) ', 56), (' Arising from inventory of spare parts ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' profit from discontinued operation ', 50), (' other income ', 45), (' Arising from inventory of cranes ', 44), (' Investment in joint venture ', 44), (' Loss on sale of disposal of assets ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' net ppe disposal (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Power purchase agreement realised gain ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' Share of gain/(loss) of joint venture ', 44), (' net of tax ', 43), (' Asset impairment ', 42), (' government grants ', 42), (' sundry income ', 42), (' other revenue', 42), (' other ', 40), (' dividend from other parties ', 38), (' effective portion of changes in fair value of cash flow ', 38), (' foreign exchange gain ', 38), (' japan recoveries ', 38), (' Loss on loan refinancing ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' commission revenue ', 36), (' Impairment loss ', 36), (' share of jv income ', 36), (' plant and equipment ', 33), ('Accretion expense ', 31), (' margin charge income ', 31), (' Profit on sale of assets ', 31), (' Sub-lease rental income ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [(' sundry income ', 100), (' other income ', 64), (' share of jv income ', 64), (' quota lease income ', 56), (' Interest on unwinding of discount in provisions ', 53), (' margin charge income ', 53), (' Power purchase agreement unrelaised gain ', 53), (' secondment income (tw recovery) ', 53), (' Sub-lease rental income ', 53), (' Arising from inventory of cranes ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' Remuneration from services linked to newly acquired entities ', 47), (' insurance proceeds ', 45), (' net of tax ', 43), (' Arising from inventory of spare parts ', 41), (' Loss on loan refinancing ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' net foreign exchange (loss)/gain ', 41), (' net foreign exchange gain ', 41), (' net foreign exchange gains/(losses) ', 41), (' Net loss on disposal of property ', 41), (' Net other foreign exchange (losses)/gains ', 41), (' net ppe disposal (loss)/gain ', 41), (' paid by customers - at amortised cost ', 41), (' Power purchase agreement realised gain ', 41), (' profit from discontinued operation ', 41), (' other ', 40), (' plant and equipment ', 40), (' dividend from other parties ', 35), (' effective portion of changes in fair value of cash flow ', 35), (' foreign exchange gain ', 35), (' Investment in joint venture ', 35), (' Loss on sale of disposal of assets ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Asset impairment ', 33), (' government grants ', 33), (' other revenue', 33), (' commission revenue ', 29), (' japan recoveries ', 29), (' Impairment loss ', 27), (' Profit on sale of assets ', 24), ('Accretion expense ', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net (loss)/profit on disposal of non-current assets ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Sub-lease rental income ', 50), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' dividend from other parties ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' government grants ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Investment in joint venture ', 40), (' Loss on loan refinancing ', 40), (' Loss on sale of disposal of assets ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net loss on disposal of property ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' other income ', 40), (' paid by customers - at amortised cost ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' profit from discontinued operation ', 40), (' Profit on sale of assets ', 40), (' quota lease income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' secondment income (tw recovery) ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Asset impairment ', 30), (' foreign exchange gain ', 30), (' insurance proceeds ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' plant and equipment ', 30), (' share of jv income ', 30), (' sundry income ', 30), (' other revenue', 30), (' Impairment loss ', 21), ('Accretion expense ', 20), (' commission revenue ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [(' other miscellaneous - net (loss)/gain ', 75), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' dividend from other parties ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' foreign exchange gain ', 50), (' insurance proceeds ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Investment in joint venture ', 50), (' japan recoveries ', 50), (' Loss on loan refinancing ', 50), (' margin charge income ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net foreign exchange (loss)/gain ', 50), (' net foreign exchange gain ', 50), (' net foreign exchange gains/(losses) ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net loss on disposal of property ', 50), (' net of tax ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' net ppe disposal (loss)/gain ', 50), (' other ', 50), (' other income ', 50), (' plant and equipment ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' profit from discontinued operation ', 50), (' quota lease income ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' Share of gain/(loss) of joint venture ', 50), (' share of jv income ', 50), (' Sub-lease rental income ', 50), (' sundry income ', 50), ('Accretion expense ', 25), (' Asset impairment ', 25), (' commission revenue ', 25), (' government grants ', 25), (' Impairment loss ', 25), (' Loss on sale of disposal of assets ', 25), (' paid by customers - at amortised cost ', 25), (' Profit on sale of assets ', 25), (' secondment income (tw recovery) ', 25), (' other revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none net foreign currency gain , res_fuzz_match = [(' net foreign exchange gain ', 79), (' foreign exchange gain ', 75), (' net foreign exchange (loss)/gain ', 72), (' net foreign exchange gains/(losses) ', 72), (' Net other foreign exchange (losses)/gains ', 59), (' net of tax ', 57), (' insurance proceeds ', 55), (' Investment in joint venture ', 53), (' government grants ', 50), (' Loss on loan refinancing ', 50), (' margin charge income ', 50), (' net ppe disposal (loss)/gain ', 50), (' Arising from inventory of cranes ', 48), (' effective portion of changes in fair value of cash flow ', 48), (' Arising from inventory of spare parts ', 46), (' other miscellaneous - net (loss)/gain ', 46), (' other income ', 45), (' Power purchase agreement unrelaised gain ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Net loss on disposal of property ', 42), (' sundry income ', 42), (' other revenue', 42), (' Interest on unwinding of discount in provisions ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' Power purchase agreement realised gain ', 41), (' dividend from other parties ', 40), (' other ', 40), (' plant and equipment ', 40), (' Sub-lease rental income ', 40), ('Accretion expense ', 38), (' net gain / loss on disposal of property plant and equipment ', 38), (' quota lease income ', 38), (' secondment income (tw recovery) ', 38), (' Share of gain/(loss) of joint venture ', 36), (' Asset impairment ', 33), (' paid by customers - at amortised cost ', 33), (' profit from discontinued operation ', 33), (' Loss on sale of disposal of assets ', 32), (' Profit on sale of assets ', 29), (' Impairment loss ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none dividend income , res_fuzz_match = [(' sundry income ', 67), (' other income ', 64), (' share of jv income ', 64), (' dividend from other parties ', 58), (' Sub-lease rental income ', 53), (' quota lease income ', 50), (' other revenue', 50), (' Interest on unwinding of discount in provisions ', 47), (' secondment income (tw recovery) ', 47), (' margin charge income ', 44), (' net of tax ', 43), (' Arising from inventory of cranes ', 42), (' foreign exchange gain ', 42), (' government grants ', 42), (' net foreign exchange gain ', 42), (' net foreign exchange gains/(losses) ', 42), (' net gain / loss on disposal of property plant and equipment ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 42), (' other ', 40), (' plant and equipment ', 40), (' Loss on loan refinancing ', 39), (' Investment in joint venture ', 38), (' Arising from inventory of spare parts ', 37), (' net (loss)/profit on disposal of non-current assets ', 37), (' net foreign exchange (loss)/gain ', 37), (' Net loss on disposal of property ', 37), (' Net other foreign exchange (losses)/gains ', 37), (' net ppe disposal (loss)/gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Share of gain/(loss) of joint venture ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Asset impairment ', 33), (' effective portion of changes in fair value of cash flow ', 32), (' Loss on sale of disposal of assets ', 32), (' paid by customers - at amortised cost ', 32), (' Power purchase agreement realised gain ', 32), ('Accretion expense ', 31), (' Impairment loss ', 27), (' Profit on sale of assets ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none insurance proceeds , res_fuzz_match = [(' insurance proceeds ', 100), (' Interest on unwinding of discount in provisions ', 56), (' net gain / loss on disposal of property plant and equipment ', 56), (' Net loss on disposal of property ', 56), (' secondment income (tw recovery) ', 56), (' Arising from inventory of spare parts ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' profit from discontinued operation ', 50), (' other income ', 45), (' Arising from inventory of cranes ', 44), (' Investment in joint venture ', 44), (' Loss on sale of disposal of assets ', 44), (' net foreign exchange (loss)/gain ', 44), (' net foreign exchange gain ', 44), (' net foreign exchange gains/(losses) ', 44), (' Net other foreign exchange (losses)/gains ', 44), (' net ppe disposal (loss)/gain ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Power purchase agreement realised gain ', 44), (' Power purchase agreement unrelaised gain ', 44), (' Remuneration from services linked to newly acquired entities ', 44), (' Share of gain/(loss) of joint venture ', 44), (' net of tax ', 43), (' Asset impairment ', 42), (' government grants ', 42), (' sundry income ', 42), (' other revenue', 42), (' other ', 40), (' dividend from other parties ', 38), (' effective portion of changes in fair value of cash flow ', 38), (' foreign exchange gain ', 38), (' japan recoveries ', 38), (' Loss on loan refinancing ', 38), (' paid by customers - at amortised cost ', 38), (' quota lease income ', 38), (' commission revenue ', 36), (' Impairment loss ', 36), (' share of jv income ', 36), (' plant and equipment ', 33), ('Accretion expense ', 31), (' margin charge income ', 31), (' Profit on sale of assets ', 31), (' Sub-lease rental income ', 31)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none sundry income , res_fuzz_match = [(' sundry income ', 100), (' other income ', 64), (' share of jv income ', 64), (' quota lease income ', 56), (' Interest on unwinding of discount in provisions ', 53), (' margin charge income ', 53), (' Power purchase agreement unrelaised gain ', 53), (' secondment income (tw recovery) ', 53), (' Sub-lease rental income ', 53), (' Arising from inventory of cranes ', 47), (' other miscellaneous - net (loss)/gain ', 47), (' Remuneration from services linked to newly acquired entities ', 47), (' insurance proceeds ', 45), (' net of tax ', 43), (' Arising from inventory of spare parts ', 41), (' Loss on loan refinancing ', 41), (' net (loss)/profit on disposal of non-current assets ', 41), (' net foreign exchange (loss)/gain ', 41), (' net foreign exchange gain ', 41), (' net foreign exchange gains/(losses) ', 41), (' Net loss on disposal of property ', 41), (' Net other foreign exchange (losses)/gains ', 41), (' net ppe disposal (loss)/gain ', 41), (' paid by customers - at amortised cost ', 41), (' Power purchase agreement realised gain ', 41), (' profit from discontinued operation ', 41), (' other ', 40), (' plant and equipment ', 40), (' dividend from other parties ', 35), (' effective portion of changes in fair value of cash flow ', 35), (' foreign exchange gain ', 35), (' Investment in joint venture ', 35), (' Loss on sale of disposal of assets ', 35), (' net gain / loss on disposal of property plant and equipment ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Asset impairment ', 33), (' government grants ', 33), (' other revenue', 33), (' commission revenue ', 29), (' japan recoveries ', 29), (' Impairment loss ', 27), (' Profit on sale of assets ', 24), ('Accretion expense ', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net (loss)/profit on disposal of non-current assets ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Sub-lease rental income ', 50), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' dividend from other parties ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' government grants ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Investment in joint venture ', 40), (' Loss on loan refinancing ', 40), (' Loss on sale of disposal of assets ', 40), (' net foreign exchange (loss)/gain ', 40), (' net foreign exchange gain ', 40), (' net foreign exchange gains/(losses) ', 40), (' Net loss on disposal of property ', 40), (' net ppe disposal (loss)/gain ', 40), (' other ', 40), (' other income ', 40), (' paid by customers - at amortised cost ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' profit from discontinued operation ', 40), (' Profit on sale of assets ', 40), (' quota lease income ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' secondment income (tw recovery) ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Asset impairment ', 30), (' foreign exchange gain ', 30), (' insurance proceeds ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' plant and equipment ', 30), (' share of jv income ', 30), (' sundry income ', 30), (' other revenue', 30), (' Impairment loss ', 21), ('Accretion expense ', 20), (' commission revenue ', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = none 6 , res_fuzz_match = [(' other miscellaneous - net (loss)/gain ', 75), (' Arising from inventory of cranes ', 50), (' Arising from inventory of spare parts ', 50), (' dividend from other parties ', 50), (' effective portion of changes in fair value of cash flow ', 50), (' foreign exchange gain ', 50), (' insurance proceeds ', 50), (' Interest on unwinding of discount in provisions ', 50), (' Investment in joint venture ', 50), (' japan recoveries ', 50), (' Loss on loan refinancing ', 50), (' margin charge income ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net foreign exchange (loss)/gain ', 50), (' net foreign exchange gain ', 50), (' net foreign exchange gains/(losses) ', 50), (' net gain / loss on disposal of property plant and equipment ', 50), (' Net loss on disposal of property ', 50), (' net of tax ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' net ppe disposal (loss)/gain ', 50), (' other ', 50), (' other income ', 50), (' plant and equipment ', 50), (' Power purchase agreement realised gain ', 50), (' Power purchase agreement unrelaised gain ', 50), (' profit from discontinued operation ', 50), (' quota lease income ', 50), (' Remuneration from services linked to newly acquired entities ', 50), (' Share of gain/(loss) of joint venture ', 50), (' share of jv income ', 50), (' Sub-lease rental income ', 50), (' sundry income ', 50), ('Accretion expense ', 25), (' Asset impairment ', 25), (' commission revenue ', 25), (' government grants ', 25), (' Impairment loss ', 25), (' Loss on sale of disposal of assets ', 25), (' paid by customers - at amortised cost ', 25), (' Profit on sale of assets ', 25), (' secondment income (tw recovery) ', 25), (' other revenue', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_rows = other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 76), (' margin charge income ', 73), (' other miscellaneous - net (loss)/gain ', 73), (' dividend from other parties ', 64), (' Net other foreign exchange (losses)/gains ', 64), (' quota lease income ', 64), (' secondment income (tw recovery) ', 64), (' Sub-lease rental income ', 64), (' sundry income ', 64), (' other revenue', 64), (' Arising from inventory of spare parts ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' foreign exchange gain ', 45), (' government grants ', 45), (' Interest on unwinding of discount in provisions ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' Power purchase agreement realised gain ', 45), (' Power purchase agreement unrelaised gain ', 45), (' profit from discontinued operation ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Share of gain/(loss) of joint venture ', 45), (' Arising from inventory of cranes ', 36), (' Asset impairment ', 36), (' Investment in joint venture ', 36), (' japan recoveries ', 36), (' Loss on loan refinancing ', 36), (' Loss on sale of disposal of assets ', 36), (' net foreign exchange (loss)/gain ', 36), (' net foreign exchange gain ', 36), (' net gain / loss on disposal of property plant and equipment ', 36), (' Net loss on disposal of property ', 36), (' net ppe disposal (loss)/gain ', 36), (' Profit on sale of assets ', 36), (' net of tax ', 29), ('Accretion expense ', 27), (' Impairment loss ', 27), (' insurance proceeds ', 27), (' plant and equipment ', 27), (' commission revenue ', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 2, 3, 3, 4, 5, 6, 7, 8, 8, 9, 9, 10, 11], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [102310.0, 8805.0, 783730.0, 783730.0, 18493.0, 18493.0, 913338.0, 0.0, 50087.0, 77893.0, 178660.0, 178660.0, 47902.0, 47902.0, 354542.0, 0.0], 'label': ['Other income', 'Other income', 'None Insurance proceeds', 'Other income', 'None Sundry income', 'Other income', 'Other income', 'Other income', 'Other income', 'Other income', 'None Insurance proceeds', 'Other income', 'None Sundry income', 'Other income', 'Other income', 'Other income'], 'year': [], 'colname_found': ['columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns']}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['Accretion expense ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Asset impairment ', ' commission revenue ', ' dividend from other parties ', ' effective portion of changes in fair value of cash flow ', ' foreign exchange gain ', ' government grants ', ' Impairment loss ', ' insurance proceeds ', ' Interest on unwinding of discount in provisions ', ' Investment in joint venture ', ' japan recoveries ', ' Loss on loan refinancing ', ' Loss on sale of disposal of assets ', ' margin charge income ', ' net (loss)/profit on disposal of non-current assets ', ' net foreign exchange (loss)/gain ', ' net foreign exchange gain ', ' net foreign exchange gains/(losses) ', ' net gain / loss on disposal of property plant and equipment ', ' Net loss on disposal of property ', ' net of tax ', ' Net other foreign exchange (losses)/gains ', ' net ppe disposal (loss)/gain ', ' other ', ' other income ', ' other miscellaneous - net (loss)/gain ', ' paid by customers - at amortised cost ', ' plant and equipment ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' profit from discontinued operation ', ' Profit on sale of assets ', ' quota lease income ', ' Remuneration from services linked to newly acquired entities ', ' secondment income (tw recovery) ', ' Share of gain/(loss) of joint venture ', ' share of jv income ', ' Sub-lease rental income ', ' sundry income ', ' other revenue'] , match_type = partial , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('NULL', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('NULL', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('NULL', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('NULL', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('NULL', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('NULL', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('NULL', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('NULL', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' tax (expense)/benefit', 62), (' income tax benefit/(expense)', 53), ('deferred tax', 43), ('prior year ', 42), (' income tax expense', 40), ('earlier year', 38), ('amount transferred to retained earnings', 34), ('provision for taxation previous year', 33), ('current tax', 32), (' income tax benefit', 32), ('minimum alternate tax credit entitlement', 30), (' income tax', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('provision for taxation previous year', 56), (' income tax benefit/(expense)', 49), ('deferred tax', 47), (' income tax benefit', 47), (' tax (expense)/benefit', 46), ('current tax', 44), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 38), ('earlier year', 36), ('amount transferred to retained earnings', 33), (' income tax', 33), ('prior year ', 32)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' tax (expense)/benefit', 97), (' income tax benefit/(expense)', 84), (' income tax benefit', 72), (' income tax expense', 57), ('deferred tax', 50), ('current tax', 47), ('minimum alternate tax credit entitlement', 47), (' income tax', 43), ('amount transferred to retained earnings', 39), ('provision for taxation previous year', 38), ('earlier year', 32), ('prior year ', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 46), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), (' income tax', 33), ('current tax', 31), (' tax (expense)/benefit', 31), ('deferred tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), (' income tax benefit', 27), ('prior year ', 26), (' tax (expense)/benefit', 26), ('current tax', 25), (' income tax benefit/(expense)', 22), ('deferred tax', 18), (' income tax', 18), (' income tax expense', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('prior year ', 44), ('earlier year', 41), (' income tax', 38), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('provision for taxation previous year', 35), (' income tax benefit', 35), (' tax (expense)/benefit', 34), ('deferred tax', 31), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), (' income tax benefit/(expense)', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 44), ('minimum alternate tax credit entitlement', 42), (' tax (expense)/benefit', 42), ('provision for taxation previous year', 41), (' income tax expense', 39), (' income tax benefit', 38), (' income tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 34), ('prior year ', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('prior year ', 44), ('earlier year', 41), (' income tax', 38), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('provision for taxation previous year', 35), (' income tax benefit', 35), (' tax (expense)/benefit', 34), ('deferred tax', 31), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), (' income tax benefit/(expense)', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 46), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), (' income tax', 33), ('current tax', 31), (' tax (expense)/benefit', 31), ('deferred tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 97, 'value': 5587.0, 'line_item_label': ['Tax (expense/benefift'], 'note_numbers': ['8'], 'line_item_value': [5587.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('amount transferred to retained earnings', 41), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), ('earlier year', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax expense', 29), (' income tax', 29), (' income tax benefit/(expense)', 28), ('deferred tax', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('current tax', 35), ('earlier year', 33), ('deferred tax', 27), (' income tax expense', 27), ('minimum alternate tax credit entitlement', 26), (' income tax benefit', 26), ('prior year ', 25), (' tax (expense)/benefit', 25), ('provision for taxation previous year', 23), (' income tax benefit/(expense)', 20), ('amount transferred to retained earnings', 18), (' income tax', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('provision for taxation previous year', 39), ('prior year ', 36), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('current tax', 26), ('amount transferred to retained earnings', 26), ('earlier year', 25), ('minimum alternate tax credit entitlement', 23), (' income tax benefit/(expense)', 22), (' income tax benefit', 21), (' tax (expense)/benefit', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [(' tax (expense)/benefit', 62), (' income tax benefit/(expense)', 53), ('deferred tax', 43), ('prior year ', 42), (' income tax expense', 40), ('earlier year', 38), ('amount transferred to retained earnings', 34), ('provision for taxation previous year', 33), ('current tax', 32), (' income tax benefit', 32), ('minimum alternate tax credit entitlement', 30), (' income tax', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('amount transferred to retained earnings', 37), ('provision for taxation previous year', 35), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), ('deferred tax', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('current tax', 30), (' tax (expense)/benefit', 30), (' income tax expense', 26), (' income tax benefit/(expense)', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' income tax expense', 45), (' income tax benefit', 44), ('amount transferred to retained earnings', 43), (' income tax', 42), (' income tax benefit/(expense)', 36), ('current tax', 31), ('minimum alternate tax credit entitlement', 30), (' tax (expense)/benefit', 30), ('provision for taxation previous year', 27), ('deferred tax', 25), ('prior year ', 24), ('earlier year', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('provision for taxation previous year', 56), (' income tax benefit/(expense)', 49), ('deferred tax', 47), (' income tax benefit', 47), (' tax (expense)/benefit', 46), ('current tax', 44), (' income tax expense', 43), ('minimum alternate tax credit entitlement', 38), ('earlier year', 36), ('amount transferred to retained earnings', 33), (' income tax', 33), ('prior year ', 32)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' tax (expense)/benefit', 97), (' income tax benefit/(expense)', 84), (' income tax benefit', 72), (' income tax expense', 57), ('deferred tax', 50), ('current tax', 47), ('minimum alternate tax credit entitlement', 47), (' income tax', 43), ('amount transferred to retained earnings', 39), ('provision for taxation previous year', 38), ('earlier year', 32), ('prior year ', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 46), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), (' income tax', 33), ('current tax', 31), (' tax (expense)/benefit', 31), ('deferred tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('earlier year', 32), ('minimum alternate tax credit entitlement', 31), ('amount transferred to retained earnings', 30), ('provision for taxation previous year', 29), (' income tax benefit', 27), ('prior year ', 26), (' tax (expense)/benefit', 26), ('current tax', 25), (' income tax benefit/(expense)', 22), ('deferred tax', 18), (' income tax', 18), (' income tax expense', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('prior year ', 44), ('earlier year', 41), (' income tax', 38), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('provision for taxation previous year', 35), (' income tax benefit', 35), (' tax (expense)/benefit', 34), ('deferred tax', 31), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), (' income tax benefit/(expense)', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 64), ('earlier year', 50), ('prior year ', 47), ('amount transferred to retained earnings', 35), ('current tax', 34), (' income tax benefit/(expense)', 33), (' tax (expense)/benefit', 33), ('minimum alternate tax credit entitlement', 32), ('deferred tax', 30), (' income tax expense', 30), (' income tax benefit', 29), (' income tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' income tax benefit/(expense)', 44), ('minimum alternate tax credit entitlement', 42), (' tax (expense)/benefit', 42), ('provision for taxation previous year', 41), (' income tax expense', 39), (' income tax benefit', 38), (' income tax', 36), ('amount transferred to retained earnings', 35), ('current tax', 34), ('prior year ', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('prior year ', 44), ('earlier year', 41), (' income tax', 38), ('amount transferred to retained earnings', 36), (' income tax expense', 36), ('provision for taxation previous year', 35), (' income tax benefit', 35), (' tax (expense)/benefit', 34), ('deferred tax', 31), ('current tax', 29), ('minimum alternate tax credit entitlement', 29), (' income tax benefit/(expense)', 29)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('provision for taxation previous year', 49), (' income tax expense', 46), (' income tax benefit', 42), (' income tax benefit/(expense)', 41), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('earlier year', 35), ('minimum alternate tax credit entitlement', 33), (' income tax', 33), ('current tax', 31), (' tax (expense)/benefit', 31), ('deferred tax', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [12], 'score': 97, 'value': -1355026.0, 'line_item_label': ['Tax (expense/benefift'], 'note_numbers': ['8'], 'line_item_value': [-1355026.0]}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-24 12:24:14+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('share of', 36), ('share in', 36)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('share of', 24), ('share in', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('share of', 30), ('share in', 30)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('share of', 28), ('share in', 28)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('share of', 27), ('share in', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('share of', 18), ('share in', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('exceptional ', 40), (' prior period ', 38), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 42), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 43), ('exceptional ', 32), (' prior period ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' prior period ', 34), (' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 29), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' prior period ', 34), (' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 33), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('exceptional ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 19), (' prior period ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [(' prior period ', 50), (' Actuarial gains / (losses) on retirement benefit obligation', 33), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('exceptional ', 40), (' prior period ', 38), (' Actuarial gains / (losses) on retirement benefit obligation', 27)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 35), ('exceptional ', 21)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), ('exceptional ', 29), (' prior period ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 45), (' prior period ', 42), ('exceptional ', 22)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 43), ('exceptional ', 32), (' prior period ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 32), ('exceptional ', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' prior period ', 34), (' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 39), ('exceptional ', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 29), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [(' prior period ', 34), (' Actuarial gains / (losses) on retirement benefit obligation', 30), ('exceptional ', 26)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 49), (' prior period ', 31), ('exceptional ', 17)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-24 12:24:14+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-24 12:24:14+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('NULL', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('NULL', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('NULL', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('NULL', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-24 12:24:14+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-24 12:24:14+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = continuing operations , res_fuzz_match = [('NULL', 25)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = revenue , res_fuzz_match = [('NULL', 40)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = gross profit , res_fuzz_match = [('NULL', 0)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = depreciation expense , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = results from operating activities , res_fuzz_match = [('NULL', 15)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = net finance costs , res_fuzz_match = [('NULL', 11)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) before tax , res_fuzz_match = [('NULL', 8)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = tax (expense/benefift , res_fuzz_match = [('NULL', 9)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = loss attributable to: , res_fuzz_match = [('NULL', 24)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = profit/(loss) for the year , res_fuzz_match = [('NULL', 7)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive loss attributable to: , res_fuzz_match = [('NULL', 18)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = owners of the company , res_fuzz_match = [('NULL', 10)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - txt_particular = total comprehensive income/(loss) for the year , res_fuzz_match = [('NULL', 14)]
2023-08-24 12:24:14+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
