2023-08-28 10:42:14+0530 - sLogger - DEBUG - module: Classification_service , File:wrapper.py,  function: Save_file
2023-08-28 10:42:14+0530 - sLogger - DEBUG - {'fileid': 'd91d4c11-d5ab-49d6-80ca-d61fd850bb18', 'filename': 'FY22 NMA Financial report_Signed.pdf', 'filepath': '/home/mgsuser01/AI/CRM_SYD/UAT_app/classification/../FILE_DB/FILES/FY22 NMA Financial report_Signed.pdf', 'status': 'Processing'}
2023-08-28 10:42:14+0530 - sLogger - DEBUG - save file completed
2023-08-28 10:42:14+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: process_pdf
2023-08-28 10:42:14+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __get_basic_info_file
2023-08-28 10:42:14+0530 - sLogger - DEBUG - __get_basic_info_file() completed.
2023-08-28 10:42:14+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __save_basic_info_file_db
2023-08-28 10:42:14+0530 - sLogger - DEBUG - __save_basic_info_file_db() completed. and file data (page_cnt,region) updated in db
2023-08-28 10:42:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:14+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:16+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:16+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:19+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:19+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:26+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:26+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:33+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:33+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:33+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:33+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:33+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:37+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:37+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:37+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:37+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:37+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:42+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:42+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:42+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:42+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:42+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:46+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:46+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:48+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:48+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:48+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:48+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:48+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:42:56+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:42:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:42:56+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:42:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:42:56+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:42:56+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:42:56+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:04+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:04+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:04+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:04+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:04+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:12+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:12+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:19+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:19+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:28+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:28+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:39+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:39+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:47+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:47+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:43:55+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:43:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:43:55+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:43:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:43:55+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:43:55+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:43:55+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:03+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:03+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:03+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:03+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:03+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:12+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:12+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:12+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:12+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:12+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:19+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:19+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:19+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:19+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:19+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:27+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:27+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:34+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:34+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:34+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:34+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:34+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:43+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:43+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:43+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:43+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:43+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:44:58+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:44:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:44:58+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:44:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:44:58+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:44:58+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:44:58+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:06+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:07+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:07+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:14+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:14+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:14+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:14+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:14+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:18+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:18+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:18+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:18+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:18+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:22+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:22+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:26+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:26+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:26+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:26+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:26+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:31+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:31+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:31+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:31+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:31+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:39+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:39+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:39+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:39+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:39+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:44+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:44+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:44+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:44+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:44+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:47+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:47+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:47+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:47+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:47+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:52+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:52+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:52+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:52+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:52+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:45:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:45:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:45:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:45:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:45:57+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:45:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:45:57+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:02+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:06+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:06+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:06+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:06+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:06+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:10+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:10+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:10+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:10+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:10+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:15+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:15+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:15+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:15+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:15+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:22+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:22+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:22+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:22+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:22+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:27+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:27+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:27+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:27+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:27+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:36+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:36+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:36+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:36+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:36+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:41+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:41+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:41+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:41+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:41+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:46+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:46+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:46+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:46+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:46+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:51+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:51+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:51+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:51+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:51+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:46:57+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:46:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:46:57+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:46:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:46:57+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:46:57+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:46:57+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:02+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:02+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:02+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:02+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:47:02+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:05+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:05+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:05+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:05+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:47:05+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:08+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:08+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:08+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:08+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:47:08+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:16+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:16+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:16+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:16+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:47:16+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:24+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:24+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:24+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:24+0530 - sLogger - DEBUG - module: Classification_service , submodule: Standard_OCR, File:OCR.py,  function: get_data
2023-08-28 10:47:24+0530 - sLogger - DEBUG - filetype: pdf
2023-08-28 10:47:28+0530 - sLogger - DEBUG - stadnard_ocr.get_data() completed
2023-08-28 10:47:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_preprocessing.py,  function: data_preprocessing
2023-08-28 10:47:28+0530 - sLogger - DEBUG - data_preprocessing function completed
2023-08-28 10:47:28+0530 - sLogger - DEBUG - module: Classification_service , submodule: machine_learning, File:data_prediction.py,  function: predict
2023-08-28 10:47:28+0530 - sLogger - DEBUG - function: predict completed.
2023-08-28 10:47:28+0530 - sLogger - DEBUG - module: Classification_service , File:clf_core.py,  function: __update_filtered_pages_db
2023-08-28 10:47:28+0530 - sLogger - DEBUG - {'predicted_cbs_pages': [6, 7, 38], 'predicted_cpl_pages': [5, 8, 28, 29], 'predicted_ccf_pages': [9], 'filtered_cbs_pages': [6, 7], 'filtered_cpl_pages': [8, 5], 'filtered_ccf_pages': [9], 'month': 'march', 'status': 'Page Classification Completed'}
2023-08-28 10:47:28+0530 - sLogger - DEBUG - function: __update_filtered_pages_db completed
2023-08-28 10:47:28+0530 - sLogger - DEBUG - function: process_pdf completed successfully
2023-08-28 10:47:28+0530 - sLogger - DEBUG - process file completed
2023-08-28 10:47:28+0530 - sLogger - DEBUG - Classification Service Processing completed
2023-08-28 10:47:28+0530 - sLogger - DEBUG - module: TableExtractionService , File:wrapper.py,  function: process_file
2023-08-28 10:47:28+0530 - sLogger - DEBUG - TE process file started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - TE Proces file completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:process_core.py,  function: process_main_pages
2023-08-28 10:54:46+0530 - sLogger - DEBUG - process_main_pages started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:RefactorDF.py,  function: start_refactoring
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - start_refactoring completed
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL
2023-08-28 10:54:46+0530 - sLogger - ERROR - error occured: 'headers'
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: main_page_processing_service , File:process_core.py,  function: notes_number_processing_cls CPL notes_number_processing
2023-08-28 10:54:46+0530 - sLogger - ERROR - error occured: 'Notes'
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CBS_Sections.py,  function: set_section_details
2023-08-28 10:54:46+0530 - sLogger - DEBUG - set_section_details started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Assets | [('assets', 100), ('currentassets', 59), ('current assets', 56), ('noncurrent assets', 56), ('noncurrentassets', 50), ('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('equity liabilities', 22), ('current liabilities', 21), ('liabilities', 18), ('noncurrent liabilities', 11)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentassets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD current liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD currentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrent liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD non current liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentassets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD noncurrentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity and liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equity | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets | MATCH WORD equityandliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Current assets | [('current assets', 100), ('noncurrent assets', 77), ('currentliabilities', 64), ('assets', 56), ('currentassets', 56), ('noncurrentliabilities', 56), ('current liabilities', 52), ('noncurrentassets', 50), ('noncurrent liabilities', 44), ('equity', 32), ('equityliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('liabilities', 11)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current assets | score 100
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentassets | score 96
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD current liabilities | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD currentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrent liabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current assets | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD non current liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentassets | score 87
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD noncurrentliabilities | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity and liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current assets | MATCH WORD equityandliabilities | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Cash and cash equivalents | [('equity and liabilities', 53), ('equityandliabilities', 38), ('equity liabilities', 35), ('equityliabilities', 34), ('noncurrentassets', 33), ('assets', 31), ('currentassets', 30), ('equity', 30), ('current assets', 29), ('noncurrent assets', 29), ('current liabilities', 29), ('noncurrentliabilities', 24), ('noncurrent liabilities', 23), ('liabilities', 22), ('currentliabilities', 20)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current assets | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentassets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD currentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent assets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrent liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current assets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD non current liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentassets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD noncurrentliabilities | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity and liabilities | score 54
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equity | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Cash and cash equivalents | MATCH WORD equityandliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Inventories | [('noncurrentliabilities', 48), ('currentliabilities', 44), ('equity', 40), ('noncurrent assets', 36), ('current liabilities', 35), ('noncurrent liabilities', 35), ('equityliabilities', 35), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('assets', 29), ('currentassets', 29), ('current assets', 27), ('liabilities', 27), ('equity liabilities', 27)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current assets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentassets | score 42
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD current liabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD currentliabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent assets | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrent liabilities | score 42
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current assets | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD non current liabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD noncurrentliabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity and liabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Inventories | MATCH WORD equityandliabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Loans and advances | [('equity and liabilities', 38), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('equityandliabilities', 31), ('noncurrentliabilities', 30), ('noncurrentassets', 27), ('currentliabilities', 25), ('currentassets', 22), ('current assets', 21), ('equity liabilities', 21), ('liabilities', 19), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD current assets | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD currentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD currentliabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrent assets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrent liabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD non current assets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD non current liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equity and liabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equity | score 15
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equityandliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Derivatives | [('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('current assets', 22), ('noncurrent assets', 22), ('equity liabilities', 22), ('current liabilities', 21), ('assets', 20), ('liabilities', 18), ('currentassets', 12), ('noncurrent liabilities', 11), ('noncurrentassets', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity and liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equityandliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Assets held for sale | [('current assets', 50), ('noncurrent assets', 50), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('current liabilities', 36), ('currentassets', 32), ('noncurrentassets', 29), ('equityandliabilities', 27), ('noncurrentliabilities', 26), ('liabilities', 24), ('noncurrent liabilities', 24), ('equityliabilities', 22), ('currentliabilities', 21), ('equity', 16)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD current assets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD currentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD currentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrent assets | score 51
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrent liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD non current assets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD non current liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD equity and liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Assets held for sale | MATCH WORD equityandliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total current assets | [('current assets', 81), ('noncurrent assets', 62), ('current liabilities', 61), ('currentliabilities', 57), ('currentassets', 52), ('noncurrentliabilities', 52), ('noncurrentassets', 47), ('assets', 42), ('equity and liabilities', 39), ('equity liabilities', 38), ('noncurrent liabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current assets | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentassets | score 83
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD current liabilities | score 56
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD currentliabilities | score 53
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent assets | score 81
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrent liabilities | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current assets | score 84
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD non current liabilities | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentassets | score 78
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD noncurrentliabilities | score 54
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity and liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current assets | MATCH WORD equityandliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Noncurrent assets | [('noncurrent assets', 100), ('current assets', 77), ('noncurrent liabilities', 67), ('assets', 56), ('noncurrentliabilities', 56), ('noncurrentassets', 50), ('currentassets', 40), ('currentliabilities', 36), ('current liabilities', 30), ('equity and liabilities', 27), ('equityandliabilities', 25), ('equity liabilities', 23), ('equity', 21), ('equityliabilities', 19), ('liabilities', 11)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentassets | score 87
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD current liabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD currentliabilities | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent assets | score 100
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrent liabilities | score 72
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current assets | score 97
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD non current liabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentassets | score 97
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD noncurrentliabilities | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent assets | MATCH WORD equityandliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Trade and other receivables | [('noncurrentassets', 43), ('equity and liabilities', 41), ('currentassets', 35), ('noncurrentliabilities', 35), ('current assets', 34), ('equityandliabilities', 30), ('noncurrent assets', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('currentliabilities', 26), ('equity liabilities', 23), ('assets', 22), ('equity', 21), ('equityliabilities', 20), ('liabilities', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentassets | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD current liabilities | score 48
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD currentliabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent assets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrent liabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD non current liabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentassets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD noncurrentliabilities | score 46
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity and liabilities | score 49
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Trade and other receivables | MATCH WORD equityandliabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Prepayments | [('currentassets', 33), ('current liabilities', 30), ('noncurrentassets', 29), ('equityliabilities', 29), ('currentliabilities', 27), ('equityandliabilities', 24), ('noncurrentliabilities', 22), ('current assets', 21), ('equity liabilities', 21), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equity and liabilities', 17), ('noncurrent assets', 11), ('noncurrent liabilities', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current assets | score 48
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentassets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD current liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD currentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent assets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrent liabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current assets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD non current liabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentassets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity and liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Prepayments | MATCH WORD equityandliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Rightofuse assets | [('current assets', 57), ('noncurrent assets', 57), ('assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity', 29), ('equity liabilities', 29), ('current liabilities', 28), ('noncurrent liabilities', 28), ('equityliabilities', 26), ('currentliabilities', 25), ('equityandliabilities', 23), ('noncurrentliabilities', 22), ('liabilities', 19)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current assets | score 58
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentassets | score 53
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD current liabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD currentliabilities | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent assets | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrent liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current assets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD non current liabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentassets | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity and liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Rightofuse assets | MATCH WORD equityandliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Loans and advances | [('equity and liabilities', 38), ('noncurrent assets', 36), ('current liabilities', 34), ('noncurrent liabilities', 34), ('equityandliabilities', 31), ('noncurrentliabilities', 30), ('noncurrentassets', 27), ('currentliabilities', 25), ('currentassets', 22), ('current assets', 21), ('equity liabilities', 21), ('liabilities', 19), ('assets', 10), ('equityliabilities', 9), ('equity', 0)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD current assets | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD currentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD currentliabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrent assets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrent liabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD non current assets | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD non current liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD noncurrentliabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equity and liabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equity | score 15
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Loans and advances | MATCH WORD equityandliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Property plant and equipment | [('equity and liabilities', 59), ('equity liabilities', 43), ('equity', 40), ('equityandliabilities', 40), ('current assets', 38), ('equityliabilities', 38), ('noncurrentliabilities', 33), ('noncurrent assets', 32), ('noncurrent liabilities', 32), ('noncurrentassets', 31), ('currentliabilities', 30), ('currentassets', 28), ('current liabilities', 26), ('assets', 21), ('liabilities', 20)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current assets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentassets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD current liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD currentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrent liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current assets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD non current liabilities | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentassets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD noncurrentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity and liabilities | score 53
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equity | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Property plant and equipment | MATCH WORD equityandliabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Intangible assets and software under development | [('noncurrent assets', 39), ('equity and liabilities', 36), ('current assets', 35), ('noncurrent liabilities', 27), ('noncurrentassets', 26), ('currentassets', 24), ('equity liabilities', 24), ('equityandliabilities', 24), ('assets', 23), ('current liabilities', 23), ('noncurrentliabilities', 20), ('currentliabilities', 17), ('equityliabilities', 17), ('liabilities', 14), ('equity', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD current assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD currentassets | score 49
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD current liabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD currentliabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrent assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrentassets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrent liabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD non current assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD non current liabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrentliabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrentassets | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD noncurrentliabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD equity and liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Intangible assets and software under development | MATCH WORD equityandliabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Derivatives | [('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('current assets', 22), ('noncurrent assets', 22), ('equity liabilities', 22), ('current liabilities', 21), ('assets', 20), ('liabilities', 18), ('currentassets', 12), ('noncurrent liabilities', 11), ('noncurrentassets', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity and liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equityandliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Deferred tax assets | [('current assets', 57), ('assets', 50), ('noncurrent assets', 50), ('currentassets', 37), ('noncurrentassets', 33), ('equity and liabilities', 31), ('equity liabilities', 29), ('current liabilities', 28), ('equityandliabilities', 23), ('noncurrent liabilities', 21), ('equity', 19), ('currentliabilities', 17), ('equityliabilities', 17), ('noncurrentliabilities', 15), ('liabilities', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current assets | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentassets | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD current liabilities | score 42
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD currentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent assets | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrent liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current assets | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD non current liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD noncurrentliabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity and liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Deferred tax assets | MATCH WORD equityandliabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total noncurrent assets | [('noncurrent assets', 81), ('current assets', 69), ('noncurrentliabilities', 58), ('noncurrent liabilities', 55), ('noncurrentassets', 53), ('currentliabilities', 43), ('assets', 42), ('current liabilities', 42), ('currentassets', 39), ('equity and liabilities', 33), ('equityandliabilities', 33), ('equity liabilities', 31), ('equityliabilities', 30), ('equity', 24), ('liabilities', 16)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current assets | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentassets | score 83
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD current liabilities | score 52
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD currentliabilities | score 49
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent assets | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrent liabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current assets | score 83
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD non current liabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentassets | score 82
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD noncurrentliabilities | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity and liabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent assets | MATCH WORD equityandliabilities | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total assets | [('assets', 62), ('current assets', 58), ('noncurrent assets', 58), ('currentassets', 43), ('equity and liabilities', 43), ('equity liabilities', 42), ('current liabilities', 40), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equityliabilities', 32), ('currentliabilities', 30), ('noncurrentliabilities', 26), ('liabilities', 24), ('equity', 24), ('noncurrent liabilities', 24)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current assets | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentassets | score 56
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD currentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent assets | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrent liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD non current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD noncurrentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity and liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total assets | MATCH WORD equityandliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Liabilities and equity | [('equity and liabilities', 100), ('equity liabilities', 87), ('current liabilities', 58), ('equityliabilities', 56), ('liabilities', 52), ('equity', 52), ('equityandliabilities', 50), ('noncurrent liabilities', 39), ('noncurrentliabilities', 34), ('currentliabilities', 31), ('assets', 27), ('current assets', 27), ('noncurrent assets', 27), ('noncurrentassets', 25), ('currentassets', 21)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD currentassets | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD current liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD currentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent assets | score 26
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrent liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current assets | score 25
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD non current liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity and liabilities | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equity | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Liabilities and equity | MATCH WORD equityandliabilities | score 77
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Current liabilities | [('current liabilities', 100), ('currentliabilities', 78), ('noncurrentliabilities', 69), ('equity liabilities', 67), ('currentassets', 62), ('liabilities', 60), ('equity and liabilities', 58), ('noncurrentassets', 55), ('current assets', 52), ('noncurrent liabilities', 43), ('equityliabilities', 36), ('equityandliabilities', 32), ('noncurrent assets', 30), ('equity', 30), ('assets', 21)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current assets | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentassets | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD current liabilities | score 100
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD currentliabilities | score 97
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent assets | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrent liabilities | score 93
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current assets | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD non current liabilities | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD noncurrentliabilities | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity and liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Current liabilities | MATCH WORD equityandliabilities | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Payables and other liabilities | [('equity and liabilities', 50), ('noncurrent liabilities', 49), ('current liabilities', 43), ('liabilities', 41), ('equity liabilities', 39), ('equityandliabilities', 29), ('equityliabilities', 26), ('noncurrentliabilities', 23), ('noncurrent assets', 22), ('noncurrentassets', 21), ('currentliabilities', 19), ('current assets', 17), ('currentassets', 17), ('assets', 14), ('equity', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD currentassets | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD current liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD currentliabilities | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrent liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD non current assets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD non current liabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentliabilities | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentliabilities | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equity and liabilities | score 77
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equityandliabilities | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 56), ('liabilities', 43), ('equityliabilities', 40), ('equityandliabilities', 36), ('noncurrent liabilities', 33), ('currentliabilities', 32), ('equity', 29), ('noncurrentliabilities', 29), ('currentassets', 24), ('current assets', 23), ('noncurrent assets', 23), ('noncurrentassets', 22), ('assets', 15)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD currentassets | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD currentliabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentliabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentliabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equityandliabilities | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Interestbearing liabilities | [('current liabilities', 61), ('equity and liabilities', 56), ('equity liabilities', 56), ('liabilities', 48), ('noncurrentliabilities', 39), ('noncurrent liabilities', 36), ('currentliabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('noncurrentassets', 29), ('currentassets', 26), ('current assets', 25), ('equity', 24), ('noncurrent assets', 19), ('assets', 17)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD current assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD currentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD current liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD currentliabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrent assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrent liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD non current assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD non current liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equityandliabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Income tax payable | [('liabilities', 36), ('equity liabilities', 34), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equity and liabilities', 30), ('equityandliabilities', 30), ('noncurrentassets', 26), ('equityliabilities', 25), ('current assets', 21), ('currentassets', 21), ('noncurrentliabilities', 21), ('assets', 19), ('equity', 18), ('currentliabilities', 16), ('noncurrent assets', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current assets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD currentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD current liabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD currentliabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent assets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrent liabilities | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD non current liabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrentliabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrentassets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD noncurrentliabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity and liabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Income tax payable | MATCH WORD equityandliabilities | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Derivatives | [('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('current assets', 22), ('noncurrent assets', 22), ('equity liabilities', 22), ('current liabilities', 21), ('assets', 20), ('liabilities', 18), ('currentassets', 12), ('noncurrent liabilities', 11), ('noncurrentassets', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity and liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equityandliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total current liabilities | [('current liabilities', 82), ('currentliabilities', 62), ('currentassets', 56), ('noncurrentliabilities', 56), ('equity liabilities', 55), ('noncurrentassets', 51), ('equity and liabilities', 49), ('noncurrent liabilities', 47), ('liabilities', 46), ('current assets', 42), ('equityandliabilities', 32), ('equityliabilities', 29), ('noncurrent assets', 24), ('equity', 23), ('assets', 16)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentassets | score 56
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD current liabilities | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD currentliabilities | score 84
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent assets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrent liabilities | score 85
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current assets | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD non current liabilities | score 88
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentassets | score 54
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD noncurrentliabilities | score 83
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity and liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total current liabilities | MATCH WORD equityandliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Noncurrent liabilities | [('noncurrent liabilities', 100), ('noncurrent assets', 67), ('liabilities', 60), ('noncurrentliabilities', 54), ('noncurrentassets', 48), ('current assets', 44), ('equity liabilities', 44), ('current liabilities', 43), ('equity and liabilities', 39), ('currentliabilities', 35), ('currentassets', 31), ('equityandliabilities', 24), ('equity', 20), ('equityliabilities', 18), ('assets', 11)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentassets | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD current liabilities | score 93
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD currentliabilities | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent assets | score 72
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrent liabilities | score 100
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current assets | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD non current liabilities | score 98
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentassets | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD noncurrentliabilities | score 98
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Noncurrent liabilities | MATCH WORD equityandliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Payables and other liabilities | [('equity and liabilities', 50), ('noncurrent liabilities', 49), ('current liabilities', 43), ('liabilities', 41), ('equity liabilities', 39), ('equityandliabilities', 29), ('equityliabilities', 26), ('noncurrentliabilities', 23), ('noncurrent assets', 22), ('noncurrentassets', 21), ('currentliabilities', 19), ('current assets', 17), ('currentassets', 17), ('assets', 14), ('equity', 14)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD currentassets | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD current liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD currentliabilities | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrent liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD non current assets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD non current liabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentliabilities | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD noncurrentliabilities | score 55
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equity and liabilities | score 77
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Payables and other liabilities | MATCH WORD equityandliabilities | score 60
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Lease liabilities | [('liabilities', 71), ('equity liabilities', 67), ('current liabilities', 64), ('equity and liabilities', 57), ('noncurrent liabilities', 48), ('equityandliabilities', 36), ('equity', 35), ('equityliabilities', 32), ('currentliabilities', 30), ('currentassets', 26), ('noncurrentliabilities', 26), ('assets', 25), ('current assets', 25), ('noncurrent assets', 25), ('noncurrentassets', 23)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentassets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD noncurrentliabilities | score 63
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Lease liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Employee benefit liabilities | [('equity liabilities', 57), ('current liabilities', 56), ('equity and liabilities', 56), ('liabilities', 43), ('equityliabilities', 40), ('equityandliabilities', 36), ('noncurrent liabilities', 33), ('currentliabilities', 32), ('equity', 29), ('noncurrentliabilities', 29), ('currentassets', 24), ('current assets', 23), ('noncurrent assets', 23), ('noncurrentassets', 22), ('assets', 15)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current assets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD currentassets | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD current liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD currentliabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent assets | score 37
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrent liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD non current liabilities | score 67
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentliabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD noncurrentliabilities | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Employee benefit liabilities | MATCH WORD equityandliabilities | score 59
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Provisions | [('currentliabilities', 27), ('currentassets', 22), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrentassets', 19), ('assets', 18), ('liabilities', 17), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('current assets', 11), ('noncurrent assets', 11), ('equity liabilities', 11), ('noncurrent liabilities', 10), ('equity and liabilities', 9)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current assets | score 25
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentassets | score 26
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD current liabilities | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD currentliabilities | score 29
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent assets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrent liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current assets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD non current liabilities | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD noncurrentliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity and liabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equity | score 15
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Provisions | MATCH WORD equityandliabilities | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Interestbearing liabilities | [('current liabilities', 61), ('equity and liabilities', 56), ('equity liabilities', 56), ('liabilities', 48), ('noncurrentliabilities', 39), ('noncurrent liabilities', 36), ('currentliabilities', 36), ('equityandliabilities', 33), ('equityliabilities', 30), ('noncurrentassets', 29), ('currentassets', 26), ('current assets', 25), ('equity', 24), ('noncurrent assets', 19), ('assets', 17)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD current assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD currentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD current liabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD currentliabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrent assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrent liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD non current assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD non current liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD noncurrentliabilities | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equity and liabilities | score 65
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Interestbearing liabilities | MATCH WORD equityandliabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Derivatives | [('equity', 36), ('equityliabilities', 31), ('currentliabilities', 29), ('equity and liabilities', 27), ('equityandliabilities', 25), ('noncurrentliabilities', 24), ('current assets', 22), ('noncurrent assets', 22), ('equity liabilities', 22), ('current liabilities', 21), ('assets', 20), ('liabilities', 18), ('currentassets', 12), ('noncurrent liabilities', 11), ('noncurrentassets', 10)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentassets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD currentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrent liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD non current liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD noncurrentliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity and liabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equity | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Derivatives | MATCH WORD equityandliabilities | score 50
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total noncurrent liabilities | [('noncurrent liabilities', 82), ('noncurrentliabilities', 56), ('noncurrent assets', 55), ('noncurrentassets', 51), ('liabilities', 46), ('current assets', 42), ('current liabilities', 41), ('currentliabilities', 41), ('currentassets', 38), ('equity liabilities', 36), ('equity and liabilities', 32), ('equityandliabilities', 26), ('equityliabilities', 21), ('assets', 16), ('equity', 15)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current assets | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentassets | score 56
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD current liabilities | score 81
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD currentliabilities | score 85
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrent liabilities | score 95
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current assets | score 61
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD non current liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentassets | score 62
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD noncurrentliabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity and liabilities | score 64
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total noncurrent liabilities | MATCH WORD equityandliabilities | score 58
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total liabilities | [('liabilities', 67), ('noncurrent liabilities', 62), ('equity liabilities', 48), ('current liabilities', 46), ('equity and liabilities', 41), ('equityandliabilities', 35), ('equityliabilities', 30), ('noncurrentliabilities', 25), ('assets', 24), ('current assets', 24), ('noncurrent assets', 24), ('noncurrentassets', 22), ('equity', 22), ('currentliabilities', 19), ('currentassets', 17)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentassets | score 27
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD currentliabilities | score 69
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent assets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrent liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD non current liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD noncurrentliabilities | score 68
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity and liabilities | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total liabilities | MATCH WORD equityandliabilities | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Net assets | [('current assets', 73), ('assets', 71), ('noncurrent assets', 64), ('currentassets', 48), ('noncurrentassets', 42), ('currentliabilities', 33), ('equity and liabilities', 31), ('equityandliabilities', 30), ('noncurrentliabilities', 29), ('equity', 27), ('equity liabilities', 27), ('current liabilities', 26), ('noncurrent liabilities', 26), ('equityliabilities', 24), ('liabilities', 13)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current assets | score 75
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentassets | score 70
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD current liabilities | score 41
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD currentliabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrent liabilities | score 44
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current assets | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD non current liabilities | score 42
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentassets | score 72
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD noncurrentliabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity and liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Net assets | MATCH WORD equityandliabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Equity | [('equity', 100), ('equityliabilities', 86), ('equityandliabilities', 71), ('equity liabilities', 63), ('equity and liabilities', 52), ('currentliabilities', 40), ('assets', 36), ('liabilities', 33), ('noncurrentliabilities', 33), ('current assets', 32), ('current liabilities', 30), ('currentassets', 22), ('noncurrent assets', 21), ('noncurrent liabilities', 20), ('noncurrentassets', 19)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current assets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD current liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD currentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent assets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrent liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current assets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD non current liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentassets | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD noncurrentliabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity and liabilities | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equity | score 100
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Equity | MATCH WORD equityandliabilities | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Issued capital | [('assets', 40), ('equity', 38), ('equity and liabilities', 37), ('currentassets', 36), ('current assets', 35), ('noncurrent assets', 35), ('equity liabilities', 35), ('current liabilities', 33), ('noncurrent liabilities', 33), ('equityliabilities', 33), ('noncurrentassets', 32), ('currentliabilities', 32), ('equityandliabilities', 29), ('noncurrentliabilities', 27), ('liabilities', 25)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current assets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentassets | score 42
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD current liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD currentliabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent assets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrent liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current assets | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD non current liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentassets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD noncurrentliabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity and liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Issued capital | MATCH WORD equityandliabilities | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Retained earnings | [('equity and liabilities', 50), ('currentliabilities', 50), ('current liabilities', 48), ('currentassets', 43), ('noncurrentliabilities', 43), ('current assets', 42), ('assets', 38), ('noncurrentassets', 38), ('equityandliabilities', 36), ('equity', 35), ('noncurrent assets', 33), ('equity liabilities', 33), ('equityliabilities', 32), ('liabilities', 24), ('noncurrent liabilities', 24)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current assets | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentassets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD current liabilities | score 39
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD currentliabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent assets | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrent liabilities | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current assets | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD non current liabilities | score 35
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentassets | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD noncurrentliabilities | score 40
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity and liabilities | score 46
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equity | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Retained earnings | MATCH WORD equityandliabilities | score 43
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Reserves | [('currentassets', 44), ('noncurrentassets', 38), ('assets', 36), ('current assets', 32), ('noncurrent assets', 32), ('currentliabilities', 27), ('noncurrentliabilities', 22), ('current liabilities', 20), ('noncurrent liabilities', 20), ('equity', 17), ('equityliabilities', 14), ('equityandliabilities', 12), ('equity liabilities', 11), ('equity and liabilities', 9), ('liabilities', 0)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current assets | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentassets | score 48
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD current liabilities | score 30
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD currentliabilities | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent assets | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrent liabilities | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current assets | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD non current liabilities | score 26
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentassets | score 45
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD noncurrentliabilities | score 28
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity and liabilities | score 22
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equity | score 14
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Reserves | MATCH WORD equityandliabilities | score 22
2023-08-28 10:54:46+0530 - sLogger - DEBUG - Total equity | [('equity liabilities', 72), ('equity', 67), ('equity and liabilities', 62), ('equityandliabilities', 61), ('equityliabilities', 60), ('current liabilities', 38), ('liabilities', 33), ('current assets', 32), ('noncurrent assets', 32), ('noncurrent liabilities', 31), ('currentliabilities', 29), ('currentassets', 25), ('noncurrentliabilities', 25), ('assets', 24), ('noncurrentassets', 22)]
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current assets | score 31
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentassets | score 32
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD current liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD currentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent assets | score 34
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrent liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current assets | score 33
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD non current liabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentassets | score 36
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD noncurrentliabilities | score 38
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity and liabilities | score 86
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equity | score 90
2023-08-28 10:54:46+0530 - sLogger - DEBUG - particular_text Total equity | MATCH WORD equityandliabilities | score 57
2023-08-28 10:54:46+0530 - sLogger - DEBUG - module: MainPage_processing_Service , File:CCF_Sections.py,  function: set_section_details
2023-08-28 10:54:46+0530 - sLogger - DEBUG - set_section_details started
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Operating activities | working capital adjustments
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Receipts from customers (inclusive of GST) | adjustments for increase decrease in operating assets
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payments to suppliers and employees (inclusive ofGST) | changes in operating assets and liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest received | movements in working capital
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Interest paid | movements in working capital
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Income tax paid | changes in working capital
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows from operating activities | operating cash flow before working capital changes
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Investing activities | movements in working capital
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from sale of property, plant and equipment and intangibles | operating profit before changes in assets and liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Purchase of property, plant and equipment and intangibles | operating profit before changes in assets and liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash (outflow/inflow from lending and other investing activities | adjustments for increase decrease in operating liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows (used in)/from investing activities | adjustments for increase decrease in operating liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Financing activities | changes in working capital
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Payment of principal portion of lease liabilities | operating profit before changes in assets and liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- (Repayments of)/proceeds from borrowings non-related parties | operating profit before working capital changes
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Proceeds from/(repayments of) borrowings related parties | operating profit before working capital changes
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net cash flows used in financing activities | operating cash flow before working capital changes
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Net (decrease/increase in cash and cash equivalents | adjustments for increase decrease in operating assets
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 1 April | changes in operating assets and liabilities
2023-08-28 10:54:46+0530 - sLogger - DEBUG - SUB SECTION : ADJUSTMENTS --- Cash and cash equivalents at 31 March | changes in operating assets and liabilities
2023-08-28 10:54:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-28 10:54:49+0530 - sLogger - ERROR - error occured: 'year'
2023-08-28 10:54:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:note_standardise_utils.py,  function: find_data_block_location
2023-08-28 10:54:49+0530 - sLogger - ERROR - error occured inside inner try block: cannot unpack non-iterable NoneType object
2023-08-28 10:54:49+0530 - sLogger - DEBUG - module: main_page_processing_service , File:noteStandardise.py,  function: ideal_template_processing
2023-08-28 10:54:49+0530 - sLogger - ERROR - error occured: 'year'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - process_main_pages completed
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: fetch_report
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['cash on hand ', ' cash at bank ', ' cash at bank and on hand ', ' short term deposits ', ' cash at banks earns interest at floating rates based on daily bank deposit rates ', ' cash and cash equivalents ', ' cash on hand and at bank ', ' bank balances ', '  cash and bank balances ', ' cash asset ', ' Term deposit']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_cash_and_cash_equivalents
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), (' Cash', 20), ('cash and short term deposits', 18), ('Cash and short term deposits ', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('bank balances other than above', 57), ('cash and bank balances', 57), ('other bank balances', 56), ('bank balances other than cash and cash equivalents', 44), ('cash and cash equivalents', 39), ('cash and short term deposits', 33), ('Cash and short term deposits ', 33), ('cash asset', 24), (' Cash', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('cash and cash equivalents', 31), ('cash and short term deposits', 19), ('Cash and short term deposits ', 19), ('other bank balances', 18), ('bank balances other than cash and cash equivalents', 16), ('cash asset', 13), ('bank balances other than above', 12), ('cash and bank balances', 8), (' Cash', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [('cash asset', 48), ('cash and short term deposits', 39), ('Cash and short term deposits ', 39), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 30), ('other bank balances', 28), ('cash and bank balances', 26), (' Cash', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['cash and cash equivalents', 'bank balances other than cash and cash equivalents', 'bank balances other than above', 'other bank balances', 'cash and bank balances', 'cash and short term deposits', 'cash asset', 'Cash and short term deposits ', ' Cash'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('cash asset', 25), (' Cash', 20), ('cash and short term deposits', 18), ('Cash and short term deposits ', 18), ('cash and cash equivalents', 15), ('bank balances other than above', 12), ('other bank balances', 9), ('bank balances other than cash and cash equivalents', 8), ('cash and bank balances', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('bank balances other than above', 57), ('cash and bank balances', 57), ('other bank balances', 56), ('bank balances other than cash and cash equivalents', 44), ('cash and cash equivalents', 39), ('cash and short term deposits', 33), ('Cash and short term deposits ', 33), ('cash asset', 24), (' Cash', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('cash and cash equivalents', 31), ('cash and short term deposits', 19), ('Cash and short term deposits ', 19), ('other bank balances', 18), ('bank balances other than cash and cash equivalents', 16), ('cash asset', 13), ('bank balances other than above', 12), ('cash and bank balances', 8), (' Cash', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [('cash asset', 48), ('cash and short term deposits', 39), ('Cash and short term deposits ', 39), ('cash and cash equivalents', 35), ('bank balances other than cash and cash equivalents', 32), ('bank balances other than above', 30), ('other bank balances', 28), ('cash and bank balances', 26), (' Cash', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['inventories ', ' Contract assets']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['raw materials ', ' finished goods ', ' finished goods at cost ', ' stores and other consumables at cost ', ' raw materials ', ' work in progress ', ' goods in transit ', ' provision for inventory obsolescence ', ' inventories ', ' cranes ', ' cranes - in transit ', ' spare parts ', ' spare parts at cost ', ' parts and accessories (at cost) ', ' stock in transit ', ' Stock in transit at cost ', ' allowance for obsolescence ', ' Finished goods in transit']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_inventories
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Contract assets', 33), ('inventories ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('inventories ', 44), (' Contract assets', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['inventories ', ' Contract assets'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Contract assets', 33), ('inventories ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('inventories ', 44), (' Contract assets', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' Contract assets', 36), ('inventories ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables ']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['current ', ' prepaid expense ', ' prepaid expenditure ', ' prepayments ', ' prepaid ', ' other prepayments ', ' other receivables and prepayments ', ' prepaid ', ' in advance ', ' charges paid in advance']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_prepaid_expenses
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables ', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' other financial assets ', 35), (' other current financial assets ', 33), (' trade and other receivables ', 32), (' other current assets ', 29), ('other assets ', 23), (' prepayments ', 10)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' trade and other receivables ', 37), ('other assets ', 25), (' other current financial assets ', 19), (' prepayments ', 18), (' other current assets ', 17), (' other financial assets ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [('other assets ', 60), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables ', 44), (' prepayments ', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 12198.0, 'line_item_label': ['Prepayments'], 'note_numbers': [nan], 'line_item_value': [12198.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['other assets ', ' other current assets ', ' other financial assets ', ' other current financial assets ', ' prepayments ', ' trade and other receivables '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' prepayments ', 100), (' trade and other receivables ', 21), (' other current financial assets ', 18), (' other current assets ', 16), (' other financial assets ', 16), ('other assets ', 12)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' other financial assets ', 35), (' other current financial assets ', 33), (' trade and other receivables ', 32), (' other current assets ', 29), ('other assets ', 23), (' prepayments ', 10)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' trade and other receivables ', 37), ('other assets ', 25), (' other current financial assets ', 19), (' prepayments ', 18), (' other current assets ', 17), (' other financial assets ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [('other assets ', 60), (' other current assets ', 53), (' other financial assets ', 53), (' other current financial assets ', 48), (' trade and other receivables ', 44), (' prepayments ', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 14021.0, 'line_item_label': ['Prepayments'], 'note_numbers': [nan], 'line_item_value': [14021.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['current', 'other assets', 'foreign exchange derivatives at fair value', ' electricity derivatives at fair value', ' accrued interest', ' other', ' related party disclosures', ' income tax receivable from related parties', ' derivative contracts - fair value', ' long service leave receivable', ' other receivables - related party', ' other deposits receivable - related party', ' deposits', ' amount receivable from controlling entity', ' interest receivable', ' bank guarantee', ' rental bond', ' related party receivable', ' share of jv prepayments', ' current investments', ' lng', ' condensate', ' foreign exchange forward contracts', ' accrued rebates', ' forward exchange contracts', ' other debtors and prepayments ', ' Capitalised contract cost ', ' Debtors retention ', ' Prepaid subscription ', ' Income tax refund due ', ' Fuel tax credits ', ' GST receivable ', ' Deposits ', ' Intercompany receivable ', ' Accrued income ', ' accrued interest receivable ', ' other receivables ', ' Forward exchange contracts used for hedging keyword']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = ca_other_current_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = [' ']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Restricted deposits ', 27), (' Income tax receivable', 27), (' Income tax refund due ', 23), (' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables ', 21), (' Capitalised contract cost ', 21), ('other current assets ', 16), (' other financial assets ', 16), (' Other investment including derivatives ', 13), (' other assets ', 12), (' biological assets ', 11)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' Income tax refund due ', 46), (' Other investment including derivatives ', 40), (' financial assets ', 36), (' other financial assets ', 35), (' deferred operating expenditure ', 33), (' trade and other receivables ', 32), (' Capitalised contract cost ', 32), (' Income tax receivable', 32), (' biological assets ', 30), ('other current assets ', 29), (' income tax receivable from related parties ', 29), (' other assets ', 23), (' Restricted deposits ', 13)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Restricted deposits ', 38), (' trade and other receivables ', 37), (' Other investment including derivatives ', 33), (' deferred operating expenditure ', 31), (' Income tax receivable', 29), (' other assets ', 25), (' biological assets ', 24), (' Income tax refund due ', 24), (' financial assets ', 22), ('other current assets ', 17), (' other financial assets ', 17), (' income tax receivable from related parties ', 16), (' Capitalised contract cost ', 7)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' other assets ', 60), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 52), (' financial assets ', 50), (' trade and other receivables ', 44), (' Income tax refund due ', 41), (' deferred operating expenditure ', 40), (' Other investment including derivatives ', 36), (' income tax receivable from related parties ', 35), (' Restricted deposits ', 34), (' Capitalised contract cost ', 33), (' Income tax receivable', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['other current assets ', ' other assets ', ' financial assets ', ' income tax receivable from related parties ', ' biological assets ', ' deferred operating expenditure ', ' other financial assets ', ' trade and other receivables ', ' Restricted deposits ', ' Capitalised contract cost ', ' Income tax refund due ', ' Other investment including derivatives ', ' Income tax receivable'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Restricted deposits ', 27), (' Income tax receivable', 27), (' Income tax refund due ', 23), (' deferred operating expenditure ', 22), (' financial assets ', 21), (' income tax receivable from related parties ', 21), (' trade and other receivables ', 21), (' Capitalised contract cost ', 21), ('other current assets ', 16), (' other financial assets ', 16), (' Other investment including derivatives ', 13), (' other assets ', 12), (' biological assets ', 11)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' Income tax refund due ', 46), (' Other investment including derivatives ', 40), (' financial assets ', 36), (' other financial assets ', 35), (' deferred operating expenditure ', 33), (' trade and other receivables ', 32), (' Capitalised contract cost ', 32), (' Income tax receivable', 32), (' biological assets ', 30), ('other current assets ', 29), (' income tax receivable from related parties ', 29), (' other assets ', 23), (' Restricted deposits ', 13)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Restricted deposits ', 38), (' trade and other receivables ', 37), (' Other investment including derivatives ', 33), (' deferred operating expenditure ', 31), (' Income tax receivable', 29), (' other assets ', 25), (' biological assets ', 24), (' Income tax refund due ', 24), (' financial assets ', 22), ('other current assets ', 17), (' other financial assets ', 17), (' income tax receivable from related parties ', 16), (' Capitalised contract cost ', 7)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' other assets ', 60), ('other current assets ', 53), (' other financial assets ', 53), (' biological assets ', 52), (' financial assets ', 50), (' trade and other receivables ', 44), (' Income tax refund due ', 41), (' deferred operating expenditure ', 40), (' Other investment including derivatives ', 36), (' income tax receivable from related parties ', 35), (' Restricted deposits ', 34), (' Capitalised contract cost ', 33), (' Income tax receivable', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:50+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment ']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['depreciation', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_accumulated_depreciation
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['cost', 'gross', 'net value', 'net book value']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Property ', 43), ('plant and equipment ', 29), (' plant and equipment ', 29), ('plant property equipment', 23), ('property plant equipment', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('plant and equipment ', 47), (' plant and equipment ', 47), ('plant property equipment', 29), ('property plant equipment', 29), (' Property ', 9)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('plant and equipment ', 38), (' plant and equipment ', 38), ('plant property equipment', 31), ('property plant equipment', 31), (' Property ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Property ', 46), ('plant and equipment ', 30), (' plant and equipment ', 30), ('plant property equipment', 24), ('property plant equipment', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 34038.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [34038.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment', 'plant and equipment ', ' Property ', ' plant and equipment '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30), ('plant and equipment ', 29), (' plant and equipment ', 29), (' Property ', 19)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant and equipment ', 43), (' plant and equipment ', 43), ('plant property equipment', 33), ('property plant equipment', 33), (' Property ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' Property ', 43), ('plant and equipment ', 29), (' plant and equipment ', 29), ('plant property equipment', 23), ('property plant equipment', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29), ('plant and equipment ', 27), (' plant and equipment ', 27), (' Property ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('plant and equipment ', 47), (' plant and equipment ', 47), ('plant property equipment', 29), ('property plant equipment', 29), (' Property ', 9)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91), ('plant and equipment ', 77), (' plant and equipment ', 77), (' Property ', 50)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('plant and equipment ', 38), (' plant and equipment ', 38), ('plant property equipment', 31), ('property plant equipment', 31), (' Property ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Property ', 46), ('plant and equipment ', 30), (' plant and equipment ', 30), ('plant property equipment', 24), ('property plant equipment', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34), ('plant and equipment ', 33), (' plant and equipment ', 33), (' Property ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 32289.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [32289.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['depreciation', 'accumulated depreciation ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction in progress ', ' Other assets ', ' Capitalised pre stripping costs ', ' Assets under construction ', ' Mine infrastructure ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Subsea ', ' Marine ', ' Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings', 93), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' Marine ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Other assets ', 36), ('accumulated depreciation ', 34), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Mine infrastructure ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), ('depreciation', 29), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), ('depreciation', 43), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings', 33), (' Development properties ', 32), (' Other assets ', 27), (' Fishing vessels & equipment ', 24), (' Construction in progress ', 22), (' Stripping WIP ', 22), (' Subsea ', 17), (' Workshop tooling ', 8)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [(' Other assets ', 45), (' Stripping WIP ', 44), ('depreciation', 43), (' Asset Retirement Obligation ', 42), (' Marine ', 40), (' Facilities ', 40), ('accumulated depreciation ', 33), (' Plant and equipment ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' Assets under construction ', 33), (' under construction ', 33), (' Development properties ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' Subsea ', 17), (' Pipeline Asset ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Assets under construction ', 100), (' under construction ', 100), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), ('depreciation', 57), (' Building & mine infrastructure ', 52), (' Construction in progress ', 50), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets ', 45), ('accumulated depreciation ', 40), (' Plant and equipment ', 40), (' Marine ', 40), (' Leasehold buildings', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 60), (' under construction ', 53), (' Asset Retirement Obligation ', 50), (' Construction in progress ', 50), (' Capitalised pre stripping costs ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), ('depreciation', 46), ('accumulated depreciation ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Development properties ', 40), (' Leasehold buildings', 40), (' Subsea ', 33), (' Plant and equipment ', 30), (' Other assets ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [(' under construction ', 53), (' Construction in progress ', 50), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Other assets ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Marine ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), ('accumulated depreciation ', 30), (' Mine infrastructure ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings', 30), ('depreciation', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' Other assets ', 55), (' Asset Retirement Obligation ', 46), (' Construction in progress ', 46), (' Assets under construction ', 46), (' Marine ', 40), (' Plant and equipment ', 38), (' Capitalised pre stripping costs ', 38), (' Mine infrastructure ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), ('accumulated depreciation ', 31), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), ('depreciation', 29), (' Leasehold buildings', 23), (' Facilities ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [(' Plant and equipment ', 47), (' Other assets ', 45), ('depreciation', 43), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' land and improvement ', 40), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Capitalised pre stripping costs ', 38), (' Assets under construction ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), (' Plant and equipment ', 47), (' Other assets ', 45), (' Construction in progress ', 44), (' Stripping WIP ', 44), ('depreciation', 43), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' under construction ', 40), (' Marine ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' land and improvement ', 47), ('depreciation', 43), (' Fishing vessels & equipment ', 41), (' Plant and equipment ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Other assets ', 36), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), ('accumulated depreciation ', 33), (' Construction in progress ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Development properties ', 31), (' Leasehold buildings', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('depreciation', 100), ('accumulated depreciation ', 100), (' Marine ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Capitalised pre stripping costs ', 43), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings', 40), (' Asset Retirement Obligation ', 36), (' Other assets ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Construction in progress ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), (' Workshop tooling ', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciation', 100), (' Other assets ', 55), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Development properties ', 44), (' Marine ', 40), (' Facilities ', 40), (' Construction in progress ', 39), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Asset Retirement Obligation ', 35), (' Fishing vessels & equipment ', 35), ('accumulated depreciation ', 33), (' Assets under construction ', 33), (' Mine infrastructure ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings', 27), (' Freehold land and buildings ', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciation', 100), (' Marine ', 60), ('accumulated depreciation ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Development properties ', 38), (' Other assets ', 36), (' Building & mine infrastructure ', 35), (' land and improvement ', 34), (' Construction in progress ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), (' Workshop tooling ', 23), (' Leasehold buildings', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Marine ', 60), (' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), ('accumulated depreciation ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Mining properties ', 31), (' Development properties ', 31), (' Workshop tooling ', 31), ('depreciation', 29), (' Asset Retirement Obligation ', 29), (' Construction in progress ', 28), (' Other assets ', 27), (' Leasehold buildings', 27), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Stripping WIP ', 22), (' Plant and equipment ', 20), (' Subsea ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction in progress ', 40), (' Assets under construction ', 40), (' Mine infrastructure ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Facilities ', 40), (' Leasehold buildings', 40), ('accumulated depreciation ', 20), (' Other assets ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Subsea ', 20), (' Marine ', 20), (' Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('depreciation', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 17, 18, 18, 19, 19, 20, 21, 28, 29, 30, 39, 40, 41, 44, 45, 46, 47, 48, 49, 50, 50, 51, 51, 52, 52, 53, 54, 61, 62, 63], 'score': [93, 93, 93, 93, 93, 93, 100, 93, 100, 93, 100, 93, 93, 93, 93, 93, 93, 93, 93, 93, 100, 93, 100, 93, 100, 93, 93, 93, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [14380.0, 0.0, 67.0, 0.0, 0.0, 14447.0, 8225.0, 8225.0, 413.0, 413.0, 8638.0, 8638.0, 5809.0, 6155.0, 3883.0, 0.0, 0.0, 0.0, 0.0, 3883.0, 1015.0, 1015.0, 368.0, 368.0, 1383.0, 1383.0, 2500.0, 2868.0, 6365.0, 2244.0, 8609.0, 44.0, 0.0, 44.0, 7002.0, 1421.0, -1229.0, 0.0, 0.0, 7194.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 7194.0, 7002.0, 15649.0, 3025.0, 18674.0], 'label': ["Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", 'Accumulated depreciation At 1 April 2022', "Land and Leasehold buldingsimprovements $'000", 'Depreciation expense for the year', "Land and Leasehold buldingsimprovements $'000", 'Depreciation expense At 31 March 2023', "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", 'Accumulated depreciation At 1 April 2022', "Land and Leasehold buldingsimprovements $'000", 'Depreciation expense for the year', "Land and Leasehold buldingsimprovements $'000", 'Depreciation expense At 31 March 2023', "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", 'Accumulated depreciation At 1 April 2022', 'Depreciation expense for the year', 'Depreciation expense At 31 March 2023', 'Accumulated depreciation At 1 April 2022', 'Depreciation expense for the year', 'Depreciation expense At 31 March 2023', "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", 'Accumulated depreciation At 1 April 2022', "Assets under construction $'000", 'Depreciation expense for the year', "Assets under construction $'000", 'Depreciation expense At 31 March 2023', "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", 'Accumulated depreciation At 1 April 2022', 'Depreciation expense for the year', 'Depreciation expense At 31 March 2023'], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows']}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['cost', 'gross', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('gross', 40), ('net book value', 31), ('cost', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost', 50), ('net book value', 45), ('net value', 38), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('cost', 75), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost', 100), ('net value', 50), ('gross', 40), ('net book value', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost', 100), ('gross', 40), ('net value', 38), ('net book value', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost', 50), ('net value', 50), ('gross', 40), ('net book value', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost', 50), ('net value', 38), ('net book value', 31), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('net value', 38), ('net book value', 31), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('cost', 25), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('cost', 50), ('net book value', 40), ('gross', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 9, 10, 11, 12, 13, 20, 21, 22, 23, 24, 31, 32, 33, 34, 35, 42, 43, 44, 45, 46, 53, 54, 55, 56, 57, 64, 65], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [14380.0, 0.0, 67.0, 5809.0, 6155.0, 3883.0, 0.0, 0.0, 2500.0, 2868.0, 22180.0, 263.0, 1162.0, 14996.0, 15815.0, 2242.0, 2756.0, 0.0, 1790.0, 2198.0, 7002.0, 1421.0, -1229.0, 7194.0, 7002.0, 49687.0, 4440.0, 0.0, 32289.0, 34038.0], 'label': ['Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:50+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment', 'property plant equipment']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_net_ppe
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 34038.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [34038.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['plant property equipment', 'property plant equipment'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('plant property equipment', 30), ('property plant equipment', 30)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('plant property equipment', 23), ('property plant equipment', 23)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('plant property equipment', 29), ('property plant equipment', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment', 91), ('property plant equipment', 91)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('plant property equipment', 31), ('property plant equipment', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('plant property equipment', 24), ('property plant equipment', 24)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('plant property equipment', 34), ('property plant equipment', 34)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 32289.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [32289.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:50+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['construction in progress ', ' work in progress ', ' capital works in progress']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('Work in progress ', 50), (' plant property equipment ', 50), (' property plant equipment ', 50), (' investment property', 50), (' plant and equipment ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' plant and equipment ', 53), (' plant property equipment ', 33), (' property plant equipment ', 33), ('Work in progress ', 15), (' investment property', 13)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' plant and equipment ', 47), (' property plant equipment ', 40), (' investment property', 40), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' plant property equipment ', 60), (' property plant equipment ', 60), (' investment property', 60), (' plant and equipment ', 40), ('Work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 34038.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [34038.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['Work in progress ', ' plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('Work in progress ', 38), (' property plant equipment ', 38), (' plant property equipment ', 31), (' plant and equipment ', 31), (' investment property', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' plant and equipment ', 47), (' plant property equipment ', 46), (' property plant equipment ', 45), (' investment property', 40), ('Work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('Work in progress ', 50), (' plant property equipment ', 50), (' property plant equipment ', 50), (' investment property', 50), (' plant and equipment ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment property', 34), (' property plant equipment ', 33), ('Work in progress ', 31), (' plant property equipment ', 27), (' plant and equipment ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' plant and equipment ', 53), (' plant property equipment ', 33), (' property plant equipment ', 33), ('Work in progress ', 15), (' investment property', 13)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' plant and equipment ', 100), (' property plant equipment ', 80), (' plant property equipment ', 60), (' investment property', 47), ('Work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' plant and equipment ', 47), (' property plant equipment ', 40), (' investment property', 40), (' plant property equipment ', 35), ('Work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' plant property equipment ', 60), (' property plant equipment ', 60), (' investment property', 60), (' plant and equipment ', 40), ('Work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' property plant equipment ', 40), (' investment property', 34), (' plant property equipment ', 33), ('Work in progress ', 31), (' plant and equipment ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 100, 'value': 32289.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [32289.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['construction in progress ', ' work in progress ', ' capital works in progress'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 31), (' capital works in progress', 26)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' capital works in progress', 26), ('construction in progress ', 22), (' work in progress ', 15)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('construction in progress ', 33), (' work in progress ', 33), (' capital works in progress', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 37), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('construction in progress ', 50), (' work in progress ', 40), (' capital works in progress', 40)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('construction in progress ', 50), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('construction in progress ', 46), (' capital works in progress', 38), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('construction in progress ', 44), (' capital works in progress', 42), (' work in progress ', 38)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('construction in progress ', 33), (' capital works in progress', 32), (' work in progress ', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('construction in progress ', 39), (' work in progress ', 38), (' capital works in progress', 37)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' work in progress ', 38), ('construction in progress ', 33), (' capital works in progress', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' capital works in progress', 32), (' work in progress ', 31), ('construction in progress ', 28)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('construction in progress ', 40), (' capital works in progress', 40), (' work in progress ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:50+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['tangible assets']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_tangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('tangible assets', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('tangible assets', 36)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('tangible assets', 39)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('tangible assets', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['tangible assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('tangible assets', 54)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('tangible assets', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('tangible assets', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('tangible assets', 50)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('tangible assets', 36)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('tangible assets', 32)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('tangible assets', 39)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('tangible assets', 22)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('tangible assets', 57)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_goodwill
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' intangible asset', 17), ('goodwill ', 0), (' goodwill on consolidation ', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' intangible asset', 42), (' goodwill on consolidation ', 27), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('goodwill ', 40), (' goodwill on consolidation ', 40), (' intangible asset', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': 16285.0, 'line_item_label': ['Intangible assets and software under development'], 'note_numbers': ['11'], 'line_item_value': [16285.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['goodwill ', ' goodwill on consolidation ', ' intangible asset'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible asset', 58), (' goodwill on consolidation ', 23), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible asset', 33), (' goodwill on consolidation ', 25), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' intangible asset', 17), ('goodwill ', 0), (' goodwill on consolidation ', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' intangible asset', 58), ('goodwill ', 29), (' goodwill on consolidation ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' intangible asset', 42), (' goodwill on consolidation ', 27), ('goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' intangible asset', 50), (' goodwill on consolidation ', 38), ('goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' intangible asset', 100), (' goodwill on consolidation ', 31), ('goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('goodwill ', 40), (' goodwill on consolidation ', 40), (' intangible asset', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' intangible asset', 70), (' goodwill on consolidation ', 20), ('goodwill ', 0)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [6], 'score': 100, 'value': 24558.0, 'line_item_label': ['Intangible assets and software under development'], 'note_numbers': ['11'], 'line_item_value': [24558.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:50+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:50+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_intangible_assets
2023-08-28 10:54:50+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' plant property equipment', 50), ('property plant equipment', 50), (' intangible under development ', 33), (' intangible assets under development ', 33), ('intangible assets ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' intangible under development ', 53), ('intangible assets ', 42), (' intangible assets under development ', 40), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('intangible assets ', 100), (' intangible under development ', 80), (' intangible assets under development ', 73), ('property plant equipment', 40), (' plant property equipment', 35)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' intangible under development ', 60), (' intangible assets under development ', 60), (' plant property equipment', 60), ('property plant equipment', 60), ('intangible assets ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': 50323.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets and software under development'], 'note_numbers': ['10', '11'], 'line_item_value': [34038.0, 16285.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['intangible assets ', ' intangible under development ', ' intangible assets under development ', ' plant property equipment', 'property plant equipment'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' intangible assets under development ', 62), ('intangible assets ', 58), (' intangible under development ', 38), ('property plant equipment', 38), (' plant property equipment', 31)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' intangible assets under development ', 50), (' plant property equipment', 46), (' intangible under development ', 45), ('property plant equipment', 45), ('intangible assets ', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' plant property equipment', 50), ('property plant equipment', 50), (' intangible under development ', 33), (' intangible assets under development ', 33), ('intangible assets ', 17)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('intangible assets ', 58), (' intangible assets under development ', 53), ('property plant equipment', 33), (' intangible under development ', 27), (' plant property equipment', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' intangible under development ', 53), ('intangible assets ', 42), (' intangible assets under development ', 40), (' plant property equipment', 33), ('property plant equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('property plant equipment', 80), (' plant property equipment', 60), ('intangible assets ', 50), (' intangible under development ', 49), (' intangible assets under development ', 42)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('intangible assets ', 100), (' intangible under development ', 80), (' intangible assets under development ', 73), ('property plant equipment', 40), (' plant property equipment', 35)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' intangible under development ', 60), (' intangible assets under development ', 60), (' plant property equipment', 60), ('property plant equipment', 60), ('intangible assets ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('intangible assets ', 70), ('property plant equipment', 40), (' intangible under development ', 33), (' intangible assets under development ', 33), (' plant property equipment', 33)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [5, 6], 'score': 100, 'value': 56847.0, 'line_item_label': ['Property, plant and equipment', 'Intangible assets and software under development'], 'note_numbers': ['10', '11'], 'line_item_value': [32289.0, 24558.0]}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' development and software ', 42), (' water licenses', 42), ('Other intangibles ', 33), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' software ', 29), (' consumer contracts ', 27), (' computer software ', 21)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' mining rights ', 60), (' development and software ', 42), (' consumer contracts ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' water licenses', 33), (' software ', 29), (' computer software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('Other intangibles ', 43), (' software ', 43), (' consumer contracts ', 42), (' water licenses', 42), (' computer software ', 33), (' mining rights ', 30), (' goodwill ', 29), (' development and software ', 25), (' carrying amounts ', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' consumer contracts ', 60), (' water licenses', 58), (' software ', 43), ('Other intangibles ', 42), (' development and software ', 42), (' carrying amounts ', 42), (' mining rights ', 40), (' computer software ', 36), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' water licenses', 50), (' consumer contracts ', 47), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' water licenses', 42), (' mining rights ', 40), (' development and software ', 37), (' computer software ', 36), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 35), ('Other intangibles ', 33), (' water licenses', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 47), (' software ', 43), (' development and software ', 42), (' water licenses', 42), (' mining rights ', 40), (' computer software ', 36), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' software ', 43), (' development and software ', 42), (' water licenses', 42), (' consumer contracts ', 40), (' mining rights ', 40), (' computer software ', 36), ('Other intangibles ', 33), (' carrying amounts ', 33), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:50+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:50+0530 - sLogger - DEBUG - keywords = ['Other intangibles ', ' development and software ', ' goodwill ', ' software ', ' carrying amounts ', ' computer software ', ' consumer contracts ', ' mining rights ', ' water licenses'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' goodwill ', 43), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' carrying amounts ', 27), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 31 march 2023 , res_fuzz_match = [(' software ', 57), (' consumer contracts ', 50), (' development and software ', 40), (' computer software ', 40), ('Other intangibles ', 30), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 1a april 2022 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' carrying amounts ', 58), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 38), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' water licenses', 42), (' mining rights ', 40), ('Other intangibles ', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = computer software $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 100), (' development and software ', 71), (' consumer contracts ', 50), ('Other intangibles ', 42), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 29), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' goodwill ', 43), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' carrying amounts ', 27), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 31 march 2023 , res_fuzz_match = [(' software ', 57), (' consumer contracts ', 50), (' development and software ', 40), (' computer software ', 40), ('Other intangibles ', 30), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 1a april 2022 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' carrying amounts ', 58), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 38), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' water licenses', 42), (' mining rights ', 40), ('Other intangibles ', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = software under development $'000 , res_fuzz_match = [(' software ', 100), (' computer software ', 50), (' water licenses', 50), ('Other intangibles ', 42), (' carrying amounts ', 42), (' development and software ', 37), (' mining rights ', 30), (' goodwill ', 29), (' consumer contracts ', 27)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [(' software ', 57), (' development and software ', 40), (' carrying amounts ', 40), (' computer software ', 40), (' consumer contracts ', 40), ('Other intangibles ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('Other intangibles ', 50), (' consumer contracts ', 50), (' software ', 43), (' development and software ', 40), (' computer software ', 40), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [(' consumer contracts ', 54), ('Other intangibles ', 50), (' development and software ', 46), (' computer software ', 46), (' software ', 43), (' water licenses', 35), (' carrying amounts ', 33), (' mining rights ', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' software ', 29), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost disposals , res_fuzz_match = [(' computer software ', 55), (' development and software ', 45), (' consumer contracts ', 45), (' goodwill ', 43), (' water licenses', 36), (' software ', 29), ('Other intangibles ', 27), (' carrying amounts ', 27), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = cost at 31 march 2023 , res_fuzz_match = [(' software ', 57), (' consumer contracts ', 50), (' development and software ', 40), (' computer software ', 40), ('Other intangibles ', 30), (' carrying amounts ', 30), (' mining rights ', 30), (' water licenses', 30), (' goodwill ', 14)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 1a april 2022 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation amortisation , res_fuzz_match = [(' carrying amounts ', 58), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 38), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation effect of movement in exchange rate , res_fuzz_match = [('Other intangibles ', 50), (' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), (' water licenses', 33), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation disposals , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' computer software ', 43), (' water licenses', 42), (' mining rights ', 40), ('Other intangibles ', 33), (' development and software ', 32), (' goodwill ', 29), (' software ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = accumulated amortisation at 31 march 2023 , res_fuzz_match = [(' carrying amounts ', 50), (' consumer contracts ', 47), (' software ', 43), (' computer software ', 43), (' mining rights ', 40), (' development and software ', 37), ('Other intangibles ', 33), (' water licenses', 33), (' goodwill ', 29)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' goodwill ', 43), (' development and software ', 38), (' computer software ', 36), (' consumer contracts ', 33), (' mining rights ', 30), (' software ', 29), ('Other intangibles ', 25), (' carrying amounts ', 25), (' water licenses', 25)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' development and software ', 60), (' software ', 60), (' computer software ', 60), (' consumer contracts ', 60), ('Other intangibles ', 40), (' goodwill ', 40), (' carrying amounts ', 40), (' water licenses', 40), (' mining rights ', 20)]
2023-08-28 10:54:50+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [19512.0, 3.0, 5874.0, 11.0, -1040.0, 24360.0, 15050.0, 1555.0, 10.0, -973.0, 15642.0, 8718.0, 4462.0, 11823.0, 9890.0, -5874.0, 1.0, 0.0, 15840.0, 0.0, 0.0, 0.0, 0.0, 0.0, 15840.0, 11823.0], 'label': ["Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Computer software $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000", "Software under development $'000"], 'year': [], 'colname_found': ['columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['donations']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_intangible_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('donations', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('donations', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('donations', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['donations'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('donations', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('donations', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('donations', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('donations', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('donations', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('donations', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('donations', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year ', ' Interest swap']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_investments
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method ', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), (' Other investment including derivatives', 38), ('investment', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Other investment including derivatives', 47), ('joint ventures and associates', 45), (' investments accounted for using the equity method ', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('joint ventures and associates', 33), ('derivative financial instruments', 33), (' investment in associate', 33), (' investments accounted for using the equity method ', 33), ('investment', 17), (' investment in joint venture', 17), (' Other investment including derivatives', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method ', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' Other investment including derivatives', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('joint ventures and associates', 53), (' Other investment including derivatives', 41), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' investment in associate', 31), (' investments accounted for using the equity method ', 27), ('investment', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Other investment including derivatives', 50), ('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method ', 38), ('investment', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' investment in associate', 54), ('joint ventures and associates', 52), ('investment', 50), (' Other investment including derivatives', 48), ('derivative financial instruments', 42), (' investments accounted for using the equity method ', 42), (' investment in joint venture', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('derivative financial instruments', 100), (' Other investment including derivatives', 100), (' investment in joint venture', 40), (' investments accounted for using the equity method ', 40), ('investment', 20), ('joint ventures and associates', 20), (' investment in associate', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method ', 40), ('investment', 33), (' Other investment including derivatives', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 44927.0, 'line_item_label': ['Derivatives'], 'note_numbers': ['17'], 'line_item_value': [44927.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['investment', 'joint ventures and associates', 'derivative financial instruments', ' investment in joint venture', ' investment in associate', ' investments accounted for using the equity method ', ' Other investment including derivatives'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' investments accounted for using the equity method ', 54), ('joint ventures and associates', 46), ('derivative financial instruments', 46), (' investment in associate', 40), (' investment in joint venture', 38), (' Other investment including derivatives', 38), ('investment', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Other investment including derivatives', 47), ('joint ventures and associates', 45), (' investments accounted for using the equity method ', 45), ('derivative financial instruments', 36), ('investment', 33), (' investment in joint venture', 32), (' investment in associate', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('joint ventures and associates', 33), ('derivative financial instruments', 33), (' investment in associate', 33), (' investments accounted for using the equity method ', 33), ('investment', 17), (' investment in joint venture', 17), (' Other investment including derivatives', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' investment in associate', 46), ('joint ventures and associates', 40), (' investments accounted for using the equity method ', 40), ('investment', 33), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' Other investment including derivatives', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('joint ventures and associates', 53), (' Other investment including derivatives', 41), ('derivative financial instruments', 33), (' investment in joint venture', 33), (' investment in associate', 31), (' investments accounted for using the equity method ', 27), ('investment', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' Other investment including derivatives', 50), ('joint ventures and associates', 49), (' investment in joint venture', 42), ('derivative financial instruments', 40), (' investment in associate', 38), (' investments accounted for using the equity method ', 38), ('investment', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' investment in associate', 54), ('joint ventures and associates', 52), ('investment', 50), (' Other investment including derivatives', 48), ('derivative financial instruments', 42), (' investments accounted for using the equity method ', 42), (' investment in joint venture', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('derivative financial instruments', 100), (' Other investment including derivatives', 100), (' investment in joint venture', 40), (' investments accounted for using the equity method ', 40), ('investment', 20), ('joint ventures and associates', 20), (' investment in associate', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('joint ventures and associates', 53), (' investment in associate', 48), ('derivative financial instruments', 40), (' investment in joint venture', 40), (' investments accounted for using the equity method ', 40), ('investment', 33), (' Other investment including derivatives', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 43770.0, 'line_item_label': ['Derivatives'], 'note_numbers': ['17'], 'line_item_value': [43770.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year ', ' Interest swap'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity 0-6 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity 0-6 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity 6-12 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity 6-12 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity > 12 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity > 12 months $'000 , res_fuzz_match = [(' carrying amount at the end of the financial year ', 64), ('investment in joint venture', 45), (' investment in associate', 27), (' Interest swap', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity total $'000 , res_fuzz_match = [('investment in joint venture', 36), (' carrying amount at the end of the financial year ', 36), (' Interest swap', 36), (' investment in associate', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps notional amount (in $000) , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = maturity total $'000 , res_fuzz_match = [('investment in joint venture', 36), (' carrying amount at the end of the financial year ', 36), (' Interest swap', 36), (' investment in associate', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['investment in joint venture', ' investment in associate', ' carrying amount at the end of the financial year ', ' Interest swap'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps total assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps total liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rate swaps liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), (' carrying amount at the end of the financial year ', 44), ('investment in joint venture', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps total assets , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest rates swaps total liabilities , res_fuzz_match = [(' Interest swap', 77), (' investment in associate', 54), ('investment in joint venture', 42), (' carrying amount at the end of the financial year ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('investment in joint venture', 0), (' investment in associate', 0), (' carrying amount at the end of the financial year ', 0), (' Interest swap', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: cannot convert float NaN to integer
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred charges', 'deferred tax', 'deferred tax assets']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax assets', ' deferred tax balances']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_deffered_charges
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('deferred tax assets', 33), ('deferred tax', 25), ('deferred charges', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('deferred tax assets', 45), ('deferred charges', 29), ('deferred tax', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('deferred tax', 43), ('deferred charges', 38), ('deferred tax assets', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 41012.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [41012.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred charges', 'deferred tax', 'deferred tax assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [('deferred tax assets', 50), ('deferred charges', 25), ('deferred tax', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('deferred tax assets', 43), ('deferred tax', 39), ('deferred charges', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [('deferred tax', 27), ('deferred charges', 24), ('deferred tax assets', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [('deferred tax assets', 53), ('deferred charges', 31), ('deferred tax', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [('deferred tax assets', 33), ('deferred tax', 25), ('deferred charges', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('deferred tax assets', 36), ('deferred tax', 30), ('deferred charges', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [('deferred tax assets', 45), ('deferred charges', 29), ('deferred tax', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('deferred tax', 43), ('deferred charges', 38), ('deferred tax assets', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), ('deferred tax', 75), ('deferred charges', 54)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 37732.0, 'line_item_label': ['Deferred tax assets'], 'note_numbers': ['5'], 'line_item_value': [37732.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('deferred tax assets', 80), (' deferred tax balances', 75)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('deferred tax assets', 53), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('deferred tax assets', 80), (' deferred tax balances', 75)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 6], 'score': [80, 80], 'value': [2700.0, -2741.0], 'label': ['Deferred tax: Relating to the origination and reversal of temporary differences', 'Deferred tax: Relating to the origination and reversal of temporary differences'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' deferred tax balances', 44), ('deferred tax assets', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [('deferred tax assets', 12), (' deferred tax balances', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [('deferred tax assets', 30), (' deferred tax balances', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' deferred tax balances', 38), ('deferred tax assets', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('deferred tax assets', 73), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred tax balances', 75), ('deferred tax assets', 73)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [('deferred tax assets', 100), (' deferred tax balances', 69)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [('deferred tax assets', 27), (' deferred tax balances', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [(' deferred tax balances', 31), ('deferred tax assets', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [('deferred tax assets', 40), (' deferred tax balances', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [10, 11, 13, 15, 32, 33, 35, 37, 54, 55, 57, 59, 76, 77, 79, 81], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [37732.0, 113695.0, 37732.0, 0.0, 41012.0, 113149.0, 41012.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0], 'label': ['None Net deferred tax assets', 'financial position as follows: Deferred tax assets', 'financial position as follows: Deferred tax assets, net', 'financial position as follows: Reconciliation of deferred tax assets, net', 'None Net deferred tax assets', 'financial position as follows: Deferred tax assets', 'financial position as follows: Deferred tax assets, net', 'financial position as follows: Reconciliation of deferred tax assets, net', 'None Net deferred tax assets', 'financial position as follows: Deferred tax assets', 'financial position as follows: Deferred tax assets, net', 'financial position as follows: Reconciliation of deferred tax assets, net', 'None Net deferred tax assets', 'financial position as follows: Deferred tax assets', 'financial position as follows: Deferred tax assets, net', 'financial position as follows: Reconciliation of deferred tax assets, net'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred tax assets', ' deferred tax balances'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('deferred tax assets', 33), (' deferred tax balances', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('deferred tax assets', 60), (' deferred tax balances', 56)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('deferred tax assets', 47), (' deferred tax balances', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('deferred tax assets', 0), (' deferred tax balances', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['finance receivables', ' allowance for expected credit losses', ' electricity derivatives at fair value', ' defined benefit plans', ' right-of-use-assets', ' exploration and evaluation expenditure', ' total properties', ' warehouse and office equipment', ' motor vehicles']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = nca_other_assets
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' leases', 40), (' leased assets', 25), (' exploration and evaluation expenditure', 24), (' loan receivables', 24), (' financial assets', 21), (' other non-current assets', 16), (' other non-current assets', 16), ('non-current', 15), (' other assets', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' exploration and evaluation expenditure', 48), (' financial assets', 36), (' leased assets', 32), (' loan receivables', 31), (' other non-current assets', 29), (' other non-current assets', 29), ('non-current', 27), (' other assets', 23), (' leases', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' other non-current assets', 46), (' other non-current assets', 46), (' exploration and evaluation expenditure', 43), (' other assets', 41), (' financial assets', 39), (' leased assets', 38), (' loan receivables', 29), ('non-current', 22), (' leases', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' loan receivables', 38), (' other assets', 25), (' financial assets', 22), (' leases', 22), (' exploration and evaluation expenditure', 19), ('non-current', 17), (' other non-current assets', 17), (' other non-current assets', 17), (' leased assets', 13)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['non-current', ' financial assets', ' other non-current assets', ' exploration and evaluation expenditure', ' other assets', ' loan receivables', ' other non-current assets', ' leased assets', ' leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' other non-current assets', 81), (' other non-current assets', 81), ('non-current', 70), (' financial assets', 69), (' other assets', 67), (' leased assets', 52), (' exploration and evaluation expenditure', 35), (' loan receivables', 25), (' leases', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' loan receivables', 55), (' exploration and evaluation expenditure', 49), (' other assets', 42), (' other non-current assets', 39), (' other non-current assets', 39), (' leased assets', 31), (' financial assets', 29), ('non-current', 28), (' leases', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' leases', 40), (' leased assets', 25), (' exploration and evaluation expenditure', 24), (' loan receivables', 24), (' financial assets', 21), (' other non-current assets', 16), (' other non-current assets', 16), ('non-current', 15), (' other assets', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' leased assets', 56), (' other assets', 54), (' financial assets', 50), (' other non-current assets', 47), (' other non-current assets', 47), (' loan receivables', 31), (' exploration and evaluation expenditure', 29), (' leases', 21), ('non-current', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' exploration and evaluation expenditure', 48), (' financial assets', 36), (' leased assets', 32), (' loan receivables', 31), (' other non-current assets', 29), (' other non-current assets', 29), ('non-current', 27), (' other assets', 23), (' leases', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [(' exploration and evaluation expenditure', 55), (' other assets', 40), (' loan receivables', 40), (' other non-current assets', 37), (' other non-current assets', 37), (' financial assets', 32), (' leased assets', 29), ('non-current', 26), (' leases', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' other non-current assets', 46), (' other non-current assets', 46), (' exploration and evaluation expenditure', 43), (' other assets', 41), (' financial assets', 39), (' leased assets', 38), (' loan receivables', 29), ('non-current', 22), (' leases', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' loan receivables', 38), (' other assets', 25), (' financial assets', 22), (' leases', 22), (' exploration and evaluation expenditure', 19), ('non-current', 17), (' other non-current assets', 17), (' other non-current assets', 17), (' leased assets', 13)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' leased assets', 64), (' other assets', 62), (' financial assets', 57), (' other non-current assets', 53), (' other non-current assets', 53), (' exploration and evaluation expenditure', 38), (' loan receivables', 31), (' leases', 21), ('non-current', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 81, 'value': 0.0, 'line_item_label': ['Non-current assets'], 'note_numbers': [nan], 'line_item_value': [0.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation ']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['bank borrowings ', ' utilised bank borrowings ', ' leases ', ' not later than 1 year ', ' not later than one year ', ' secured long-term bank loans ', ' loans from related party ', ' lease liabilities - current ', ' lease liabilities ', ' bank overdraft ', ' balance at the end of period ', ' cash overdraft ', ' current ', ' obligations under finance lease ', ' bank loans']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_short_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' Lease obligation ', 33), (' cash and cash equivalents ', 29), ('  leases ', 22), (' cash ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' lease liabilities ', 47), (' loans and borrowings ', 47), (' cash and cash equivalents ', 45), (' interest bearing liabilites ', 44), (' short-term debt ', 38), (' shortterm debt ', 38), (' bank overdraft ', 38), ('short term debt ', 37), (' Lease obligation ', 36), (' shortterm borrowings ', 31), ('  leases ', 22), (' borrowings ', 21), (' cash ', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation ', 67), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' loans and borrowings ', 31), (' cash ', 27), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' interest bearing liabilites ', 59), (' lease liabilities ', 55), (' bank overdraft ', 33), (' loans and borrowings ', 32), (' Lease obligation ', 31), (' short-term debt ', 28), (' shortterm debt ', 28), (' cash and cash equivalents ', 28), ('short term debt ', 27), ('  leases ', 23), (' shortterm borrowings ', 21), (' borrowings ', 14), (' cash ', 8)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' Lease obligation ', 25), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' interest bearing liabilites ', 73), (' lease liabilities ', 60), (' loans and borrowings ', 35), (' cash and cash equivalents ', 35), (' Lease obligation ', 34), (' short-term debt ', 30), (' shortterm debt ', 30), (' bank overdraft ', 30), ('short term debt ', 29), (' shortterm borrowings ', 29), ('  leases ', 17), (' borrowings ', 16), (' cash ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' interest bearing liabilites ', 37), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 27), (' Lease obligation ', 23), (' short-term debt ', 20), (' shortterm debt ', 20), ('  leases ', 20), (' cash ', 20), ('short term debt ', 19), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' short-term debt ', 32), (' shortterm debt ', 32), (' cash and cash equivalents ', 31), ('short term debt ', 30), (' Lease obligation ', 27), (' lease liabilities ', 25), ('  leases ', 22), (' interest bearing liabilites ', 22), (' bank overdraft ', 21), (' loans and borrowings ', 20), (' shortterm borrowings ', 19), (' borrowings ', 18), (' cash ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 7681.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['12'], 'line_item_value': [7681.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['short term debt ', ' short-term debt ', ' borrowings ', ' shortterm debt ', ' shortterm borrowings ', ' lease liabilities ', ' loans and borrowings ', ' bank overdraft ', '  leases ', ' interest bearing liabilites ', ' cash and cash equivalents ', ' cash ', ' Lease obligation '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' interest bearing liabilites ', 61), (' loans and borrowings ', 34), (' Lease obligation ', 33), (' cash and cash equivalents ', 29), ('  leases ', 22), (' cash ', 22), ('short term debt ', 21), (' short-term debt ', 21), (' shortterm debt ', 21), (' bank overdraft ', 21), (' borrowings ', 20), (' shortterm borrowings ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' lease liabilities ', 47), (' loans and borrowings ', 47), (' cash and cash equivalents ', 45), (' interest bearing liabilites ', 44), (' short-term debt ', 38), (' shortterm debt ', 38), (' bank overdraft ', 38), ('short term debt ', 37), (' Lease obligation ', 36), (' shortterm borrowings ', 31), ('  leases ', 22), (' borrowings ', 21), (' cash ', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation ', 67), (' interest bearing liabilites ', 61), ('  leases ', 53), (' cash and cash equivalents ', 38), (' loans and borrowings ', 31), (' cash ', 27), (' bank overdraft ', 24), ('short term debt ', 23), (' short-term debt ', 16), (' shortterm debt ', 16), (' borrowings ', 12), (' shortterm borrowings ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' interest bearing liabilites ', 59), (' lease liabilities ', 55), (' bank overdraft ', 33), (' loans and borrowings ', 32), (' Lease obligation ', 31), (' short-term debt ', 28), (' shortterm debt ', 28), (' cash and cash equivalents ', 28), ('short term debt ', 27), ('  leases ', 23), (' shortterm borrowings ', 21), (' borrowings ', 14), (' cash ', 8)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' borrowings ', 33), (' shortterm borrowings ', 27), (' Lease obligation ', 25), (' interest bearing liabilites ', 21), (' bank overdraft ', 20), ('  leases ', 20), (' cash ', 20), (' loans and borrowings ', 19), (' lease liabilities ', 12), ('short term debt ', 10), (' short-term debt ', 10), (' shortterm debt ', 10), (' cash and cash equivalents ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' interest bearing liabilites ', 73), (' lease liabilities ', 60), (' loans and borrowings ', 35), (' cash and cash equivalents ', 35), (' Lease obligation ', 34), (' short-term debt ', 30), (' shortterm debt ', 30), (' bank overdraft ', 30), ('short term debt ', 29), (' shortterm borrowings ', 29), ('  leases ', 17), (' borrowings ', 16), (' cash ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' interest bearing liabilites ', 37), (' loans and borrowings ', 32), (' cash and cash equivalents ', 32), (' lease liabilities ', 30), (' bank overdraft ', 27), (' Lease obligation ', 23), (' short-term debt ', 20), (' shortterm debt ', 20), ('  leases ', 20), (' cash ', 20), ('short term debt ', 19), (' shortterm borrowings ', 19), (' borrowings ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' short-term debt ', 32), (' shortterm debt ', 32), (' cash and cash equivalents ', 31), ('short term debt ', 30), (' Lease obligation ', 27), (' lease liabilities ', 25), ('  leases ', 22), (' interest bearing liabilites ', 22), (' bank overdraft ', 21), (' loans and borrowings ', 20), (' shortterm borrowings ', 19), (' borrowings ', 18), (' cash ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 8171.0, 'line_item_label': ['Lease liabilities'], 'note_numbers': ['12'], 'line_item_value': [8171.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_long_term_debt_due_in_year
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_note_payable_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables', 'trade payable', 'other trade payables']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade creditors ', ' trade and other payables ', ' trade payables ', ' trade payables - other parties ', ' amounts payable to controlling entity ', ' other trade payables ', ' payables to related parties ', ' payables ', ' accounts payable - trade ', ' ', ' Related party payables ', ' trade payables - related parties ', ' Trade payable due to related partiees']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accounts_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('trade and other payables', 71), ('other trade payables', 59), ('trade payable', 46)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('trade and other payables', 36), ('other trade payables', 35), ('trade payable', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('trade and other payables', 39), ('other trade payables', 38), ('trade payable', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('trade payable', 24), ('trade and other payables', 22), ('other trade payables', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables', 'trade payable', 'other trade payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33), ('other trade payables', 31), ('trade payable', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('trade and other payables', 71), ('other trade payables', 59), ('trade payable', 46)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade payable', 35), ('other trade payables', 34), ('trade and other payables', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('trade and other payables', 36), ('other trade payables', 35), ('trade payable', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade payable', 22), ('other trade payables', 17), ('trade and other payables', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('trade and other payables', 39), ('other trade payables', 38), ('trade payable', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('other trade payables', 65), ('trade payable', 64), ('trade and other payables', 63)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('trade payable', 24), ('trade and other payables', 22), ('other trade payables', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['trade and other payables']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['accrued expenses ', ' interest accrued ', ' accruals']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_accrued_expenses
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('trade and other payables', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('trade and other payables', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('trade and other payables', 39)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('trade and other payables', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['trade and other payables'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('trade and other payables', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('trade and other payables', 71)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('trade and other payables', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('trade and other payables', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('trade and other payables', 14)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('trade and other payables', 39)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [('trade and other payables', 63)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('trade and other payables', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_tax_payable
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' Current tax payables ', 64), (' income tax payable ', 43), (' Trade and other payables', 37), (' tax ', 33), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' Trade and other payables', 68), ('current tax liabilities ', 56), (' income tax payable ', 44), (' Current tax payables ', 39), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' Current tax payables ', 48), (' Trade and other payables', 45), (' tax ', 33), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current tax liabilities ', 56), (' Current tax payables ', 39), (' Trade and other payables', 39), (' income tax payable ', 38), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision ', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' Current tax payables ', 17), (' Trade and other payables', 17), (' tax ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('current tax liabilities ', 61), (' Current tax payables ', 44), (' Trade and other payables', 43), (' income tax payable ', 38), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable ', 100), (' tax ', 100), (' Current tax payables ', 75), (' Trade and other payables', 62), ('current tax liabilities ', 56), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' provision ', 40), (' Trade and other payables', 40), ('current tax liabilities ', 20), (' Current tax payables ', 20), (' income tax payable ', 0), (' tax ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 6], 'score': 100, 'value': 40483.0, 'line_item_label': ['Provisions', 'Income tax payable'], 'note_numbers': ['15', nan], 'line_item_value': [6361.0, 34122.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['current tax liabilities ', ' income tax payable ', ' tax ', ' provision ', ' Current tax payables ', ' Trade and other payables'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('current tax liabilities ', 71), (' Current tax payables ', 64), (' income tax payable ', 43), (' Trade and other payables', 37), (' tax ', 33), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' Trade and other payables', 68), ('current tax liabilities ', 56), (' income tax payable ', 44), (' Current tax payables ', 39), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('current tax liabilities ', 73), (' income tax payable ', 48), (' Current tax payables ', 48), (' Trade and other payables', 45), (' tax ', 33), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('current tax liabilities ', 56), (' Current tax payables ', 39), (' Trade and other payables', 39), (' income tax payable ', 38), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provision ', 100), ('current tax liabilities ', 17), (' income tax payable ', 17), (' Current tax payables ', 17), (' Trade and other payables', 17), (' tax ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('current tax liabilities ', 61), (' Current tax payables ', 44), (' Trade and other payables', 43), (' income tax payable ', 38), (' tax ', 33), (' provision ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' income tax payable ', 100), (' tax ', 100), (' Current tax payables ', 75), (' Trade and other payables', 62), ('current tax liabilities ', 56), (' provision ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' provision ', 40), (' Trade and other payables', 40), ('current tax liabilities ', 20), (' Current tax payables ', 20), (' income tax payable ', 0), (' tax ', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 6], 'score': 100, 'value': 35748.0, 'line_item_label': ['Provisions', 'Income tax payable'], 'note_numbers': ['15', nan], 'line_item_value': [18275.0, 17473.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['income tax (refundable)/payable ', ' provision for income tax ', ' tax receivable/payable'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' tax receivable/payable', 33), (' provision for income tax ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [('income tax (refundable)/payable ', 40), (' tax receivable/payable', 33), (' provision for income tax ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax (refundable)/payable ', 0), (' provision for income tax ', 0), (' tax receivable/payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = cl_other_current_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' Contract Liabilities ', 69), (' derivative liabilities ', 62), (' financial liabilities', 57), (' foreign exchange contract liability ', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), (' Derivative financial instruments ', 26), (' Deferred income', 24), ('provisions', 20), (' Provision ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' trade and other payables', 71), (' other financial liabilities', 70), ('other current liabilities', 65), (' other current liabilities', 65), (' financial liabilities', 49), (' derivative liabilities ', 46), (' Contract Liabilities ', 42), (' foreign exchange contract liability ', 37), (' Derivative financial instruments ', 34), (' employee benefits', 32), (' Deferred income', 24), (' deferred revenue', 23), (' customer deposits', 16), ('provisions', 7), (' Provision ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' derivative liabilities ', 70), (' financial liabilities', 64), (' Contract Liabilities ', 62), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability ', 43), (' trade and other payables', 30), (' Derivative financial instruments ', 29), (' Deferred income', 27), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12), (' Provision ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' employee benefits', 81), (' derivative liabilities ', 53), (' financial liabilities', 50), (' foreign exchange contract liability ', 49), (' Contract Liabilities ', 49), ('other current liabilities', 48), (' other current liabilities', 48), (' other financial liabilities', 43), (' trade and other payables', 36), (' customer deposits', 33), (' Deferred income', 30), (' deferred revenue', 29), (' Derivative financial instruments ', 26), ('provisions', 21), (' Provision ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' Provision ', 100), (' derivative liabilities ', 33), (' customer deposits', 30), (' Derivative financial instruments ', 27), (' Deferred income', 24), (' deferred revenue', 22), (' employee benefits', 19), (' Contract Liabilities ', 19), (' foreign exchange contract liability ', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' Contract Liabilities ', 65), (' financial liabilities', 61), (' derivative liabilities ', 58), (' foreign exchange contract liability ', 56), ('other current liabilities', 51), (' other current liabilities', 51), (' other financial liabilities', 51), (' trade and other payables', 39), (' Deferred income', 33), (' employee benefits', 29), (' Derivative financial instruments ', 28), (' deferred revenue', 26), (' customer deposits', 24), ('provisions', 16), (' Provision ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' Contract Liabilities ', 39), (' Deferred income', 37), (' derivative liabilities ', 36), (' foreign exchange contract liability ', 30), (' employee benefits', 26), (' Derivative financial instruments ', 25), ('provisions', 9), (' Provision ', 9), (' deferred revenue', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' derivative liabilities ', 59), (' Deferred income', 50), (' deferred revenue', 47), ('provisions', 36), (' Provision ', 36), (' Derivative financial instruments ', 34), (' customer deposits', 32), (' trade and other payables', 22), (' employee benefits', 20), (' Contract Liabilities ', 20), (' foreign exchange contract liability ', 17), ('other current liabilities', 16), (' other current liabilities', 16), (' other financial liabilities', 16), (' financial liabilities', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 26835.0, 'line_item_label': ['Current liabilities', 'Employee benefit liabilities', 'Provisions'], 'note_numbers': [nan, '14', '15'], 'line_item_value': [0.0, 20474.0, 6361.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other current liabilities', 'provisions', ' financial liabilities', ' trade and other payables', ' employee benefits', ' other current liabilities', ' other financial liabilities', ' deferred revenue', ' customer deposits', ' foreign exchange contract liability ', ' derivative liabilities ', ' Provision ', ' Contract Liabilities ', ' Derivative financial instruments ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current liabilities , res_fuzz_match = [('other current liabilities', 82), (' other current liabilities', 82), (' Contract Liabilities ', 69), (' derivative liabilities ', 62), (' financial liabilities', 57), (' foreign exchange contract liability ', 53), (' other financial liabilities', 47), (' customer deposits', 36), (' employee benefits', 34), (' trade and other payables', 33), (' deferred revenue', 31), (' Derivative financial instruments ', 26), (' Deferred income', 24), ('provisions', 20), (' Provision ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' trade and other payables', 71), (' other financial liabilities', 70), ('other current liabilities', 65), (' other current liabilities', 65), (' financial liabilities', 49), (' derivative liabilities ', 46), (' Contract Liabilities ', 42), (' foreign exchange contract liability ', 37), (' Derivative financial instruments ', 34), (' employee benefits', 32), (' Deferred income', 24), (' deferred revenue', 23), (' customer deposits', 16), ('provisions', 7), (' Provision ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' derivative liabilities ', 70), (' financial liabilities', 64), (' Contract Liabilities ', 62), ('other current liabilities', 52), (' other current liabilities', 52), (' other financial liabilities', 52), (' foreign exchange contract liability ', 43), (' trade and other payables', 30), (' Derivative financial instruments ', 29), (' Deferred income', 27), (' customer deposits', 24), (' employee benefits', 23), (' deferred revenue', 17), ('provisions', 12), (' Provision ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' employee benefits', 81), (' derivative liabilities ', 53), (' financial liabilities', 50), (' foreign exchange contract liability ', 49), (' Contract Liabilities ', 49), ('other current liabilities', 48), (' other current liabilities', 48), (' other financial liabilities', 43), (' trade and other payables', 36), (' customer deposits', 33), (' Deferred income', 30), (' deferred revenue', 29), (' Derivative financial instruments ', 26), ('provisions', 21), (' Provision ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('provisions', 100), (' Provision ', 100), (' derivative liabilities ', 33), (' customer deposits', 30), (' Derivative financial instruments ', 27), (' Deferred income', 24), (' deferred revenue', 22), (' employee benefits', 19), (' Contract Liabilities ', 19), (' foreign exchange contract liability ', 16), ('other current liabilities', 15), (' other current liabilities', 15), (' trade and other payables', 14), (' financial liabilities', 10), (' other financial liabilities', 8)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' Contract Liabilities ', 65), (' financial liabilities', 61), (' derivative liabilities ', 58), (' foreign exchange contract liability ', 56), ('other current liabilities', 51), (' other current liabilities', 51), (' other financial liabilities', 51), (' trade and other payables', 39), (' Deferred income', 33), (' employee benefits', 29), (' Derivative financial instruments ', 28), (' deferred revenue', 26), (' customer deposits', 24), ('provisions', 16), (' Provision ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = income tax payable , res_fuzz_match = [(' trade and other payables', 63), (' other financial liabilities', 50), (' financial liabilities', 47), (' customer deposits', 40), ('other current liabilities', 39), (' other current liabilities', 39), (' Contract Liabilities ', 39), (' Deferred income', 37), (' derivative liabilities ', 36), (' foreign exchange contract liability ', 30), (' employee benefits', 26), (' Derivative financial instruments ', 25), ('provisions', 9), (' Provision ', 9), (' deferred revenue', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' derivative liabilities ', 59), (' Deferred income', 50), (' deferred revenue', 47), ('provisions', 36), (' Provision ', 36), (' Derivative financial instruments ', 34), (' customer deposits', 32), (' trade and other payables', 22), (' employee benefits', 20), (' Contract Liabilities ', 20), (' foreign exchange contract liability ', 17), ('other current liabilities', 16), (' other current liabilities', 16), (' other financial liabilities', 16), (' financial liabilities', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 38957.0, 'line_item_label': ['Current liabilities', 'Employee benefit liabilities', 'Provisions'], 'note_numbers': [nan, '14', '15'], 'line_item_value': [0.0, 20682.0, 18275.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total current employee benefits ', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' Employee entitlements ', 79), (' Employee payables ', 64), (' rebates', 60), (' current - liability for annual and long service leave', 52), (' Current- liability for annual leave ', 52), (' current- liability for long service leave ', 52), (' warranty', 50), (' ultimate parent entity', 49), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 44), (' provisions - current', 43), (' Forward currency contract ', 43), (' Trade payables ', 42), (' accrued expenses ', 42), (' share of joint venture payables', 40), (' gst payables', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), (' Warranty and after sales service ', 39), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' forward exchange contracts', 35), (' provision for annual and long service leave ', 35), (' loans from related party', 33), (' gst', 33), ('other creditors and accruals', 31), (' Stock and feright payables ', 31), (' abandonment and decommissioning costs', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' service contracts ', 27), (' Deferred income ', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current employee benefits , res_fuzz_match = [(' total current employee benefits ', 87), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' Employee entitlements ', 79), (' Employee payables ', 64), (' ultimate parent entity', 47), (' other creditors', 43), (' secured long-term bank loans', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' Trade payables ', 42), (' accrued expenses ', 42), (' gst payables', 40), (' rebates', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), (' current - liability for annual and long service leave', 39), (' Current- liability for annual leave ', 39), (' current- liability for long service leave ', 39), (' provision for annual and long service leave ', 39), (' Forward currency contract ', 39), (' loans from related party', 38), (' Warranty and after sales service ', 36), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' abandonment and decommissioning costs', 35), (' forward exchange contracts', 35), (' gst', 33), (' Stock and feright payables ', 31), ('other creditors and accruals', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' provision for associate funding', 27), (' service contracts ', 27), (' Deferred income ', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25), (' warranty', 25), (' gst payable and accruals', 23), (' restructuring', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total current employee benefits ', 100), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' Employee entitlements ', 79), (' Employee payables ', 64), (' rebates', 60), (' current - liability for annual and long service leave', 52), (' Current- liability for annual leave ', 52), (' current- liability for long service leave ', 52), (' warranty', 50), (' ultimate parent entity', 49), (' other creditors', 46), (' other creditors', 46), (' other creditors', 46), (' secured long-term bank loans', 44), (' provisions - current', 43), (' Forward currency contract ', 43), (' Trade payables ', 42), (' accrued expenses ', 42), (' share of joint venture payables', 40), (' gst payables', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), (' Warranty and after sales service ', 39), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' forward exchange contracts', 35), (' provision for annual and long service leave ', 35), (' loans from related party', 33), (' gst', 33), ('other creditors and accruals', 31), (' Stock and feright payables ', 31), (' abandonment and decommissioning costs', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' restructuring', 30), (' gst payable and accruals', 27), (' provision for associate funding', 27), (' service contracts ', 27), (' Deferred income ', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current employee benefits , res_fuzz_match = [(' total current employee benefits ', 87), (' employee benefits - payroll', 81), (' employee benefits - current', 79), (' Employee entitlements ', 79), (' Employee payables ', 64), (' ultimate parent entity', 47), (' other creditors', 43), (' secured long-term bank loans', 43), (' other creditors', 43), (' provisions - current', 43), (' other creditors', 43), (' Trade payables ', 42), (' accrued expenses ', 42), (' gst payables', 40), (' rebates', 40), (' other', 40), (' others ', 40), (' GST Payable', 40), (' current - liability for annual and long service leave', 39), (' Current- liability for annual leave ', 39), (' current- liability for long service leave ', 39), (' provision for annual and long service leave ', 39), (' Forward currency contract ', 39), (' loans from related party', 38), (' Warranty and after sales service ', 36), (' other related parties', 35), (' loan payable to relayed party under tax funding agreement', 35), (' contract liabilites - current', 35), (' share of joint venture payables', 35), (' abandonment and decommissioning costs', 35), (' forward exchange contracts', 35), (' gst', 33), (' Stock and feright payables ', 31), ('other creditors and accruals', 30), (' arising from service contracts', 30), (' gst liabilities', 30), (' provision for associate funding', 27), (' service contracts ', 27), (' Deferred income ', 27), (' derivative contracts - at fair value', 26), (' make good provisions', 25), (' warranty', 25), (' gst payable and accruals', 23), (' restructuring', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [100, 87, 100, 87], 'value': [20682.0, 1688.0, 20474.0, 1597.0], 'label': ['Current Employee benefits', 'Non-current Employee benefits', 'Current Employee benefits', 'Non-current Employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other creditors and accruals', ' ultimate parent entity', ' other related parties', ' other creditors', ' derivative contracts - at fair value', ' loan payable to relayed party under tax funding agreement', ' secured long-term bank loans', ' loans from related party', ' other creditors', ' gst payable and accruals', ' employee benefits - current', ' current - liability for annual and long service leave', ' provisions - current', ' contract liabilites - current', ' share of joint venture payables', ' gst payables', ' employee benefits - payroll', ' abandonment and decommissioning costs', ' provision for associate funding', ' arising from service contracts', ' make good provisions', ' gst liabilities', ' gst', ' rebates', ' forward exchange contracts', ' other creditors', ' restructuring', ' warranty', ' other', ' total current employee benefits ', ' Current- liability for annual leave ', ' current- liability for long service leave ', ' provision for annual and long service leave ', ' Trade payables ', ' accrued expenses ', ' Warranty and after sales service ', ' Employee entitlements ', ' service contracts ', ' others ', ' Forward currency contract ', ' Employee payables ', ' Stock and feright payables ', ' Deferred income ', ' GST Payable'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [(' warranty', 100), (' other related parties', 62), (' current - liability for annual and long service leave', 62), (' Current- liability for annual leave ', 62), (' current- liability for long service leave ', 62), (' Forward currency contract ', 62), (' rebates', 60), (' loans from related party', 56), (' ultimate parent entity', 53), (' employee benefits - current', 52), (' secured long-term bank loans', 50), (' restructuring', 50), (' total current employee benefits ', 50), (' Warranty and after sales service ', 50), (' contract liabilites - current', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' provisions - current', 43), (' Trade payables ', 42), (' gst payables', 40), (' employee benefits - payroll', 40), (' gst liabilities', 40), (' other', 40), (' service contracts ', 40), (' others ', 40), (' GST Payable', 40), (' arising from service contracts', 39), (' forward exchange contracts', 39), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' Employee entitlements ', 36), (' gst', 33), (' accrued expenses ', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' provision for annual and long service leave ', 31), (' Stock and feright payables ', 31), (' Employee payables ', 29), (' make good provisions', 25), (' Deferred income ', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [(' warranty', 100), (' other related parties', 62), (' current - liability for annual and long service leave', 62), (' Current- liability for annual leave ', 62), (' current- liability for long service leave ', 62), (' Forward currency contract ', 62), (' rebates', 60), (' loans from related party', 56), (' ultimate parent entity', 53), (' employee benefits - current', 52), (' secured long-term bank loans', 50), (' restructuring', 50), (' total current employee benefits ', 50), (' Warranty and after sales service ', 50), (' contract liabilites - current', 45), ('other creditors and accruals', 44), (' derivative contracts - at fair value', 44), (' loan payable to relayed party under tax funding agreement', 44), (' share of joint venture payables', 44), (' provisions - current', 43), (' Trade payables ', 42), (' gst payables', 40), (' employee benefits - payroll', 40), (' gst liabilities', 40), (' other', 40), (' service contracts ', 40), (' others ', 40), (' GST Payable', 40), (' arising from service contracts', 39), (' forward exchange contracts', 39), (' other creditors', 36), (' other creditors', 36), (' other creditors', 36), (' Employee entitlements ', 36), (' gst', 33), (' accrued expenses ', 33), (' gst payable and accruals', 31), (' abandonment and decommissioning costs', 31), (' provision for associate funding', 31), (' provision for annual and long service leave ', 31), (' Stock and feright payables ', 31), (' Employee payables ', 29), (' make good provisions', 25), (' Deferred income ', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other creditors and accruals', 0), (' ultimate parent entity', 0), (' other related parties', 0), (' other creditors', 0), (' derivative contracts - at fair value', 0), (' loan payable to relayed party under tax funding agreement', 0), (' secured long-term bank loans', 0), (' loans from related party', 0), (' other creditors', 0), (' gst payable and accruals', 0), (' employee benefits - current', 0), (' current - liability for annual and long service leave', 0), (' provisions - current', 0), (' contract liabilites - current', 0), (' share of joint venture payables', 0), (' gst payables', 0), (' employee benefits - payroll', 0), (' abandonment and decommissioning costs', 0), (' provision for associate funding', 0), (' arising from service contracts', 0), (' make good provisions', 0), (' gst liabilities', 0), (' gst', 0), (' rebates', 0), (' forward exchange contracts', 0), (' other creditors', 0), (' restructuring', 0), (' warranty', 0), (' other', 0), (' total current employee benefits ', 0), (' Current- liability for annual leave ', 0), (' current- liability for long service leave ', 0), (' provision for annual and long service leave ', 0), (' Trade payables ', 0), (' accrued expenses ', 0), (' Warranty and after sales service ', 0), (' Employee entitlements ', 0), (' service contracts ', 0), (' others ', 0), (' Forward currency contract ', 0), (' Employee payables ', 0), (' Stock and feright payables ', 0), (' Deferred income ', 0), (' GST Payable', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [16519.0, 4365.0], 'label': ['Current Warranties', 'Current Warranties'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_current_liabilities
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['long term debt']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('long term debt', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('long term debt', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['long term debt'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('long term debt', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('long term debt', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('long term debt', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('long term debt', 10)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('long term debt', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('long term debt', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_borrowing
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' lease liabilities ', 73), (' loans and borrowings', 53), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 39), (' borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation', 70), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' lease liabilities ', 73), ('interest bearing loans and borrowings ', 41), (' Lease obligation', 40), (' loans and borrowings', 33), (' borrowings ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' Lease obligation', 33), (' lease liabilities ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' lease liabilities ', 82), ('interest bearing loans and borrowings ', 79), (' Lease obligation', 50), (' borrowings ', 33), (' loans and borrowings', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('interest bearing loans and borrowings ', 40), (' loans and borrowings', 40), (' borrowings ', 20), (' lease liabilities ', 20), (' Lease obligation', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 82, 'value': 3177909.0, 'line_item_label': ['Lease liabilities', 'Interest-bearing liabilities'], 'note_numbers': ['12', '16'], 'line_item_value': [49228.0, 3128681.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['interest bearing loans and borrowings ', ' borrowings ', ' lease liabilities ', ' loans and borrowings', ' Lease obligation'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' lease liabilities ', 64), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 36), (' loans and borrowings', 36), (' borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' lease liabilities ', 73), (' loans and borrowings', 53), (' Lease obligation', 40), ('interest bearing loans and borrowings ', 39), (' borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' lease liabilities ', 100), (' Lease obligation', 70), ('interest bearing loans and borrowings ', 45), (' loans and borrowings', 45), (' borrowings ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' lease liabilities ', 73), ('interest bearing loans and borrowings ', 41), (' Lease obligation', 40), (' loans and borrowings', 33), (' borrowings ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings ', 33), (' borrowings ', 33), (' loans and borrowings', 33), (' Lease obligation', 33), (' lease liabilities ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' lease liabilities ', 82), ('interest bearing loans and borrowings ', 79), (' Lease obligation', 50), (' borrowings ', 33), (' loans and borrowings', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('interest bearing loans and borrowings ', 40), (' loans and borrowings', 40), (' borrowings ', 20), (' lease liabilities ', 20), (' Lease obligation', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 5], 'score': 82, 'value': 3013939.0, 'line_item_label': ['Lease liabilities', 'Interest-bearing liabilities'], 'note_numbers': ['12', '16'], 'line_item_value': [47269.0, 2966670.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities less than 3 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), ('leases ', 75), (' Hire purchase liabilities ', 58), (' bank loan ', 56), (' lease liabilities - non-current ', 53), (' later than 1 year ', 53), (' secured finance debt ', 47), (' not later than 5 years ', 47), (' less : unexpired interest', 43), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities 3 months to 12 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' lease liabilities - non-current ', 63), (' Hire purchase liabilities ', 58), (' bank loan ', 56), ('leases ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' secured finance debt ', 41), (' less : unexpired interest', 38), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities greater than 12 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' later than 1 year ', 67), (' lease liabilities - non-current ', 63), (' not later than 5 years ', 58), (' Hire purchase liabilities ', 58), (' bank loan ', 56), ('leases ', 50), (' secured finance debt ', 47), (' less : unexpired interest', 43), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities total interest-bearing liabilities , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' lease liabilities - non-current ', 58), (' Hire purchase liabilities ', 58), (' bank loan ', 56), (' later than 1 year ', 53), (' less : unexpired interest', 52), ('leases ', 50), (' secured finance debt ', 47), (' not later than 5 years ', 47), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities less than 3 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), ('leases ', 75), (' Hire purchase liabilities ', 58), (' bank loan ', 56), (' lease liabilities - non-current ', 53), (' later than 1 year ', 53), (' secured finance debt ', 47), (' not later than 5 years ', 47), (' less : unexpired interest', 43), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities 3 months to 12 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' lease liabilities - non-current ', 63), (' Hire purchase liabilities ', 58), (' bank loan ', 56), ('leases ', 50), (' later than 1 year ', 47), (' non current ', 45), (' not later than 5 years ', 42), (' secured finance debt ', 41), (' less : unexpired interest', 38), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities greater than 12 months , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' later than 1 year ', 67), (' lease liabilities - non-current ', 63), (' not later than 5 years ', 58), (' Hire purchase liabilities ', 58), (' bank loan ', 56), ('leases ', 50), (' secured finance debt ', 47), (' less : unexpired interest', 43), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = interest-bearing liabilities total interest-bearing liabilities , res_fuzz_match = [(' lease liabilities ', 82), (' lease liability ', 82), (' Lease liabilities ', 82), (' lease liabilities - non-current ', 58), (' Hire purchase liabilities ', 58), (' bank loan ', 56), (' later than 1 year ', 53), (' less : unexpired interest', 52), ('leases ', 50), (' secured finance debt ', 47), (' not later than 5 years ', 47), (' non current ', 36), (' Borrowings ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7], 'score': [82, 82, 82, 82, 82, 82, 82, 82], 'value': [454224.0, 749768.0, 2966670.0, 4170662.0, 522565.0, 575000.0, 3128681.0, 4226246.0], 'label': ['Interest-bearing liabilities Less than 3 months', 'Interest-bearing liabilities 3 months to 12 months', 'Interest-bearing liabilities Greater than 12 months', 'Interest-bearing liabilities Total interest-bearing liabilities', 'Interest-bearing liabilities Less than 3 months', 'Interest-bearing liabilities 3 months to 12 months', 'Interest-bearing liabilities Greater than 12 months', 'Interest-bearing liabilities Total interest-bearing liabilities'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['leases ', ' secured finance debt ', ' bank loan ', ' lease liabilities ', ' lease liability ', ' lease liabilities - non-current ', ' non current ', ' later than 1 year ', ' not later than 5 years ', ' Borrowings ', ' Lease liabilities ', ' Hire purchase liabilities ', ' less : unexpired interest'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current short-term borrowings - related party (note 21) , res_fuzz_match = [(' Borrowings ', 100), ('leases ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' lease liabilities - non-current ', 42), (' less : unexpired interest', 38), (' Hire purchase liabilities ', 37), (' non current ', 36), (' secured finance debt ', 35), (' bank loan ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current short-term borrowings non-related party , res_fuzz_match = [(' Borrowings ', 100), (' non current ', 55), ('leases ', 50), (' lease liabilities - non-current ', 42), (' not later than 5 years ', 42), (' later than 1 year ', 40), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' non current ', 64), (' not later than 5 years ', 46), (' bank loan ', 44), (' secured finance debt ', 38), (' lease liabilities ', 38), (' lease liability ', 38), (' Lease liabilities ', 38), (' Hire purchase liabilities ', 38), (' Borrowings ', 33), (' less : unexpired interest', 32), (' lease liabilities - non-current ', 31), (' later than 1 year ', 31), ('leases ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current long-term borrowings non-related party , res_fuzz_match = [(' Borrowings ', 100), (' non current ', 73), (' bank loan ', 44), (' lease liabilities - non-current ', 42), (' not later than 5 years ', 42), (' secured finance debt ', 41), (' later than 1 year ', 40), (' less : unexpired interest', 38), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' Hire purchase liabilities ', 32), ('leases ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current short-term borrowings - related party (note 21) , res_fuzz_match = [(' Borrowings ', 100), ('leases ', 50), (' later than 1 year ', 47), (' not later than 5 years ', 47), (' lease liabilities ', 45), (' lease liability ', 45), (' Lease liabilities ', 45), (' lease liabilities - non-current ', 42), (' less : unexpired interest', 38), (' Hire purchase liabilities ', 37), (' non current ', 36), (' secured finance debt ', 35), (' bank loan ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current short-term borrowings non-related party , res_fuzz_match = [(' Borrowings ', 100), (' non current ', 55), ('leases ', 50), (' lease liabilities - non-current ', 42), (' not later than 5 years ', 42), (' later than 1 year ', 40), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' secured finance debt ', 35), (' bank loan ', 33), (' less : unexpired interest', 33), (' Hire purchase liabilities ', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current total , res_fuzz_match = [(' non current ', 64), (' not later than 5 years ', 46), (' bank loan ', 44), (' secured finance debt ', 38), (' lease liabilities ', 38), (' lease liability ', 38), (' Lease liabilities ', 38), (' Hire purchase liabilities ', 38), (' Borrowings ', 33), (' less : unexpired interest', 32), (' lease liabilities - non-current ', 31), (' later than 1 year ', 31), ('leases ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current long-term borrowings non-related party , res_fuzz_match = [(' Borrowings ', 100), (' non current ', 73), (' bank loan ', 44), (' lease liabilities - non-current ', 42), (' not later than 5 years ', 42), (' secured finance debt ', 41), (' later than 1 year ', 40), (' less : unexpired interest', 38), (' lease liabilities ', 36), (' lease liability ', 36), (' Lease liabilities ', 36), (' Hire purchase liabilities ', 32), ('leases ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('leases ', 0), (' secured finance debt ', 0), (' bank loan ', 0), (' lease liabilities ', 0), (' lease liability ', 0), (' lease liabilities - non-current ', 0), (' non current ', 0), (' later than 1 year ', 0), (' not later than 5 years ', 0), (' Borrowings ', 0), (' Lease liabilities ', 0), (' Hire purchase liabilities ', 0), (' less : unexpired interest', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4, 5, 7], 'score': [100, 100, 100, 100, 100, 100], 'value': [320656.0, 883336.0, 2966670.0, 153971.0, 943594.0, 3128681.0], 'label': ['Current Short-term borrowings - related party (Note 21)', 'Current Short-term borrowings non-related party', 'Non-current Long-term borrowings non-related party', 'Current Short-term borrowings - related party (Note 21)', 'Current Short-term borrowings non-related party', 'Non-current Long-term borrowings non-related party'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['(bond)', 'interest bearing loans and borrowings']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_bond
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 46), ('(bond)', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 35), ('(bond)', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 46), ('(bond)', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('interest bearing loans and borrowings', 24), ('(bond)', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['(bond)', 'interest bearing loans and borrowings'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('(bond)', 33), ('interest bearing loans and borrowings', 28)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 46), ('(bond)', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 30), ('(bond)', 13)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 35), ('(bond)', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('interest bearing loans and borrowings', 23), ('(bond)', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('interest bearing loans and borrowings', 46), ('(bond)', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('interest bearing loans and borrowings', 24), ('(bond)', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_suboardinate_debt
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred taxes ', ' deferred tax liabilities']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['deferred tax liabilities ', ' total deferred tax (assets) / liabilities']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_deferred_taxes
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' deferred tax liabilities', 62), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' deferred tax liabilities', 62), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' deferred tax liabilities', 69), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('deferred taxes ', 60), (' deferred tax liabilities', 60)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['deferred taxes ', ' deferred tax liabilities'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' deferred tax liabilities', 57), ('deferred taxes ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' deferred tax liabilities', 62), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' deferred tax liabilities', 73), ('deferred taxes ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' deferred tax liabilities', 62), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('deferred taxes ', 17), (' deferred tax liabilities', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' deferred tax liabilities', 69), ('deferred taxes ', 44)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('deferred taxes ', 60), (' deferred tax liabilities', 60)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_minority_interest
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_other_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 10), (' Provisions ', 10)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' trade and other payables ', 71), (' other financial liabilities ', 70), ('other long term liabilities ', 58), (' other non-current liabilities ', 56), (' financial liabilities ', 49), (' employee benefits ', 32), (' provision for associate funding ', 31), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 7), (' Provisions ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' Deferred income', 27), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue ', 17), (' provisions ', 12), (' Provisions ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' employee benefits ', 81), (' financial liabilities ', 50), (' other financial liabilities ', 43), (' trade and other payables ', 36), ('other long term liabilities ', 32), (' Deferred income', 30), (' other non-current liabilities ', 29), (' deferred revenue ', 29), (' provision for associate funding ', 23), (' provisions ', 21), (' Provisions ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' Provisions ', 100), (' provision for associate funding ', 43), (' Deferred income', 24), (' deferred revenue ', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' financial liabilities ', 61), (' other financial liabilities ', 51), ('other long term liabilities ', 39), (' trade and other payables ', 39), (' Deferred income', 33), (' other non-current liabilities ', 31), (' employee benefits ', 29), (' deferred revenue ', 26), (' provision for associate funding ', 20), (' provisions ', 16), (' Provisions ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Deferred income', 50), (' deferred revenue ', 47), (' provisions ', 36), (' Provisions ', 36), (' trade and other payables ', 22), (' provision for associate funding ', 22), (' employee benefits ', 20), (' other financial liabilities ', 16), (' other non-current liabilities ', 16), ('other long term liabilities ', 15), (' financial liabilities ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 61143.0, 'line_item_label': ['Non-current liabilities', 'Employee benefit liabilities', 'Provisions'], 'note_numbers': [nan, '14', '15'], 'line_item_value': [0.0, 1597.0, 59546.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other long term liabilities ', ' trade and other payables ', ' financial liabilities ', ' employee benefits ', ' provisions ', ' other financial liabilities ', ' other non-current liabilities ', ' provision for associate funding ', ' deferred revenue ', ' Provisions ', ' Deferred income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [(' other non-current liabilities ', 82), ('other long term liabilities ', 61), (' other financial liabilities ', 53), (' financial liabilities ', 43), (' provision for associate funding ', 33), (' trade and other payables ', 28), (' employee benefits ', 28), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 10), (' Provisions ', 10)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [(' trade and other payables ', 71), (' other financial liabilities ', 70), ('other long term liabilities ', 58), (' other non-current liabilities ', 56), (' financial liabilities ', 49), (' employee benefits ', 32), (' provision for associate funding ', 31), (' Deferred income', 24), (' deferred revenue ', 23), (' provisions ', 7), (' Provisions ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [(' financial liabilities ', 64), (' other financial liabilities ', 52), (' other non-current liabilities ', 39), ('other long term liabilities ', 36), (' trade and other payables ', 30), (' Deferred income', 27), (' provision for associate funding ', 24), (' employee benefits ', 23), (' deferred revenue ', 17), (' provisions ', 12), (' Provisions ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [(' employee benefits ', 81), (' financial liabilities ', 50), (' other financial liabilities ', 43), (' trade and other payables ', 36), ('other long term liabilities ', 32), (' Deferred income', 30), (' other non-current liabilities ', 29), (' deferred revenue ', 29), (' provision for associate funding ', 23), (' provisions ', 21), (' Provisions ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [(' provisions ', 100), (' Provisions ', 100), (' provision for associate funding ', 43), (' Deferred income', 24), (' deferred revenue ', 22), (' employee benefits ', 19), (' other non-current liabilities ', 15), (' trade and other payables ', 14), (' financial liabilities ', 10), (' other financial liabilities ', 8), ('other long term liabilities ', 7)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [(' financial liabilities ', 61), (' other financial liabilities ', 51), ('other long term liabilities ', 39), (' trade and other payables ', 39), (' Deferred income', 33), (' other non-current liabilities ', 31), (' employee benefits ', 29), (' deferred revenue ', 26), (' provision for associate funding ', 20), (' provisions ', 16), (' Provisions ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' Deferred income', 50), (' deferred revenue ', 47), (' provisions ', 36), (' Provisions ', 36), (' trade and other payables ', 22), (' provision for associate funding ', 22), (' employee benefits ', 20), (' other financial liabilities ', 16), (' other non-current liabilities ', 16), ('other long term liabilities ', 15), (' financial liabilities ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 3, 4], 'score': 100, 'value': 59196.0, 'line_item_label': ['Non-current liabilities', 'Employee benefit liabilities', 'Provisions'], 'note_numbers': [nan, '14', '15'], 'line_item_value': [0.0, 1688.0, 57508.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total non-current employee benefits ', 87), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), (' non-current-liability for long service leave ', 52), ('non-current trade and other payables ', 43), (' non-current - liability for long-service leave ', 43), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' trade payables - related parties ', 35), (' provision for long service leave ', 35), (' abandonment and decommissioning costs ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' Deferred income', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits ', 100), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), ('non-current trade and other payables ', 52), (' non-current - liability for long-service leave ', 52), (' non-current-liability for long service leave ', 52), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' abandonment and decommissioning costs ', 35), (' provision for long service leave ', 35), (' trade payables - related parties ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' Deferred income', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current employee benefits , res_fuzz_match = [(' total non-current employee benefits ', 87), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), (' non-current-liability for long service leave ', 52), ('non-current trade and other payables ', 43), (' non-current - liability for long-service leave ', 43), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' trade payables - related parties ', 35), (' provision for long service leave ', 35), (' abandonment and decommissioning costs ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' Deferred income', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = non-current employee benefits , res_fuzz_match = [(' total non-current employee benefits ', 100), (' employee benefits - payroll ', 81), (' employee benefits - non current ', 65), ('non-current trade and other payables ', 52), (' non-current - liability for long-service leave ', 52), (' non-current-liability for long service leave ', 52), (' electricity derivatives at fair value through oci ', 35), (' contract liabilites - non-current ', 35), (' abandonment and decommissioning costs ', 35), (' provision for long service leave ', 35), (' trade payables - related parties ', 30), (' provisions - non-current ', 29), (' provision for associate funding ', 27), (' Deferred income', 27), (' derivative contracts - at fair value ', 26), (' make good provisions ', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3], 'score': [87, 100, 87, 100], 'value': [20682.0, 1688.0, 20474.0, 1597.0], 'label': ['Current Employee benefits', 'Non-current Employee benefits', 'Current Employee benefits', 'Non-current Employee benefits'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['non-current trade and other payables ', ' electricity derivatives at fair value through oci ', ' derivative contracts - at fair value ', ' employee benefits - non current ', ' non-current - liability for long-service leave ', ' provisions - non-current ', ' contract liabilites - non-current ', ' employee benefits - payroll ', ' abandonment and decommissioning costs ', ' provision for associate funding ', ' make good provisions ', ' trade payables - related parties ', ' total non-current employee benefits ', ' non-current-liability for long service leave ', ' provision for long service leave ', ' Deferred income'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [(' non-current-liability for long service leave ', 56), ('non-current trade and other payables ', 50), (' trade payables - related parties ', 50), (' employee benefits - non current ', 45), (' derivative contracts - at fair value ', 44), (' non-current - liability for long-service leave ', 44), (' contract liabilites - non-current ', 44), (' total non-current employee benefits ', 44), (' employee benefits - payroll ', 40), (' electricity derivatives at fair value through oci ', 38), (' abandonment and decommissioning costs ', 31), (' provision for associate funding ', 31), (' provision for long service leave ', 31), (' provisions - non-current ', 29), (' make good provisions ', 25), (' Deferred income', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = current warranties , res_fuzz_match = [(' non-current-liability for long service leave ', 56), ('non-current trade and other payables ', 50), (' trade payables - related parties ', 50), (' employee benefits - non current ', 45), (' derivative contracts - at fair value ', 44), (' non-current - liability for long-service leave ', 44), (' contract liabilites - non-current ', 44), (' total non-current employee benefits ', 44), (' employee benefits - payroll ', 40), (' electricity derivatives at fair value through oci ', 38), (' abandonment and decommissioning costs ', 31), (' provision for associate funding ', 31), (' provision for long service leave ', 31), (' provisions - non-current ', 29), (' make good provisions ', 25), (' Deferred income', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('non-current trade and other payables ', 0), (' electricity derivatives at fair value through oci ', 0), (' derivative contracts - at fair value ', 0), (' employee benefits - non current ', 0), (' non-current - liability for long-service leave ', 0), (' provisions - non-current ', 0), (' contract liabilites - non-current ', 0), (' employee benefits - payroll ', 0), (' abandonment and decommissioning costs ', 0), (' provision for associate funding ', 0), (' make good provisions ', 0), (' trade payables - related parties ', 0), (' total non-current employee benefits ', 0), (' non-current-liability for long service leave ', 0), (' provision for long service leave ', 0), (' Deferred income', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: can only concatenate str (not "int") to str
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_non_current_liabilities
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = ncl_long_term_liabilities
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = [''] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = non-current liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = payables and other liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = lease liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = employee benefit liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = provisions , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = interest-bearing liabilities , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_common_stock
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' issued capital ', 40), (' share capital ', 38), (' share capital ', 38), (' equity share capital ', 26), ('common stock ', 24), (' perpetual equity instrument ', 20), (' contributed equity ', 19), (' contributed equity', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' share capital ', 42), (' share capital ', 42), (' equity share capital ', 39), (' perpetual equity instrument ', 37), (' issued capital ', 35), (' contributed equity ', 28), (' contributed equity', 28), ('common stock ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' equity share capital ', 41), (' share capital ', 38), (' share capital ', 38), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 24), (' perpetual equity instrument ', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' equity share capital ', 40), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 30), (' perpetual equity instrument ', 30), (' share capital ', 30), (' issued capital ', 25), ('common stock ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' equity share capital ', 57), (' contributed equity ', 48), (' contributed equity', 48), (' perpetual equity instrument ', 38), (' issued capital ', 37), (' share capital ', 36), (' share capital ', 36), ('common stock ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 290000.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['19'], 'line_item_value': [290000.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['common stock ', ' share capital ', ' equity share capital ', ' perpetual equity instrument ', ' contributed equity ', ' issued capital ', ' share capital ', ' contributed equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' issued capital ', 40), (' share capital ', 38), (' share capital ', 38), (' equity share capital ', 26), ('common stock ', 24), (' perpetual equity instrument ', 20), (' contributed equity ', 19), (' contributed equity', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' share capital ', 42), (' share capital ', 42), (' equity share capital ', 39), (' perpetual equity instrument ', 37), (' issued capital ', 35), (' contributed equity ', 28), (' contributed equity', 28), ('common stock ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' equity share capital ', 41), (' share capital ', 38), (' share capital ', 38), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 24), (' perpetual equity instrument ', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' equity share capital ', 40), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 30), (' perpetual equity instrument ', 30), (' share capital ', 30), (' issued capital ', 25), ('common stock ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' equity share capital ', 57), (' contributed equity ', 48), (' contributed equity', 48), (' perpetual equity instrument ', 38), (' issued capital ', 37), (' share capital ', 36), (' share capital ', 36), ('common stock ', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' share capital ', 40), (' share capital ', 40), (' equity share capital ', 37), (' perpetual equity instrument ', 35), (' contributed equity ', 32), (' issued capital ', 32), (' contributed equity', 32), ('common stock ', 19)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' contributed equity ', 55), (' contributed equity', 55), (' equity share capital ', 50), (' perpetual equity instrument ', 39), (' issued capital ', 38), (' share capital ', 24), (' share capital ', 24), ('common stock ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' issued capital ', 100), (' share capital ', 67), (' share capital ', 67), (' equity share capital ', 57), (' contributed equity ', 38), (' contributed equity', 38), (' perpetual equity instrument ', 34), ('common stock ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' perpetual equity instrument ', 39), (' contributed equity ', 37), (' contributed equity', 37), (' share capital ', 36), (' share capital ', 36), (' equity share capital ', 34), (' issued capital ', 29), ('common stock ', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' perpetual equity instrument ', 26), (' equity share capital ', 25), (' share capital ', 24), (' share capital ', 24), (' contributed equity ', 18), (' contributed equity', 18), (' issued capital ', 12), ('common stock ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [7], 'score': 100, 'value': 290000.0, 'line_item_label': ['Issued capital'], 'note_numbers': ['19'], 'line_item_value': [290000.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000) , res_fuzz_match = [('ordinary shares ', 100), (' ordinary shares fully paid ', 80), (' on issue, fully paid ', 73), (' fully paid ordinary shares ', 72), (' issued and paid-up share capital ', 52), (' Fully paid Preference shares ', 52), (' retained profits ', 46), (' Profits captialised on redemption of preference shares', 43), (' total issued capital ', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000) , res_fuzz_match = [('ordinary shares ', 100), (' ordinary shares fully paid ', 80), (' on issue, fully paid ', 73), (' fully paid ordinary shares ', 72), (' issued and paid-up share capital ', 52), (' Fully paid Preference shares ', 52), (' retained profits ', 46), (' Profits captialised on redemption of preference shares', 43), (' total issued capital ', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1], 'score': [100, 100], 'value': [290000.0, 290000.0], 'label': ['Ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000)', 'Ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['ordinary shares ', ' fully paid ordinary shares ', ' issued and paid-up share capital ', ' retained profits ', ' ordinary shares fully paid ', ' total issued capital ', ' on issue, fully paid ', ' Fully paid Preference shares ', ' Profits captialised on redemption of preference shares'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 1 april , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: netincrease on cash flow hedge for the year , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' on issue, fully paid ', 47), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), ('ordinary shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' retained profits ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: income tax expense from cash flow hedge reserve , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), ('ordinary shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), (' issued and paid-up share capital ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 31 march , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33), (' retained profits ', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 1 april , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: exchange differences on translation of foreign operations , res_fuzz_match = [(' retained profits ', 54), ('ordinary shares ', 50), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' ordinary shares fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 37), (' on issue, fully paid ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: income tax (expense)benefit from foreign currency translation , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 31 march , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 1 april , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' issued and paid-up share capital ', 37), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: actuarial loss on pension for the year , res_fuzz_match = [(' retained profits ', 46), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), ('ordinary shares ', 43), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' issued and paid-up share capital ', 41), (' on issue, fully paid ', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: income tax benefit from pension reserve , res_fuzz_match = [(' ordinary shares fully paid ', 48), (' retained profits ', 46), ('ordinary shares ', 43), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 31 march , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 32), (' total issued capital ', 31), (' issued and paid-up share capital ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: total reserves , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Fully paid Preference shares ', 43), (' on issue, fully paid ', 40), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 36), (' issued and paid-up share capital ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 1 april , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: netincrease on cash flow hedge for the year , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' on issue, fully paid ', 47), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), ('ordinary shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' retained profits ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: income tax expense from cash flow hedge reserve , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), ('ordinary shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), (' issued and paid-up share capital ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 31 march , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33), (' retained profits ', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' Fully paid Preference shares ', 52), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' retained profits ', 38), (' total issued capital ', 38), ('ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 1 april , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: exchange differences on translation of foreign operations , res_fuzz_match = [(' retained profits ', 54), ('ordinary shares ', 50), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' ordinary shares fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 37), (' on issue, fully paid ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: income tax (expense)benefit from foreign currency translation , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 31 march , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('ordinary shares ', 50), (' retained profits ', 46), (' ordinary shares fully paid ', 44), (' Profits captialised on redemption of preference shares', 43), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' total issued capital ', 38), (' fully paid ordinary shares ', 36), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 1 april , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), (' issued and paid-up share capital ', 37), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: actuarial loss on pension for the year , res_fuzz_match = [(' retained profits ', 46), (' fully paid ordinary shares ', 44), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), ('ordinary shares ', 43), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' issued and paid-up share capital ', 41), (' on issue, fully paid ', 40)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: income tax benefit from pension reserve , res_fuzz_match = [(' ordinary shares fully paid ', 48), (' retained profits ', 46), ('ordinary shares ', 43), (' Fully paid Preference shares ', 43), (' Profits captialised on redemption of preference shares', 43), (' fully paid ordinary shares ', 40), (' on issue, fully paid ', 40), (' total issued capital ', 38), (' issued and paid-up share capital ', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 31 march , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' on issue, fully paid ', 40), (' Fully paid Preference shares ', 39), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 32), (' total issued capital ', 31), (' issued and paid-up share capital ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: total reserves , res_fuzz_match = [(' retained profits ', 46), (' ordinary shares fully paid ', 44), (' total issued capital ', 44), (' Fully paid Preference shares ', 43), (' on issue, fully paid ', 40), ('ordinary shares ', 36), (' fully paid ordinary shares ', 36), (' Profits captialised on redemption of preference shares', 36), (' issued and paid-up share capital ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('ordinary shares ', 0), (' fully paid ordinary shares ', 0), (' issued and paid-up share capital ', 0), (' retained profits ', 0), (' ordinary shares fully paid ', 0), (' total issued capital ', 0), (' on issue, fully paid ', 0), (' Fully paid Preference shares ', 0), (' Profits captialised on redemption of preference shares', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:51+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['Share premium']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_additional_paid_in_capital
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('Share premium', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('Share premium', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('Share premium', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('Share premium', 34)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('Share premium', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['Share premium'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('Share premium', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('Share premium', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('Share premium', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('Share premium', 34)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('Share premium', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('Share premium', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('Share premium', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('Share premium', 35)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('Share premium', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('Share premium', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['retained earnings ', ' general reserves ', ' accumulated losses ', ' retained earnings and dividends on equity instruments ', ' movements in retained earnings']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_retained_earnings
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' retained earnings ', 38), (' accumulated losses ', 35), ('other equity ', 24), (' reserves surplus ', 22), (' retained profits', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' retained earnings ', 42), (' reserves surplus ', 38), (' retained profits', 38), ('other equity ', 32), (' accumulated losses ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' retained earnings ', 31), (' accumulated losses ', 30), (' reserves surplus ', 29), ('other equity ', 24), (' retained profits', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' retained earnings ', 42), (' retained profits', 40), ('other equity ', 35), (' reserves surplus ', 34), (' accumulated losses ', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' retained earnings ', 50), ('other equity ', 48), (' retained profits', 33), (' accumulated losses ', 28), (' reserves surplus ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 916385.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [916385.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other equity ', ' reserves surplus ', ' retained earnings ', ' accumulated losses ', ' retained profits'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' retained earnings ', 38), (' accumulated losses ', 35), ('other equity ', 24), (' reserves surplus ', 22), (' retained profits', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' retained earnings ', 42), (' reserves surplus ', 38), (' retained profits', 38), ('other equity ', 32), (' accumulated losses ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' retained earnings ', 31), (' accumulated losses ', 30), (' reserves surplus ', 29), ('other equity ', 24), (' retained profits', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' retained earnings ', 42), (' retained profits', 40), ('other equity ', 35), (' reserves surplus ', 34), (' accumulated losses ', 18)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' retained earnings ', 50), ('other equity ', 48), (' retained profits', 33), (' accumulated losses ', 28), (' reserves surplus ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' retained earnings ', 40), ('other equity ', 38), (' retained profits', 36), (' accumulated losses ', 29), (' reserves surplus ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('other equity ', 67), (' retained earnings ', 35), (' retained profits', 32), (' reserves surplus ', 21), (' accumulated losses ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [(' retained profits', 43), (' accumulated losses ', 36), (' retained earnings ', 29), ('other equity ', 27), (' reserves surplus ', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [(' retained earnings ', 100), (' retained profits', 67), (' reserves surplus ', 33), ('other equity ', 26), (' accumulated losses ', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves surplus ', 63), ('other equity ', 33), (' retained earnings ', 24), (' retained profits', 21), (' accumulated losses ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': 1053791.0, 'line_item_label': ['Retained earnings'], 'note_numbers': [nan], 'line_item_value': [1053791.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_others
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('minority interest ', 21), (' minority interest ', 21), (' noncontrolling interest ', 17), (' non-controlling interest', 17), (' non controlling interest ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' noncontrolling interest ', 38), (' non-controlling interest', 38), ('minority interest ', 30), (' non controlling interest ', 30), (' minority interest ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' noncontrolling interest ', 25), (' non-controlling interest', 25), ('minority interest ', 23), (' minority interest ', 23), (' non controlling interest ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('minority interest ', 39), (' noncontrolling interest ', 39), (' minority interest ', 39), (' non-controlling interest', 39), (' non controlling interest ', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 28), (' non-controlling interest', 28), (' non controlling interest ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['minority interest ', ' non controlling interest ', ' noncontrolling interest ', ' minority interest ', ' non-controlling interest'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('minority interest ', 21), (' minority interest ', 21), (' noncontrolling interest ', 17), (' non-controlling interest', 17), (' non controlling interest ', 16)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' noncontrolling interest ', 38), (' non-controlling interest', 38), ('minority interest ', 30), (' non controlling interest ', 30), (' minority interest ', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' noncontrolling interest ', 25), (' non-controlling interest', 25), ('minority interest ', 23), (' minority interest ', 23), (' non controlling interest ', 20)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('minority interest ', 39), (' noncontrolling interest ', 39), (' minority interest ', 39), (' non-controlling interest', 39), (' non controlling interest ', 38)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('minority interest ', 32), (' minority interest ', 32), (' noncontrolling interest ', 28), (' non-controlling interest', 28), (' non controlling interest ', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' noncontrolling interest ', 36), (' non-controlling interest', 36), ('minority interest ', 35), (' minority interest ', 35), (' non controlling interest ', 34)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('minority interest ', 30), (' minority interest ', 30), (' noncontrolling interest ', 16), (' non-controlling interest', 16), (' non controlling interest ', 15)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('minority interest ', 33), (' non controlling interest ', 33), (' minority interest ', 33), (' noncontrolling interest ', 21), (' non-controlling interest', 21)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('minority interest ', 48), (' minority interest ', 48), (' non controlling interest ', 39), (' noncontrolling interest ', 33), (' non-controlling interest', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('minority interest ', 40), (' minority interest ', 40), (' noncontrolling interest ', 32), (' non-controlling interest', 32), (' non controlling interest ', 23)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['shareholders equity(a)']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_shareholder_equity
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('shareholders equity(a)', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('shareholders equity(a)', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 47)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['shareholders equity(a)'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [('shareholders equity(a)', 27)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [('shareholders equity(a)', 33)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [('shareholders equity(a)', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [('shareholders equity(a)', 47)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [('shareholders equity(a)', 31)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [('shareholders equity(a)', 43)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('shareholders equity(a)', 30)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('shareholders equity(a)', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [('shareholders equity(a)', 26)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity ', ' hedge reserve']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:51+0530 - sLogger - DEBUG - df_meta_keyword = eqt_other_reserves
2023-08-28 10:54:51+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' reserves ', 36), (' hedge reserve ', 25), ('other reserves ', 24), (' foreign currency translation reserve ', 17), (' Foreign currency translation reserves', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' hedge reserve ', 33), ('other reserves ', 32), (' reserves ', 32), (' foreign currency translation reserve ', 32), (' Foreign currency translation reserves', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' foreign currency translation reserve ', 31), (' hedge reserve ', 31), (' Foreign currency translation reserves', 31), ('other reserves ', 30), (' reserves ', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other reserves ', 59), (' foreign currency translation reserve ', 49), (' Foreign currency translation reserves', 49), (' hedge reserve ', 42), (' reserves ', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' foreign currency translation reserve ', 29), (' Foreign currency translation reserves', 29), (' hedge reserve ', 21), ('other reserves ', 14), (' reserves ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' hedge reserve ', 30), ('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve ', 25), (' Foreign currency translation reserves', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), (' hedge reserve ', 71), ('other reserves ', 67), (' foreign currency translation reserve ', 32), (' Foreign currency translation reserves', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 32606.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [32606.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['other reserves ', ' reserves ', ' foreign currency translation reserve ', ' hedge reserve ', ' Foreign currency translation reserves'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = assets , res_fuzz_match = [(' reserves ', 36), (' hedge reserve ', 25), ('other reserves ', 24), (' foreign currency translation reserve ', 17), (' Foreign currency translation reserves', 17)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = current assets , res_fuzz_match = [(' hedge reserve ', 33), ('other reserves ', 32), (' reserves ', 32), (' foreign currency translation reserve ', 32), (' Foreign currency translation reserves', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = cash and cash equivalents , res_fuzz_match = [(' foreign currency translation reserve ', 31), (' hedge reserve ', 31), (' Foreign currency translation reserves', 31), ('other reserves ', 30), (' reserves ', 22)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [('other reserves ', 59), (' foreign currency translation reserve ', 49), (' Foreign currency translation reserves', 49), (' hedge reserve ', 42), (' reserves ', 29)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = liabilities and equity , res_fuzz_match = [(' foreign currency translation reserve ', 29), (' Foreign currency translation reserves', 29), (' hedge reserve ', 21), ('other reserves ', 14), (' reserves ', 9)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = net assets , res_fuzz_match = [(' hedge reserve ', 30), ('other reserves ', 29), (' reserves ', 27), (' foreign currency translation reserve ', 25), (' Foreign currency translation reserves', 25)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = equity , res_fuzz_match = [(' reserves ', 17), (' foreign currency translation reserve ', 16), (' Foreign currency translation reserves', 16), (' hedge reserve ', 12), ('other reserves ', 11)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = issued capital , res_fuzz_match = [('other reserves ', 27), (' foreign currency translation reserve ', 24), (' Foreign currency translation reserves', 24), (' hedge reserve ', 19), (' reserves ', 12)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = retained earnings , res_fuzz_match = [('other reserves ', 43), (' foreign currency translation reserve ', 43), (' Foreign currency translation reserves', 43), (' hedge reserve ', 36), (' reserves ', 24)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_particular = reserves , res_fuzz_match = [(' reserves ', 100), (' hedge reserve ', 71), ('other reserves ', 67), (' foreign currency translation reserve ', 32), (' Foreign currency translation reserves', 32)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': 34592.0, 'line_item_label': ['Reserves'], 'note_numbers': ['19'], 'line_item_value': [34592.0]}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity ', ' hedge reserve'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000) , res_fuzz_match = [('foreign currency translation reserve ', 48), (' reserve in joint venture ', 42), (' other reserve ', 42), (' other  components of equity ', 42), (' tax reserve ', 40), (' total other reserves ', 39), (' cash flow hedge reserve ', 38), (' hedge reserve', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = ordinary shares 290,000,000 ordinary shares of $1.00 each, fully paid (2022: 290,000,000) , res_fuzz_match = [('foreign currency translation reserve ', 48), (' reserve in joint venture ', 42), (' other reserve ', 42), (' other  components of equity ', 42), (' tax reserve ', 40), (' total other reserves ', 39), (' cash flow hedge reserve ', 38), (' hedge reserve', 36)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:51+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:51+0530 - sLogger - DEBUG - keywords = ['foreign currency translation reserve ', ' cash flow hedge reserve ', ' reserve in joint venture ', ' other reserve ', ' total other reserves ', ' tax reserve ', ' other  components of equity ', ' hedge reserve'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 1 april , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: netincrease on cash flow hedge for the year , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' tax reserve ', 70), (' other reserve ', 67), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 47)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: income tax expense from cash flow hedge reserve , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 31 march , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 1 april , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: exchange differences on translation of foreign operations , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: income tax (expense)benefit from foreign currency translation , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 31 march , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 1 april , res_fuzz_match = [(' total other reserves ', 56), (' other reserve ', 50), (' other  components of equity ', 47), (' hedge reserve', 45), (' tax reserve ', 40), ('foreign currency translation reserve ', 39), (' cash flow hedge reserve ', 38), (' reserve in joint venture ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: actuarial loss on pension for the year , res_fuzz_match = [(' other reserve ', 58), (' total other reserves ', 56), (' cash flow hedge reserve ', 48), (' other  components of equity ', 47), (' hedge reserve', 45), (' reserve in joint venture ', 42), (' tax reserve ', 40), ('foreign currency translation reserve ', 35)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: income tax benefit from pension reserve , res_fuzz_match = [(' tax reserve ', 70), (' other reserve ', 67), (' hedge reserve', 64), (' cash flow hedge reserve ', 57), (' total other reserves ', 56), (' other  components of equity ', 47), ('foreign currency translation reserve ', 45), (' reserve in joint venture ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 31 march , res_fuzz_match = [(' total other reserves ', 56), (' other reserve ', 50), (' other  components of equity ', 47), (' hedge reserve', 45), (' tax reserve ', 40), ('foreign currency translation reserve ', 39), (' cash flow hedge reserve ', 38), (' reserve in joint venture ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: total reserves , res_fuzz_match = [(' tax reserve ', 90), (' other reserve ', 75), (' total other reserves ', 67), (' hedge reserve', 64), (' cash flow hedge reserve ', 62), ('foreign currency translation reserve ', 55), (' other  components of equity ', 47), (' reserve in joint venture ', 37)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 1 april , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: netincrease on cash flow hedge for the year , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' tax reserve ', 70), (' other reserve ', 67), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 47)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: income tax expense from cash flow hedge reserve , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: balance at 31 march , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the cash flow hedge reserve were as follows: total , res_fuzz_match = [(' cash flow hedge reserve ', 100), (' hedge reserve', 100), (' other reserve ', 75), (' tax reserve ', 70), (' total other reserves ', 61), ('foreign currency translation reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:51+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 1 april , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: exchange differences on translation of foreign operations , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: income tax (expense)benefit from foreign currency translation , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 48), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: balance at 31 march , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the foreign currency translation reserv were as follows: total , res_fuzz_match = [('foreign currency translation reserve ', 100), (' tax reserve ', 80), (' other reserve ', 67), (' hedge reserve', 64), (' total other reserves ', 61), (' cash flow hedge reserve ', 52), (' reserve in joint venture ', 47), (' other  components of equity ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 1 april , res_fuzz_match = [(' total other reserves ', 56), (' other reserve ', 50), (' other  components of equity ', 47), (' hedge reserve', 45), (' tax reserve ', 40), ('foreign currency translation reserve ', 39), (' cash flow hedge reserve ', 38), (' reserve in joint venture ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: actuarial loss on pension for the year , res_fuzz_match = [(' other reserve ', 58), (' total other reserves ', 56), (' cash flow hedge reserve ', 48), (' other  components of equity ', 47), (' hedge reserve', 45), (' reserve in joint venture ', 42), (' tax reserve ', 40), ('foreign currency translation reserve ', 35)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: income tax benefit from pension reserve , res_fuzz_match = [(' tax reserve ', 70), (' other reserve ', 67), (' hedge reserve', 64), (' cash flow hedge reserve ', 57), (' total other reserves ', 56), (' other  components of equity ', 47), ('foreign currency translation reserve ', 45), (' reserve in joint venture ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: balance at 31 march , res_fuzz_match = [(' total other reserves ', 56), (' other reserve ', 50), (' other  components of equity ', 47), (' hedge reserve', 45), (' tax reserve ', 40), ('foreign currency translation reserve ', 39), (' cash flow hedge reserve ', 38), (' reserve in joint venture ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = movements in the pension were as follows: total reserves , res_fuzz_match = [(' tax reserve ', 90), (' other reserve ', 75), (' total other reserves ', 67), (' hedge reserve', 64), (' cash flow hedge reserve ', 62), ('foreign currency translation reserve ', 55), (' other  components of equity ', 47), (' reserve in joint venture ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('foreign currency translation reserve ', 0), (' cash flow hedge reserve ', 0), (' reserve in joint venture ', 0), (' other reserve ', 0), (' total other reserves ', 0), (' tax reserve ', 0), (' other  components of equity ', 0), (' hedge reserve', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 33], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 90, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 90], 'value': [31401.0, 1282.0, -303.0, 32380.0, 2023.0, 0.0, -737.0, 1756.0, -527.0, 492.0, 2023.0, 0.0, 34592.0, -12729.0, 65230.0, -21100.0, 31401.0, 2022.0, 0.0, -705.0, -46.0, 14.0, -737.0, 2022.0, 0.0, 32606.0], 'label': ['Movements in the cash flow hedge reserve were as follows: Balance at 1 April', 'Movements in the cash flow hedge reserve were as follows: Netincrease on cash flow hedge for the year', 'Movements in the cash flow hedge reserve were as follows: Income tax expense from cash flow hedge reserve', 'Movements in the cash flow hedge reserve were as follows: Balance at 31 March', 'Movements in the cash flow hedge reserve were as follows: Total', 'Movements in the cash flow hedge reserve were as follows: Total', 'Movements in the foreign currency translation reserv were as follows: Balance at 1 April', 'Movements in the foreign currency translation reserv were as follows: Exchange differences on translation of foreign operations', 'Movements in the foreign currency translation reserv were as follows: Income tax (expense)benefit from foreign currency translation', 'Movements in the foreign currency translation reserv were as follows: Balance at 31 March', 'Movements in the foreign currency translation reserv were as follows: Total', 'Movements in the foreign currency translation reserv were as follows: Total', 'Movements in the pension were as follows: Total reserves', 'Movements in the cash flow hedge reserve were as follows: Balance at 1 April', 'Movements in the cash flow hedge reserve were as follows: Netincrease on cash flow hedge for the year', 'Movements in the cash flow hedge reserve were as follows: Income tax expense from cash flow hedge reserve', 'Movements in the cash flow hedge reserve were as follows: Balance at 31 March', 'Movements in the cash flow hedge reserve were as follows: Total', 'Movements in the cash flow hedge reserve were as follows: Total', 'Movements in the foreign currency translation reserv were as follows: Balance at 1 April', 'Movements in the foreign currency translation reserv were as follows: Exchange differences on translation of foreign operations', 'Movements in the foreign currency translation reserv were as follows: Income tax (expense)benefit from foreign currency translation', 'Movements in the foreign currency translation reserv were as follows: Balance at 31 March', 'Movements in the foreign currency translation reserv were as follows: Total', 'Movements in the foreign currency translation reserv were as follows: Total', 'Movements in the pension were as follows: Total reserves'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: get_subfields_sum
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: invalid literal for int() with base 10: 'Note'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: keyword_mapping , File:BSDataBucketingUtils.py,  function: calculate_other_Reserves_equity
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: 2022
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['total liabilities & equity']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = total_liability_equity
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['total liabilities & equity'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = lbt_total_liability
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ast_total_assets
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', '']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = nca_gross_ppe
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' property ', 43), (' plant and equipment ', 29), (' investment property ', 29), (' oil and gas properties ', 24), ('plant property equipment ', 23), (' property plant equipment ', 23), (' Exploration and evaluation assets', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' plant and equipment ', 47), (' Exploration and evaluation assets', 43), (' oil and gas properties ', 41), ('plant property equipment ', 29), (' property plant equipment ', 29), (' investment property ', 20), (' property ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' Exploration and evaluation assets', 53), (' oil and gas properties ', 42), (' plant and equipment ', 38), ('plant property equipment ', 31), (' property plant equipment ', 31), (' investment property ', 30), (' property ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' property ', 46), (' oil and gas properties ', 33), (' plant and equipment ', 30), (' investment property ', 30), ('plant property equipment ', 24), (' property plant equipment ', 24), (' Exploration and evaluation assets', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 34038.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [34038.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['plant property equipment ', ' property plant equipment ', ' plant and equipment ', ' investment property ', ' property ', ' oil and gas properties ', ' Exploration and evaluation assets'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = non-current assets , res_fuzz_match = [(' Exploration and evaluation assets', 46), (' investment property ', 36), (' oil and gas properties ', 31), ('plant property equipment ', 30), (' property plant equipment ', 30), (' plant and equipment ', 29), (' property ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = trade and other receivables , res_fuzz_match = [(' Exploration and evaluation assets', 45), (' oil and gas properties ', 44), (' plant and equipment ', 43), ('plant property equipment ', 33), (' property plant equipment ', 33), (' investment property ', 32), (' property ', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' property ', 43), (' plant and equipment ', 29), (' investment property ', 29), (' oil and gas properties ', 24), ('plant property equipment ', 23), (' property plant equipment ', 23), (' Exploration and evaluation assets', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = right-of-use assets , res_fuzz_match = [(' Exploration and evaluation assets', 38), (' investment property ', 33), ('plant property equipment ', 29), (' property plant equipment ', 29), (' plant and equipment ', 27), (' property ', 26), (' oil and gas properties ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' plant and equipment ', 47), (' Exploration and evaluation assets', 43), (' oil and gas properties ', 41), ('plant property equipment ', 29), (' property plant equipment ', 29), (' investment property ', 20), (' property ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = property, plant and equipment , res_fuzz_match = [('plant property equipment ', 91), (' property plant equipment ', 91), (' plant and equipment ', 77), (' oil and gas properties ', 70), (' investment property ', 62), (' property ', 50), (' Exploration and evaluation assets', 48)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = intangible assets and software under development , res_fuzz_match = [(' Exploration and evaluation assets', 53), (' oil and gas properties ', 42), (' plant and equipment ', 38), ('plant property equipment ', 31), (' property plant equipment ', 31), (' investment property ', 30), (' property ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [(' property ', 46), (' oil and gas properties ', 33), (' plant and equipment ', 30), (' investment property ', 30), ('plant property equipment ', 24), (' property plant equipment ', 24), (' Exploration and evaluation assets', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = deferred tax assets , res_fuzz_match = [(' Exploration and evaluation assets', 49), (' investment property ', 40), ('plant property equipment ', 34), (' property plant equipment ', 34), (' plant and equipment ', 33), (' oil and gas properties ', 29), (' property ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [5], 'score': 91, 'value': 32289.0, 'line_item_label': ['Property, plant and equipment'], 'note_numbers': ['10'], 'line_item_value': [32289.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['cost ', ' gross ', ' investment property ', ' Freehold land and buildings ', ' Plant and equipment ', ' Asset Retirement Obligation ', ' Construction ', ' Mine infrastructure ', ' Assets under construction ', ' Capitalised pre stripping costs ', ' Other assets in progress ', ' land and improvement ', ' Stripping WIP ', ' Building & mine infrastructure ', ' Mining properties ', ' under construction ', ' Freehold land ', ' Buildings ', ' Subsea ', ' Marine  Development properties ', ' Pipeline Asset ', ' Facilities ', ' Workshop tooling ', ' Fishing vessels & equipment ', ' Leasehold buildings ', ''] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [(' Leasehold buildings ', 93), (' Buildings ', 80), (' Freehold land ', 69), (' Freehold land and buildings ', 61), (' Plant and equipment ', 60), (' land and improvement ', 60), (' Asset Retirement Obligation ', 47), (' Fishing vessels & equipment ', 47), (' Assets under construction ', 43), (' gross ', 40), (' investment property ', 40), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Workshop tooling ', 38), (' Marine  Development properties ', 36), (' Other assets in progress ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Capitalised pre stripping costs ', 33), (' Stripping WIP ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), ('cost ', 25), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [(' Plant and equipment ', 73), (' land and improvement ', 60), (' Facilities ', 60), (' Mining properties ', 48), (' Freehold land and buildings ', 47), (' Assets under construction ', 47), (' Building & mine infrastructure ', 42), (' under construction ', 40), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Capitalised pre stripping costs ', 37), (' Marine  Development properties ', 37), (' Asset Retirement Obligation ', 35), (' investment property ', 34), (' Construction ', 33), (' Mine infrastructure ', 33), (' Leasehold buildings ', 33), (' Other assets in progress ', 26), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Stripping WIP ', 22), (' gross ', 20), (' Buildings ', 20), (' Subsea ', 17), (' Workshop tooling ', 8), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('cost ', 50), (' Marine  Development properties ', 50), (' Stripping WIP ', 44), (' Asset Retirement Obligation ', 42), (' Other assets in progress ', 42), (' Buildings ', 40), (' Facilities ', 40), (' investment property ', 35), (' Plant and equipment ', 33), (' Construction ', 33), (' Assets under construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Freehold land ', 33), (' Workshop tooling ', 33), (' Fishing vessels & equipment ', 33), (' Leasehold buildings ', 33), (' Mining properties ', 26), (' Freehold land and buildings ', 25), (' Mine infrastructure ', 25), (' land and improvement ', 25), (' Building & mine infrastructure ', 25), (' gross ', 20), (' Subsea ', 17), (' Pipeline Asset ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [(' Construction ', 100), (' Assets under construction ', 100), (' under construction ', 100), ('cost ', 75), (' Asset Retirement Obligation ', 59), (' Mine infrastructure ', 59), (' Building & mine infrastructure ', 52), (' Subsea ', 50), (' Capitalised pre stripping costs ', 48), (' Other assets in progress ', 45), (' gross ', 40), (' investment property ', 40), (' Plant and equipment ', 40), (' Buildings ', 40), (' Leasehold buildings ', 40), (' Mining properties ', 38), (' Marine  Development properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 34), (' land and improvement ', 33), (' Stripping WIP ', 33), (' Freehold land ', 31), (' Fishing vessels & equipment ', 29), (' Workshop tooling ', 23), (' Facilities ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('cost ', 100), (' Facilities ', 60), (' Construction ', 56), (' under construction ', 53), (' investment property ', 50), (' Asset Retirement Obligation ', 50), (' Assets under construction ', 50), (' Capitalised pre stripping costs ', 50), (' Other assets in progress ', 50), (' Stripping WIP ', 47), (' Buildings ', 44), (' gross ', 40), (' Freehold land and buildings ', 40), (' Mining properties ', 40), (' Marine  Development properties ', 40), (' Leasehold buildings ', 40), (' Subsea ', 33), (' Freehold land ', 32), (' Plant and equipment ', 30), (' Mine infrastructure ', 30), (' land and improvement ', 30), (' Building & mine infrastructure ', 30), (' Workshop tooling ', 30), (' Fishing vessels & equipment ', 30), (' Pipeline Asset ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('cost ', 100), (' under construction ', 53), (' Assets under construction ', 50), (' Stripping WIP ', 47), (' Construction ', 44), (' Freehold land ', 44), (' gross ', 40), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Capitalised pre stripping costs ', 40), (' land and improvement ', 40), (' Facilities ', 40), (' Workshop tooling ', 40), (' Subsea ', 33), (' Mine infrastructure ', 30), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 30), (' Mining properties ', 30), (' Marine  Development properties ', 30), (' Pipeline Asset ', 30), (' Fishing vessels & equipment ', 30), (' Leasehold buildings ', 30), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('cost ', 100), (' Construction ', 56), (' investment property ', 46), (' Asset Retirement Obligation ', 46), (' Assets under construction ', 46), (' gross ', 40), (' Plant and equipment ', 38), (' Mine infrastructure ', 38), (' Capitalised pre stripping costs ', 38), (' Other assets in progress ', 38), (' Building & mine infrastructure ', 38), (' under construction ', 38), (' Marine  Development properties ', 38), (' Stripping WIP ', 33), (' Subsea ', 33), (' Freehold land and buildings ', 31), (' land and improvement ', 31), (' Mining properties ', 31), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Fishing vessels & equipment ', 31), (' Leasehold buildings ', 23), (' Facilities ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('cost ', 50), (' Plant and equipment ', 47), (' Asset Retirement Obligation ', 41), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' investment property ', 40), (' Other assets in progress ', 40), (' land and improvement ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Capitalised pre stripping costs ', 38), (' Freehold land ', 38), (' Pipeline Asset ', 38), (' Marine  Development properties ', 36), (' Freehold land and buildings ', 35), (' Construction ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Mining properties ', 31), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Leasehold buildings ', 20), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [(' land and improvement ', 53), ('cost ', 50), (' Plant and equipment ', 47), (' Construction ', 44), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 42), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Other assets in progress ', 40), (' under construction ', 40), (' Facilities ', 40), (' Freehold land and buildings ', 39), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Mining properties ', 38), (' Marine  Development properties ', 36), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Building & mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Pipeline Asset ', 31), (' Workshop tooling ', 31), (' Leasehold buildings ', 27), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('cost ', 50), (' land and improvement ', 47), (' Fishing vessels & equipment ', 41), (' gross ', 40), (' Plant and equipment ', 40), (' Other assets in progress ', 40), (' Facilities ', 40), (' Mine infrastructure ', 39), (' Assets under construction ', 38), (' Building & mine infrastructure ', 38), (' Mining properties ', 38), (' Pipeline Asset ', 38), (' Freehold land and buildings ', 35), (' Asset Retirement Obligation ', 35), (' investment property ', 33), (' Construction ', 33), (' Capitalised pre stripping costs ', 33), (' under construction ', 33), (' Subsea ', 33), (' Marine  Development properties ', 32), (' Freehold land ', 31), (' Leasehold buildings ', 27), (' Workshop tooling ', 23), (' Stripping WIP ', 22), (' Buildings ', 0), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [(' Buildings ', 60), (' Facilities ', 60), (' Mining properties ', 46), (' Stripping WIP ', 44), (' Capitalised pre stripping costs ', 43), (' Marine  Development properties ', 43), (' investment property ', 40), (' Plant and equipment ', 40), (' land and improvement ', 40), (' Pipeline Asset ', 40), (' Leasehold buildings ', 40), (' Asset Retirement Obligation ', 36), (' under construction ', 34), (' Freehold land and buildings ', 33), (' Assets under construction ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Other assets in progress ', 30), (' Building & mine infrastructure ', 29), (' Fishing vessels & equipment ', 29), (' Mine infrastructure ', 28), ('cost ', 25), (' Workshop tooling ', 23), (' Construction ', 22), (' gross ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('cost ', 50), (' investment property ', 47), (' Pipeline Asset ', 46), (' Stripping WIP ', 44), (' Marine  Development properties ', 41), (' Facilities ', 40), (' Capitalised pre stripping costs ', 38), (' Mining properties ', 38), (' Freehold land ', 38), (' Asset Retirement Obligation ', 35), (' Other assets in progress ', 35), (' Fishing vessels & equipment ', 35), (' Construction ', 33), (' Mine infrastructure ', 33), (' Assets under construction ', 33), (' Building & mine infrastructure ', 33), (' under construction ', 33), (' Subsea ', 33), (' Workshop tooling ', 31), (' Plant and equipment ', 27), (' land and improvement ', 27), (' Leasehold buildings ', 27), (' Freehold land and buildings ', 26), (' gross ', 20), (' Buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [(' Pipeline Asset ', 46), (' Construction ', 44), (' Stripping WIP ', 44), (' Assets under construction ', 41), (' Capitalised pre stripping costs ', 40), (' under construction ', 40), (' Facilities ', 40), (' Mining properties ', 38), (' Other assets in progress ', 36), (' Building & mine infrastructure ', 35), (' Marine  Development properties ', 35), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' Subsea ', 33), (' Freehold land ', 31), (' Freehold land and buildings ', 30), (' Asset Retirement Obligation ', 29), (' Fishing vessels & equipment ', 29), (' Plant and equipment ', 27), ('cost ', 25), (' Workshop tooling ', 23), (' gross ', 20), (' Buildings ', 20), (' Leasehold buildings ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [(' Facilities ', 40), (' Assets under construction ', 37), (' land and improvement ', 34), (' investment property ', 33), (' Mine infrastructure ', 33), (' under construction ', 33), (' Freehold land and buildings ', 32), (' Capitalised pre stripping costs ', 32), (' Building & mine infrastructure ', 32), (' Marine  Development properties ', 32), (' Mining properties ', 31), (' Freehold land ', 31), (' Workshop tooling ', 31), (' Asset Retirement Obligation ', 29), (' Other assets in progress ', 27), (' Leasehold buildings ', 27), ('cost ', 25), (' Fishing vessels & equipment ', 24), (' Pipeline Asset ', 23), (' Construction ', 22), (' Stripping WIP ', 22), (' gross ', 20), (' Plant and equipment ', 20), (' Buildings ', 20), (' Subsea ', 17), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Capitalised pre stripping costs ', 60), (' Workshop tooling ', 60), ('cost ', 50), (' investment property ', 40), (' Freehold land and buildings ', 40), (' Plant and equipment ', 40), (' Asset Retirement Obligation ', 40), (' Construction ', 40), (' Mine infrastructure ', 40), (' Assets under construction ', 40), (' Building & mine infrastructure ', 40), (' under construction ', 40), (' Freehold land ', 40), (' Facilities ', 40), (' Leasehold buildings ', 40), (' gross ', 20), (' Other assets in progress ', 20), (' land and improvement ', 20), (' Stripping WIP ', 20), (' Mining properties ', 20), (' Buildings ', 20), (' Subsea ', 20), (' Marine  Development properties ', 20), (' Pipeline Asset ', 20), (' Fishing vessels & equipment ', 20), ('', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 0, 1, 1, 2, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 11, 12, 12, 13, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 33, 34, 35, 44, 44, 45, 45, 46, 46, 47, 48, 49, 50, 51, 52, 53, 54, 55, 56, 57], 'score': [100, 93, 100, 93, 100, 93, 93, 93, 93, 93, 93, 93, 93, 93, 100, 93, 100, 93, 100, 93, 93, 93, 93, 93, 93, 93, 93, 93, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [14380.0, 14380.0, 0.0, 0.0, 67.0, 67.0, 0.0, 0.0, 14447.0, 8225.0, 413.0, 8638.0, 5809.0, 6155.0, 3883.0, 3883.0, 0.0, 0.0, 0.0, 0.0, 0.0, 0.0, 3883.0, 1015.0, 368.0, 1383.0, 2500.0, 2868.0, 22180.0, 263.0, 1162.0, 2242.0, 2756.0, 0.0, 7002.0, 7002.0, 1421.0, 1421.0, -1229.0, -1229.0, 0.0, 0.0, 7194.0, 0.0, 0.0, 0.0, 7194.0, 7002.0, 49687.0, 4440.0, 0.0], 'label': ['Cost At 1 April 2022', "Land and Leasehold buldingsimprovements $'000", 'Cost Additions', "Land and Leasehold buldingsimprovements $'000", 'Cost Transfers', "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", 'Cost At 1 April 2022', "Land and Leasehold buldingsimprovements $'000", 'Cost Additions', "Land and Leasehold buldingsimprovements $'000", 'Cost Transfers', "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", "Land and Leasehold buldingsimprovements $'000", 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers', 'Cost At 1 April 2022', "Assets under construction $'000", 'Cost Additions', "Assets under construction $'000", 'Cost Transfers', "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", "Assets under construction $'000", 'Cost At 1 April 2022', 'Cost Additions', 'Cost Transfers'], 'year': [], 'colname_found': ['rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'columns', 'rows', 'rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['depreciatio', 'accumulated depreciation', 'net value', 'net book value'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = land and leasehold buldingsimprovements $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 36), ('accumulated depreciation', 34), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = plant and machinery $'000 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = motor vehicles $'000 , res_fuzz_match = [('net book value', 45), ('net value', 38), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = assets under construction $'000 , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('accumulated depreciation', 40), ('net book value', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost at 1 april 2022 , res_fuzz_match = [('net value', 50), ('accumulated depreciation', 40), ('net book value', 40), ('depreciatio', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost additions , res_fuzz_match = [('net value', 38), ('depreciatio', 30), ('accumulated depreciation', 30), ('net book value', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = cost transfers , res_fuzz_match = [('net value', 38), ('accumulated depreciation', 31), ('net book value', 24), ('depreciatio', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate effect of movement in exchange rate , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate disposals , res_fuzz_match = [('net value', 50), ('depreciatio', 45), ('net book value', 38), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = effect of movement in exchange rate at 31 march 2023 , res_fuzz_match = [('net value', 50), ('net book value', 38), ('depreciatio', 36), ('accumulated depreciation', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = accumulated depreciation at 1 april 2022 , res_fuzz_match = [('accumulated depreciation', 100), ('depreciatio', 73), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense for the year , res_fuzz_match = [('depreciatio', 64), ('net value', 38), ('accumulated depreciation', 33), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = depreciation expense at 31 march 2023 , res_fuzz_match = [('depreciatio', 64), ('accumulated depreciation', 47), ('net value', 38), ('net book value', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2023 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net book value at 31 march 2022 , res_fuzz_match = [('net book value', 100), ('net value', 62), ('accumulated depreciation', 33), ('depreciatio', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [('net value', 60), ('depreciatio', 40), ('net book value', 40), ('accumulated depreciation', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [6, 9, 10, 17, 20, 21, 28, 31, 32, 39, 42, 43, 50, 53, 54, 61, 64, 65], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [8225.0, 5809.0, 6155.0, 1015.0, 2500.0, 2868.0, 6365.0, 14996.0, 15815.0, 44.0, 1790.0, 2198.0, 0.0, 7194.0, 7002.0, 15649.0, 32289.0, 34038.0], 'label': ['Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022', 'Accumulated depreciation At 1 April 2022', 'Net book value At 31 March 2023', 'Net book value At 31 March 2022'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:BalanceSheetDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['trade receivables ', ' related party receivables ', ' trade debtors ', ' other debtors ', ' share of joint venture receivables ', ' net trade debtors ', 'charges paid in advance ', ' provision for impairment losses ', ' receivables from related parties ', ' allowance for expected credit loss ', ' trade debtors from contracts with customers ', ' Less allowance for impairment']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = ca_account_receivables
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), ('account receivables ', 29), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('account receivables ', 60), (' trade receivables ', 60), (' government subsidies receivable ', 60), (' receivable ', 60), (' trade and other receivables', 60), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' trade and other receivables', 47), (' trade receivables ', 33), (' receivable ', 33), (' government subsidies receivable ', 32), ('account receivables ', 29), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['account receivables ', ' trade receivables ', ' government subsidies receivable ', ' receivable ', ' billed ', ' unbilled ', ' trade and other receivables'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = prepayments , res_fuzz_match = [(' receivable ', 36), ('account receivables ', 33), (' trade receivables ', 33), (' government subsidies receivable ', 33), (' trade and other receivables', 33), (' billed ', 0), (' unbilled ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = loans and advances , res_fuzz_match = [(' trade and other receivables', 40), (' trade receivables ', 33), (' government subsidies receivable ', 33), ('account receivables ', 29), (' unbilled ', 20), (' receivable ', 17), (' billed ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = derivatives , res_fuzz_match = [('account receivables ', 60), (' trade receivables ', 60), (' government subsidies receivable ', 60), (' receivable ', 60), (' trade and other receivables', 60), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = assets held for sale , res_fuzz_match = [(' trade and other receivables', 47), (' trade receivables ', 33), (' receivable ', 33), (' government subsidies receivable ', 32), ('account receivables ', 29), (' billed ', 25), (' unbilled ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - CBS fetch_report completed
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities ', 63), ('revenue from operations ', 50), (' Revenue from rendering of services', 49), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Rendering of services ', 31), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities ', 38), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' Revenue from rendering of services', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Rendering of services ', 27), ('revenue from operations ', 24), (' Revenue from rendering of services', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('revenue from operations ', 42), (' net sales ', 40), (' Revenue from rendering of services', 38), (' revenue from continuing activities ', 34), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' Sales revenue ', 30), (' Rendering of services ', 29), (' sale of products ', 24), (' transmission and distribution business ', 24), (' Revenue ', 21), (' Sale of coal ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' revenue from continuing activities ', 43), (' Revenue from rendering of services', 43), ('revenue from operations ', 38), (' transmission and distribution business ', 37), (' Rendering of services ', 36), (' revenue from contracts with customers ', 34), (' Sales revenue ', 27), (' sale of products ', 26), (' Revenue ', 25), (' net sales ', 24), (' from trading business ', 24), (' Sale of coal ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' transmission and distribution business ', 39), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 35), (' Rendering of services ', 32), (' Revenue from rendering of services', 32), ('revenue from operations ', 28), (' sale of products ', 24), (' from trading business ', 23), (' net sales ', 22), (' Sales revenue ', 21), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' transmission and distribution business ', 40), (' revenue from continuing activities ', 34), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' net sales ', 27), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Revenue from rendering of services', 26), (' Rendering of services ', 23), (' from trading business ', 22), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' Rendering of services ', 40), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' Revenue from rendering of services', 32), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities ', 22), (' Sale of coal ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities ', 33), (' net sales ', 32), (' from trading business ', 31), (' Revenue from rendering of services', 28), (' transmission and distribution business ', 26), (' Rendering of services ', 25), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' Rendering of services ', 34), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Revenue from rendering of services', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 40), (' from trading business ', 38), (' revenue from continuing activities ', 38), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities ', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' Rendering of services ', 34), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' revenue from continuing activities ', 33), (' Revenue from rendering of services', 33), (' from trading business ', 27), (' Rendering of services ', 27), (' Sales revenue ', 23), (' sale of products ', 22), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' revenue from continuing activities ', 33), (' Revenue from rendering of services', 33), (' from trading business ', 27), (' Rendering of services ', 27), (' Sales revenue ', 23), (' sale of products ', 22), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('revenue from operations ', 38), (' Revenue from rendering of services', 36), (' from trading business ', 35), (' transmission and distribution business ', 34), (' revenue from continuing activities ', 33), (' revenue from contracts with customers ', 32), (' Rendering of services ', 30), (' Sales revenue ', 24), (' sale of products ', 20), (' net sales ', 18), (' Sale of coal ', 18), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' net sales ', 36), (' sale of products ', 27), (' from trading business ', 22), (' Sale of coal ', 17), (' Sales revenue ', 14), (' transmission and distribution business ', 13), (' revenue from contracts with customers ', 11), (' revenue from continuing activities ', 7), ('revenue from operations ', 0), (' Revenue ', 0), (' Rendering of services ', 0), (' Revenue from rendering of services', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 44), (' revenue from continuing activities ', 38), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' from trading business ', 34), (' Rendering of services ', 27), (' net sales ', 26), (' Sale of coal ', 26), (' sale of products ', 24), (' Sales revenue ', 24), (' Revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 37), ('revenue from operations ', 31), (' transmission and distribution business ', 31), (' from trading business ', 31), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' sale of products ', 26), (' Sales revenue ', 23), (' net sales ', 21), (' Sale of coal ', 21), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities ', 36), (' from trading business ', 35), (' Revenue from rendering of services', 29), (' transmission and distribution business ', 27), (' Rendering of services ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' Sales revenue ', 24), (' sale of products ', 23), (' Revenue ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' revenue from continuing activities ', 32), ('revenue from operations ', 31), (' Rendering of services ', 29), (' from trading business ', 25), (' Sales revenue ', 23), (' sale of products ', 20), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' sale of products ', 54), ('revenue from operations ', 40), (' Rendering of services ', 37), (' net sales ', 36), (' Revenue from rendering of services', 36), (' Sale of coal ', 35), (' Sales revenue ', 32), (' Revenue ', 30), (' from trading business ', 28), (' revenue from contracts with customers ', 26), (' revenue from continuing activities ', 26), (' transmission and distribution business ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 35), (' revenue from contracts with customers ', 32), (' revenue from continuing activities ', 32), ('revenue from operations ', 30), (' Revenue from rendering of services', 30), (' Rendering of services ', 26), (' from trading business ', 23), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 35), (' revenue from contracts with customers ', 32), (' revenue from continuing activities ', 32), ('revenue from operations ', 30), (' Revenue from rendering of services', 30), (' Rendering of services ', 26), (' from trading business ', 23), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' revenue from continuing activities ', 50), (' Revenue from rendering of services', 46), ('revenue from operations ', 42), (' Rendering of services ', 40), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' from trading business ', 33), (' Sale of coal ', 33), (' Sales revenue ', 32), (' sale of products ', 26), (' net sales ', 23), (' Revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 39), ('revenue from operations ', 35), (' Sales revenue ', 34), (' Revenue from rendering of services', 33), (' net sales ', 31), (' transmission and distribution business ', 31), (' from trading business ', 31), (' Sale of coal ', 30), (' sale of products ', 28), (' Rendering of services ', 27), (' Revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' transmission and distribution business ', 35), (' Revenue from rendering of services', 34), (' revenue from contracts with customers ', 33), (' revenue from continuing activities ', 31), (' Rendering of services ', 28), ('revenue from operations ', 26), (' Sales revenue ', 25), (' from trading business ', 21), (' Sale of coal ', 20), (' sale of products ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' sale of products ', 54), ('revenue from operations ', 40), (' Rendering of services ', 37), (' net sales ', 36), (' Revenue from rendering of services', 36), (' Sale of coal ', 35), (' Sales revenue ', 32), (' Revenue ', 30), (' from trading business ', 28), (' revenue from contracts with customers ', 26), (' revenue from continuing activities ', 26), (' transmission and distribution business ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('revenue from operations ', 39), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' revenue from continuing activities ', 36), (' Revenue from rendering of services', 36), (' sale of products ', 34), (' Sales revenue ', 31), (' Rendering of services ', 30), (' net sales ', 29), (' transmission and distribution business ', 29), (' Sale of coal ', 24), (' Revenue ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities ', 37), (' Revenue from rendering of services', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' Rendering of services ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 1511601.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [1511601.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['revenue from operations ', ' sale of products ', ' net sales ', ' revenue from contracts with customers ', ' transmission and distribution business ', ' from trading business ', ' Sale of coal ', ' Sales revenue ', ' Revenue ', ' revenue from continuing activities ', ' Rendering of services ', ' Revenue from rendering of services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' revenue from contracts with customers ', 100), (' revenue from continuing activities ', 63), ('revenue from operations ', 50), (' Revenue from rendering of services', 49), (' from trading business ', 43), (' transmission and distribution business ', 33), (' Sales revenue ', 33), (' Revenue ', 32), (' Rendering of services ', 31), (' Sale of coal ', 29), (' sale of products ', 27), (' net sales ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' revenue from continuing activities ', 38), (' revenue from contracts with customers ', 32), (' Rendering of services ', 32), (' Revenue from rendering of services', 32), (' transmission and distribution business ', 30), (' from trading business ', 30), ('revenue from operations ', 21), (' net sales ', 20), (' Sale of coal ', 19), (' sale of products ', 17), (' Sales revenue ', 17), (' Revenue ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' from trading business ', 46), ('revenue from operations ', 44), (' Sale of coal ', 40), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 33), (' Rendering of services ', 33), (' net sales ', 32), (' Revenue from rendering of services', 28), (' Sales revenue ', 27), (' sale of products ', 26), (' transmission and distribution business ', 21), (' Revenue ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sale of coal ', 78), (' net sales ', 71), (' sale of products ', 67), (' Sales revenue ', 50), (' from trading business ', 33), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Rendering of services ', 27), ('revenue from operations ', 24), (' Revenue from rendering of services', 24), (' transmission and distribution business ', 22), (' Revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('revenue from operations ', 42), (' net sales ', 40), (' Revenue from rendering of services', 38), (' revenue from continuing activities ', 34), (' revenue from contracts with customers ', 33), (' from trading business ', 32), (' Sales revenue ', 30), (' Rendering of services ', 29), (' sale of products ', 24), (' transmission and distribution business ', 24), (' Revenue ', 21), (' Sale of coal ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' revenue from continuing activities ', 43), (' Revenue from rendering of services', 43), ('revenue from operations ', 38), (' transmission and distribution business ', 37), (' Rendering of services ', 36), (' revenue from contracts with customers ', 34), (' Sales revenue ', 27), (' sale of products ', 26), (' Revenue ', 25), (' net sales ', 24), (' from trading business ', 24), (' Sale of coal ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' transmission and distribution business ', 39), (' revenue from contracts with customers ', 37), (' revenue from continuing activities ', 35), (' Rendering of services ', 32), (' Revenue from rendering of services', 32), ('revenue from operations ', 28), (' sale of products ', 24), (' from trading business ', 23), (' net sales ', 22), (' Sales revenue ', 21), (' Sale of coal ', 19), (' Revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' transmission and distribution business ', 40), (' revenue from continuing activities ', 34), (' Sale of coal ', 32), (' Sales revenue ', 30), (' sale of products ', 29), (' net sales ', 27), ('revenue from operations ', 26), (' revenue from contracts with customers ', 26), (' Revenue from rendering of services', 26), (' Rendering of services ', 23), (' from trading business ', 22), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Sales revenue ', 43), (' Rendering of services ', 40), (' from trading business ', 37), (' sale of products ', 33), (' Revenue ', 33), (' Revenue from rendering of services', 32), (' net sales ', 30), ('revenue from operations ', 29), (' revenue from contracts with customers ', 27), (' transmission and distribution business ', 25), (' revenue from continuing activities ', 22), (' Sale of coal ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Sale of coal ', 40), (' sale of products ', 35), (' revenue from contracts with customers ', 33), (' revenue from continuing activities ', 33), (' net sales ', 32), (' from trading business ', 31), (' Revenue from rendering of services', 28), (' transmission and distribution business ', 26), (' Rendering of services ', 25), ('revenue from operations ', 22), (' Sales revenue ', 18), (' Revenue ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' from trading business ', 43), ('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 36), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' from trading business ', 45), (' Sales revenue ', 37), (' Rendering of services ', 34), (' transmission and distribution business ', 32), (' Sale of coal ', 32), (' sale of products ', 29), (' revenue from contracts with customers ', 29), (' revenue from continuing activities ', 29), (' Revenue from rendering of services', 29), (' Revenue ', 27), ('revenue from operations ', 25), (' net sales ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('revenue from operations ', 42), (' revenue from contracts with customers ', 41), (' transmission and distribution business ', 40), (' from trading business ', 38), (' revenue from continuing activities ', 38), (' sale of products ', 35), (' Revenue from rendering of services', 34), (' Rendering of services ', 29), (' net sales ', 27), (' Sale of coal ', 26), (' Sales revenue ', 24), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 41), (' from trading business ', 38), (' revenue from continuing activities ', 38), ('revenue from operations ', 37), (' Sales revenue ', 36), (' Rendering of services ', 34), (' sale of products ', 29), (' Revenue ', 29), (' transmission and distribution business ', 28), (' Sale of coal ', 26), (' net sales ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' revenue from continuing activities ', 33), (' Revenue from rendering of services', 33), (' from trading business ', 27), (' Rendering of services ', 27), (' Sales revenue ', 23), (' sale of products ', 22), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 36), (' revenue from contracts with customers ', 35), ('revenue from operations ', 34), (' revenue from continuing activities ', 33), (' Revenue from rendering of services', 33), (' from trading business ', 27), (' Rendering of services ', 27), (' Sales revenue ', 23), (' sale of products ', 22), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('revenue from operations ', 38), (' Revenue from rendering of services', 36), (' from trading business ', 35), (' transmission and distribution business ', 34), (' revenue from continuing activities ', 33), (' revenue from contracts with customers ', 32), (' Rendering of services ', 30), (' Sales revenue ', 24), (' sale of products ', 20), (' net sales ', 18), (' Sale of coal ', 18), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' net sales ', 36), (' sale of products ', 27), (' from trading business ', 22), (' Sale of coal ', 17), (' Sales revenue ', 14), (' transmission and distribution business ', 13), (' revenue from contracts with customers ', 11), (' revenue from continuing activities ', 7), ('revenue from operations ', 0), (' Revenue ', 0), (' Rendering of services ', 0), (' Revenue from rendering of services', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('revenue from operations ', 44), (' revenue from continuing activities ', 38), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' from trading business ', 34), (' Rendering of services ', 27), (' net sales ', 26), (' Sale of coal ', 26), (' sale of products ', 24), (' Sales revenue ', 24), (' Revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Revenue from rendering of services', 43), (' revenue from contracts with customers ', 37), ('revenue from operations ', 31), (' transmission and distribution business ', 31), (' from trading business ', 31), (' revenue from continuing activities ', 30), (' Rendering of services ', 29), (' sale of products ', 26), (' Sales revenue ', 23), (' net sales ', 21), (' Sale of coal ', 21), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' revenue from contracts with customers ', 41), (' revenue from continuing activities ', 36), (' from trading business ', 35), (' Revenue from rendering of services', 29), (' transmission and distribution business ', 27), (' Rendering of services ', 27), ('revenue from operations ', 26), (' net sales ', 26), (' Sale of coal ', 25), (' Sales revenue ', 24), (' sale of products ', 23), (' Revenue ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' Revenue from rendering of services', 35), (' revenue from continuing activities ', 32), ('revenue from operations ', 31), (' Rendering of services ', 29), (' from trading business ', 25), (' Sales revenue ', 23), (' sale of products ', 20), (' net sales ', 18), (' Sale of coal ', 17), (' Revenue ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' sale of products ', 54), ('revenue from operations ', 40), (' Rendering of services ', 37), (' net sales ', 36), (' Revenue from rendering of services', 36), (' Sale of coal ', 35), (' Sales revenue ', 32), (' Revenue ', 30), (' from trading business ', 28), (' revenue from contracts with customers ', 26), (' revenue from continuing activities ', 26), (' transmission and distribution business ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 35), (' revenue from contracts with customers ', 32), (' revenue from continuing activities ', 32), ('revenue from operations ', 30), (' Revenue from rendering of services', 30), (' Rendering of services ', 26), (' from trading business ', 23), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' transmission and distribution business ', 35), (' revenue from contracts with customers ', 32), (' revenue from continuing activities ', 32), ('revenue from operations ', 30), (' Revenue from rendering of services', 30), (' Rendering of services ', 26), (' from trading business ', 23), (' Sales revenue ', 22), (' sale of products ', 21), (' Sale of coal ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' revenue from continuing activities ', 50), (' Revenue from rendering of services', 46), ('revenue from operations ', 42), (' Rendering of services ', 40), (' revenue from contracts with customers ', 37), (' transmission and distribution business ', 36), (' from trading business ', 33), (' Sale of coal ', 33), (' Sales revenue ', 32), (' sale of products ', 26), (' net sales ', 23), (' Revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' revenue from continuing activities ', 41), (' revenue from contracts with customers ', 39), ('revenue from operations ', 35), (' Sales revenue ', 34), (' Revenue from rendering of services', 33), (' net sales ', 31), (' transmission and distribution business ', 31), (' from trading business ', 31), (' Sale of coal ', 30), (' sale of products ', 28), (' Rendering of services ', 27), (' Revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' transmission and distribution business ', 35), (' Revenue from rendering of services', 34), (' revenue from contracts with customers ', 33), (' revenue from continuing activities ', 31), (' Rendering of services ', 28), ('revenue from operations ', 26), (' Sales revenue ', 25), (' from trading business ', 21), (' Sale of coal ', 20), (' sale of products ', 19), (' net sales ', 17), (' Revenue ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' sale of products ', 54), ('revenue from operations ', 40), (' Rendering of services ', 37), (' net sales ', 36), (' Revenue from rendering of services', 36), (' Sale of coal ', 35), (' Sales revenue ', 32), (' Revenue ', 30), (' from trading business ', 28), (' revenue from contracts with customers ', 26), (' revenue from continuing activities ', 26), (' transmission and distribution business ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('revenue from operations ', 39), (' from trading business ', 39), (' revenue from contracts with customers ', 38), (' revenue from continuing activities ', 36), (' Revenue from rendering of services', 36), (' sale of products ', 34), (' Sales revenue ', 31), (' Rendering of services ', 30), (' net sales ', 29), (' transmission and distribution business ', 29), (' Sale of coal ', 24), (' Revenue ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' from trading business ', 40), (' revenue from contracts with customers ', 39), (' sale of products ', 38), (' revenue from continuing activities ', 37), (' Revenue from rendering of services', 37), (' Sales revenue ', 35), ('revenue from operations ', 31), (' transmission and distribution business ', 29), (' Rendering of services ', 29), (' net sales ', 28), (' Sale of coal ', 27), (' Revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0], 'score': 100, 'value': 1375297.0, 'line_item_label': ['Revenue from contracts with customers'], 'note_numbers': ['4.1'], 'line_item_value': [1375297.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 69), (' Sale of goods - Marine ', 60), (' Sale of goods - Motorcycles ', 53), (' Sale of goods - Spareparts ', 53), (' Condensate ', 43), (' Feed gas income ', 38), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue form contracts with customers ', 31), (' revenue from continuing activities ', 28), (' contribution from joint venture', 27), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service fees and commissions , res_fuzz_match = [(' Feed gas income ', 69), ('Sale of goods ', 67), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Motorcycles ', 47), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' Gas transportation income ', 39), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' Total Revenue ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service 2022 total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 58), (' Goods sold to customer from warehouse ', 53), (' Goods sold to customer direct from supplier ', 51), (' Gas transportation income ', 50), (' contribution from joint venture', 48), (' Sale of goods - Motorcycles ', 47), ('Sale of goods ', 44), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at a , res_fuzz_match = [(' Goods sold to customer direct from supplier ', 54), (' revenue from continuing activities ', 54), (' revenue form contracts with customers ', 46), (' contribution from joint venture', 46), (' Condensate ', 43), (' Total Revenue ', 42), (' Goods sold to customer from warehouse ', 42), (' Domgas ', 40), (' hedge loss / gain ', 38), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 31), (' Gas transportation income ', 31), (' Sale of goods - Motorcycles ', 31), (' Sale of goods - Marine ', 31), (' Sale of goods - Spareparts ', 31), (' Sale of goods - Cars ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition 2022 at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 vehicles $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' revenue form contracts with customers ', 38), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 34), (' Goods sold to customer direct from supplier ', 34), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 69), (' Sale of goods - Marine ', 60), (' Sale of goods - Motorcycles ', 53), (' Sale of goods - Spareparts ', 53), (' Condensate ', 43), (' Feed gas income ', 38), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue form contracts with customers ', 31), (' revenue from continuing activities ', 28), (' contribution from joint venture', 27), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service fees and commissions , res_fuzz_match = [(' Feed gas income ', 69), ('Sale of goods ', 67), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Motorcycles ', 47), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' Gas transportation income ', 39), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' Total Revenue ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service 2022 total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 58), (' Goods sold to customer from warehouse ', 53), (' Goods sold to customer direct from supplier ', 51), (' Gas transportation income ', 50), (' contribution from joint venture', 48), (' Sale of goods - Motorcycles ', 47), ('Sale of goods ', 44), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at a , res_fuzz_match = [(' Goods sold to customer direct from supplier ', 54), (' revenue from continuing activities ', 54), (' revenue form contracts with customers ', 46), (' contribution from joint venture', 46), (' Condensate ', 43), (' Total Revenue ', 42), (' Goods sold to customer from warehouse ', 42), (' Domgas ', 40), (' hedge loss / gain ', 38), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 31), (' Gas transportation income ', 31), (' Sale of goods - Motorcycles ', 31), (' Sale of goods - Marine ', 31), (' Sale of goods - Spareparts ', 31), (' Sale of goods - Cars ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition 2022 at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 parts $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Total Revenue ', 42), (' revenue form contracts with customers ', 41), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Goods sold to customer direct from supplier ', 37), (' hedge loss / gain ', 36), (' Goods sold to customer from warehouse ', 35), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 69), (' Sale of goods - Marine ', 60), (' Sale of goods - Motorcycles ', 53), (' Sale of goods - Spareparts ', 53), (' Condensate ', 43), (' Feed gas income ', 38), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue form contracts with customers ', 31), (' revenue from continuing activities ', 28), (' contribution from joint venture', 27), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service fees and commissions , res_fuzz_match = [(' Feed gas income ', 69), ('Sale of goods ', 67), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Motorcycles ', 47), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' Gas transportation income ', 39), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' Total Revenue ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service 2022 total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 58), (' Goods sold to customer from warehouse ', 53), (' Goods sold to customer direct from supplier ', 51), (' Gas transportation income ', 50), (' contribution from joint venture', 48), (' Sale of goods - Motorcycles ', 47), ('Sale of goods ', 44), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at a , res_fuzz_match = [(' Goods sold to customer direct from supplier ', 54), (' revenue from continuing activities ', 54), (' revenue form contracts with customers ', 46), (' contribution from joint venture', 46), (' Condensate ', 43), (' Total Revenue ', 42), (' Goods sold to customer from warehouse ', 42), (' Domgas ', 40), (' hedge loss / gain ', 38), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 31), (' Gas transportation income ', 31), (' Sale of goods - Motorcycles ', 31), (' Sale of goods - Marine ', 31), (' Sale of goods - Spareparts ', 31), (' Sale of goods - Cars ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition 2022 at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 financial services $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 53), (' revenue from continuing activities ', 48), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' Condensate ', 43), (' hedge loss / gain ', 43), (' revenue form contracts with customers ', 41), (' Gas transportation income ', 39), (' Sale of goods - Motorcycles ', 37), (' Sale of goods - Spareparts ', 37), (' contribution from joint venture', 37), (' Goods sold to customer direct from supplier ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 69), (' Sale of goods - Marine ', 60), (' Sale of goods - Motorcycles ', 53), (' Sale of goods - Spareparts ', 53), (' Condensate ', 43), (' Feed gas income ', 38), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue form contracts with customers ', 31), (' revenue from continuing activities ', 28), (' contribution from joint venture', 27), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service fees and commissions , res_fuzz_match = [(' Feed gas income ', 69), ('Sale of goods ', 67), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 53), (' Sale of goods - Motorcycles ', 47), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' Gas transportation income ', 39), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' Total Revenue ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service 2022 total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 62), (' Sale of goods - Marine ', 60), (' Sale of goods - Spareparts ', 58), (' Goods sold to customer from warehouse ', 53), (' Goods sold to customer direct from supplier ', 51), (' Gas transportation income ', 50), (' contribution from joint venture', 48), (' Sale of goods - Motorcycles ', 47), ('Sale of goods ', 44), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at a , res_fuzz_match = [(' Goods sold to customer direct from supplier ', 54), (' revenue from continuing activities ', 54), (' revenue form contracts with customers ', 46), (' contribution from joint venture', 46), (' Condensate ', 43), (' Total Revenue ', 42), (' Goods sold to customer from warehouse ', 42), (' Domgas ', 40), (' hedge loss / gain ', 38), ('Sale of goods ', 33), (' LNG ', 33), (' Feed gas income ', 31), (' Gas transportation income ', 31), (' Sale of goods - Motorcycles ', 31), (' Sale of goods - Marine ', 31), (' Sale of goods - Spareparts ', 31), (' Sale of goods - Cars ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = timing of recognition 2022 at goods a transferred point in time services transferred over time total from contracts with customers , res_fuzz_match = [(' revenue form contracts with customers ', 78), (' revenue from continuing activities ', 60), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Motorcycles ', 47), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Domgas ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = for the year ended 31 march 2022 total $'000 , res_fuzz_match = [(' Domgas ', 60), (' Sale of goods - Marine ', 47), (' Feed gas income ', 46), (' Sale of goods - Cars ', 46), (' revenue form contracts with customers ', 43), (' Sale of goods - Motorcycles ', 42), (' Sale of goods - Spareparts ', 42), (' Total Revenue ', 42), (' revenue from continuing activities ', 40), (' Gas transportation income ', 39), (' Goods sold to customer from warehouse ', 38), (' Goods sold to customer direct from supplier ', 36), (' hedge loss / gain ', 36), ('Sale of goods ', 33), (' LNG ', 33), (' contribution from joint venture', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 2, 6, 8, 12, 14, 18, 20], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [1286014.0, 1286014.0, 181048.0, 181048.0, 0.0, 44539.0, 1467062.0, 1511601.0], 'label': ['Type of goods or service Sale of goods', 'Type of goods or service 2022 Total revenue from contracts with customers', 'Type of goods or service Sale of goods', 'Type of goods or service 2022 Total revenue from contracts with customers', 'Type of goods or service Sale of goods', 'Type of goods or service 2022 Total revenue from contracts with customers', 'Type of goods or service Sale of goods', 'Type of goods or service 2022 Total revenue from contracts with customers'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 67), (' Sale of goods - Motorcycles ', 63), (' Sale of goods - Spareparts ', 63), (' Goods sold to customer from warehouse ', 47), (' Goods sold to customer direct from supplier ', 46), (' Condensate ', 43), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue from continuing activities ', 32), (' revenue form contracts with customers ', 31), (' contribution from joint venture', 30), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods fees and commissions , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Feed gas income ', 69), (' Sale of goods - Spareparts ', 63), (' Sale of goods - Motorcycles ', 58), (' Gas transportation income ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods 2023 total revenue from contracts with customers , res_fuzz_match = [('Sale of goods ', 100), (' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Sale of goods - Motorcycles ', 68), (' Sale of goods - Spareparts ', 68), (' contribution from joint venture', 52), (' Gas transportation income ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 46), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of in time , res_fuzz_match = [(' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), ('Sale of goods ', 25), (' Condensate ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Gas transportation income ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' hedge loss / gain ', 25), (' LNG ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of 2023 timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = vehicles $'000 , res_fuzz_match = [(' LNG ', 33), (' Feed gas income ', 33), (' Gas transportation income ', 33), (' Sale of goods - Motorcycles ', 33), (' Total Revenue ', 33), (' Goods sold to customer from warehouse ', 33), (' Goods sold to customer direct from supplier ', 33), (' revenue from continuing activities ', 33), (' revenue form contracts with customers ', 33), (' hedge loss / gain ', 33), (' contribution from joint venture', 33), ('Sale of goods ', 17), (' Condensate ', 17), (' Sale of goods - Cars ', 17), (' Sale of goods - Marine ', 17), (' Sale of goods - Spareparts ', 17), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 67), (' Sale of goods - Motorcycles ', 63), (' Sale of goods - Spareparts ', 63), (' Goods sold to customer from warehouse ', 47), (' Goods sold to customer direct from supplier ', 46), (' Condensate ', 43), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue from continuing activities ', 32), (' revenue form contracts with customers ', 31), (' contribution from joint venture', 30), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods fees and commissions , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Feed gas income ', 69), (' Sale of goods - Spareparts ', 63), (' Sale of goods - Motorcycles ', 58), (' Gas transportation income ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods 2023 total revenue from contracts with customers , res_fuzz_match = [('Sale of goods ', 100), (' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Sale of goods - Motorcycles ', 68), (' Sale of goods - Spareparts ', 68), (' contribution from joint venture', 52), (' Gas transportation income ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 46), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of in time , res_fuzz_match = [(' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), ('Sale of goods ', 25), (' Condensate ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Gas transportation income ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' hedge loss / gain ', 25), (' LNG ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of 2023 timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = parts $'000 , res_fuzz_match = [(' Sale of goods - Spareparts ', 100), (' Gas transportation income ', 75), (' Sale of goods - Cars ', 50), (' Sale of goods - Marine ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), ('Sale of goods ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Sale of goods - Motorcycles ', 25), (' Total Revenue ', 25), (' revenue from continuing activities ', 25), (' revenue form contracts with customers ', 25), (' hedge loss / gain ', 25), (' contribution from joint venture', 25), (' LNG ', 0), (' Condensate ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 67), (' Sale of goods - Motorcycles ', 63), (' Sale of goods - Spareparts ', 63), (' Goods sold to customer from warehouse ', 47), (' Goods sold to customer direct from supplier ', 46), (' Condensate ', 43), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue from continuing activities ', 32), (' revenue form contracts with customers ', 31), (' contribution from joint venture', 30), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods fees and commissions , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Feed gas income ', 69), (' Sale of goods - Spareparts ', 63), (' Sale of goods - Motorcycles ', 58), (' Gas transportation income ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods 2023 total revenue from contracts with customers , res_fuzz_match = [('Sale of goods ', 100), (' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Sale of goods - Motorcycles ', 68), (' Sale of goods - Spareparts ', 68), (' contribution from joint venture', 52), (' Gas transportation income ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 46), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of in time , res_fuzz_match = [(' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), ('Sale of goods ', 25), (' Condensate ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Gas transportation income ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' hedge loss / gain ', 25), (' LNG ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of 2023 timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = financial services $'000 , res_fuzz_match = [(' Gas transportation income ', 43), (' revenue from continuing activities ', 43), (' revenue form contracts with customers ', 43), (' Goods sold to customer direct from supplier ', 36), (' contribution from joint venture', 36), (' LNG ', 33), (' Total Revenue ', 33), (' Feed gas income ', 31), (' Condensate ', 29), (' Sale of goods - Marine ', 29), (' Sale of goods - Spareparts ', 29), (' Sale of goods - Cars ', 25), ('Sale of goods ', 22), (' Sale of goods - Motorcycles ', 21), (' Goods sold to customer from warehouse ', 21), (' hedge loss / gain ', 21), (' Domgas ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods type of goods or service sale of goods , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 67), (' Sale of goods - Motorcycles ', 63), (' Sale of goods - Spareparts ', 63), (' Goods sold to customer from warehouse ', 47), (' Goods sold to customer direct from supplier ', 46), (' Condensate ', 43), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Gas transportation income ', 33), (' Total Revenue ', 33), (' revenue from continuing activities ', 32), (' revenue form contracts with customers ', 31), (' contribution from joint venture', 30), (' Domgas ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods fees and commissions , res_fuzz_match = [('Sale of goods ', 100), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Feed gas income ', 69), (' Sale of goods - Spareparts ', 63), (' Sale of goods - Motorcycles ', 58), (' Gas transportation income ', 44), (' Condensate ', 43), (' Goods sold to customer from warehouse ', 43), (' hedge loss / gain ', 43), (' Total Revenue ', 42), (' Goods sold to customer direct from supplier ', 41), (' Domgas ', 40), (' revenue from continuing activities ', 36), (' revenue form contracts with customers ', 34), (' LNG ', 33), (' contribution from joint venture', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = type of goods or service sale of goods 2023 total revenue from contracts with customers , res_fuzz_match = [('Sale of goods ', 100), (' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Sale of goods - Cars ', 77), (' Sale of goods - Marine ', 73), (' Sale of goods - Motorcycles ', 68), (' Sale of goods - Spareparts ', 68), (' contribution from joint venture', 52), (' Gas transportation income ', 50), (' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 46), (' Domgas ', 40), (' Feed gas income ', 38), (' hedge loss / gain ', 36), (' LNG ', 33), (' Condensate ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of in time , res_fuzz_match = [(' Goods sold to customer from warehouse ', 50), (' Goods sold to customer direct from supplier ', 50), (' revenue from continuing activities ', 50), (' revenue form contracts with customers ', 50), (' contribution from joint venture', 50), ('Sale of goods ', 25), (' Condensate ', 25), (' Domgas ', 25), (' Feed gas income ', 25), (' Gas transportation income ', 25), (' Sale of goods - Cars ', 25), (' Sale of goods - Motorcycles ', 25), (' Sale of goods - Marine ', 25), (' Sale of goods - Spareparts ', 25), (' Total Revenue ', 25), (' hedge loss / gain ', 25), (' LNG ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = of 2023 timing of revenue recognition goods transferred at a point in time services transferred over time total revenue from contracts with customers , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 97), (' revenue from continuing activities ', 80), (' Gas transportation income ', 56), (' Sale of goods - Cars ', 54), (' Sale of goods - Marine ', 53), (' contribution from joint venture', 52), (' Sale of goods - Spareparts ', 47), ('Sale of goods ', 44), (' Condensate ', 43), (' Goods sold to customer direct from supplier ', 43), (' hedge loss / gain ', 43), (' Sale of goods - Motorcycles ', 42), (' Domgas ', 40), (' Goods sold to customer from warehouse ', 40), (' Feed gas income ', 38), (' LNG ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total $'000 , res_fuzz_match = [(' Total Revenue ', 100), (' revenue form contracts with customers ', 60), (' Domgas ', 40), (' Gas transportation income ', 40), (' Sale of goods - Motorcycles ', 40), (' Goods sold to customer from warehouse ', 40), (' Goods sold to customer direct from supplier ', 40), (' revenue from continuing activities ', 40), (' LNG ', 33), ('Sale of goods ', 20), (' Condensate ', 20), (' Feed gas income ', 20), (' Sale of goods - Cars ', 20), (' Sale of goods - Marine ', 20), (' Sale of goods - Spareparts ', 20), (' hedge loss / gain ', 20), (' contribution from joint venture', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 2, 4, 5, 6, 6, 7, 7, 8, 8, 9, 10, 10, 11, 11, 12, 13, 14, 16, 17, 18, 18, 19, 19, 20, 20, 21, 22, 22, 23, 23], 'score': [100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100, 100], 'value': [1158200.0, 0.0, 1158200.0, 0.0, 1158200.0, 173868.0, 173868.0, 0.0, 0.0, 173868.0, 173868.0, 173868.0, 0.0, 0.0, 173868.0, 173868.0, 0.0, 43229.0, 43229.0, 43229.0, 43229.0, 0.0, 0.0, 0.0, 0.0, 1375297.0, 1375297.0, 1332068.0, 43229.0, 43229.0, 1375297.0, 1375297.0], 'label': ['Type of goods or service Sale of goods Type of goods or service Sale of goods', 'Type of goods or service Sale of goods Fees and commissions', 'Type of goods or service Sale of goods 2023 Total revenue from contracts with customers', 'of Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', 'of 2023 Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', 'Type of goods or service Sale of goods Type of goods or service Sale of goods', "Parts $'000", 'Type of goods or service Sale of goods Fees and commissions', "Parts $'000", 'Type of goods or service Sale of goods 2023 Total revenue from contracts with customers', "Parts $'000", "Parts $'000", 'of Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', "Parts $'000", 'of 2023 Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', "Parts $'000", 'Type of goods or service Sale of goods Type of goods or service Sale of goods', 'Type of goods or service Sale of goods Fees and commissions', 'Type of goods or service Sale of goods 2023 Total revenue from contracts with customers', 'of Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', 'of 2023 Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', 'Type of goods or service Sale of goods Type of goods or service Sale of goods', "Total $'000", 'Type of goods or service Sale of goods Fees and commissions', "Total $'000", 'Type of goods or service Sale of goods 2023 Total revenue from contracts with customers', "Total $'000", "Total $'000", 'of Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', "Total $'000", 'of 2023 Timing of revenue recognition Goods transferred at a point in time Services transferred over time Total revenue from contracts with customers', "Total $'000"], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'columns', 'rows', 'columns', 'rows', 'columns', 'columns', 'rows', 'columns', 'rows', 'columns']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Sale of goods ', ' LNG ', ' Condensate ', ' Domgas ', ' Feed gas income ', ' Gas transportation income ', ' Sale of goods - Cars ', ' Sale of goods - Motorcycles ', ' Sale of goods - Marine ', ' Sale of goods - Spareparts ', ' Total Revenue ', ' Goods sold to customer from warehouse ', ' Goods sold to customer direct from supplier ', ' revenue from continuing activities ', ' revenue form contracts with customers ', ' hedge loss / gain ', ' contribution from joint venture'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Included in cost of sales ', ' cost of goods']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = cost_of_sales
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Cost of rendering services', 40), (' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Premises cost ', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory ', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory ', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), (' Cost of rendering services', 27), ('purchase of stock-in-trade', 26), (' Premises cost ', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Premises cost ', 60), (' Cost of product sold', 54), (' Cost of rendering services', 52), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory ', 25), ('expense', 13), ('expenditure', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('total expenditure', 32), ('expenditure', 31), (' Cost of product sold', 31), (' Cost of goods and services sold', 30), (' Premises cost ', 30), (' Cost of rendering services', 30), (' Cost of inventory sold', 29), (' Personnel costs', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26), (' cost of coal sold', 22), (' change in inventory ', 22), ('purchase of stock-in-trade', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Premises cost ', 43), (' Cost of rendering services', 41), (' Cost of inventory sold', 40), ('expense', 38), (' Cost of product sold', 37), ('total expenses', 32), (' cost of coal sold', 30), (' Personnel costs', 30), (' cost of goods sold ', 30), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory ', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenditure', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Cost of rendering services', 36), (' Cost of goods and services sold', 35), (' change in inventory ', 31), (' Cost of inventory sold', 30), (' Personnel costs', 29), ('purchase of stock-in-trade', 27), (' cost of coal sold', 26), ('total expenditure', 25), (' Cost of product sold', 25), (' Premises cost ', 24), (' cost of goods sold ', 20), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('total expenses', 18), ('expense', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), (' Personnel costs', 33), (' change in inventory ', 32), (' Cost of product sold', 31), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26), ('expenditure', 25), ('total expenses', 24), (' Premises cost ', 24), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of rendering services', 33), (' Cost of goods and services sold', 32), (' change in inventory ', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' Premises cost ', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Premises cost ', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory ', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 30), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 29), (' Cost of rendering services', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24), (' Premises cost ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), (' change in inventory ', 38), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' Cost of goods and services sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory ', 43), ('total expenses', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Premises cost ', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 31), (' Cost of rendering services', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' Personnel costs', 30), (' Premises cost ', 28), (' cost of coal sold', 27), (' cost of goods sold ', 27), (' change in inventory ', 27), ('total expenditure', 26), ('total expenses', 25), ('expenditure', 20), ('cost of sales', 20), ('Cost of sales', 20), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 31), (' Cost of rendering services', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' Personnel costs', 30), (' Premises cost ', 28), (' cost of coal sold', 27), (' cost of goods sold ', 27), (' change in inventory ', 27), ('total expenditure', 26), ('total expenses', 25), ('expenditure', 20), ('cost of sales', 20), ('Cost of sales', 20), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' change in inventory ', 35), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of rendering services', 30), (' Personnel costs', 29), (' cost of coal sold', 26), (' cost of goods sold ', 26), (' Cost of product sold', 25), ('expenditure', 24), ('expense', 22), (' Premises cost ', 20), ('cost of sales', 18), ('Cost of sales', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('cost of sales', 33), ('Cost of sales', 33), ('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('expenditure', 15), (' Premises cost ', 14), (' cost of coal sold', 12), (' Personnel costs', 12), (' cost of goods sold ', 12), (' change in inventory ', 11), (' Cost of product sold', 10), (' Cost of rendering services', 10), (' Cost of inventory sold', 9), (' Cost of goods and services sold', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Cost of inventory sold', 39), ('total expenditure', 37), (' Cost of rendering services', 36), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('total expenses', 32), (' Personnel costs', 31), (' change in inventory ', 30), (' Premises cost ', 29), ('purchase of stock-in-trade', 28), ('cost of sales', 26), ('Cost of sales', 26), ('expenditure', 25), ('expense', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Cost of rendering services', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' cost of coal sold', 32), (' change in inventory ', 31), (' Cost of inventory sold', 29), ('total expenditure', 28), (' Cost of product sold', 27), (' Premises cost ', 27), ('total expenses', 26), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), (' cost of goods sold ', 22), ('expenditure', 20), ('expense', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('purchase of stock-in-trade', 40), (' Cost of goods and services sold', 39), (' Cost of rendering services', 37), (' cost of coal sold', 36), (' cost of goods sold ', 36), (' Cost of product sold', 33), (' Cost of inventory sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), (' change in inventory ', 30), (' Premises cost ', 29), ('total expenses', 28), (' Personnel costs', 27), ('expenditure', 24), ('expense', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Cost of inventory sold', 38), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' change in inventory ', 34), (' Cost of product sold', 33), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), ('total expenditure', 31), ('total expenses', 30), (' Premises cost ', 30), (' cost of goods sold ', 29), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('cost of sales', 35), ('Cost of sales', 35), ('expenditure', 33), (' Premises cost ', 32), (' Cost of rendering services', 31), ('expense', 30), (' Cost of inventory sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 27), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 24), ('total expenses', 23), (' change in inventory ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' Personnel costs', 29), (' cost of goods sold ', 29), (' Premises cost ', 27), (' cost of coal sold', 26), ('total expenses', 24), ('total expenditure', 23), (' change in inventory ', 23), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' Personnel costs', 29), (' cost of goods sold ', 29), (' Premises cost ', 27), (' cost of coal sold', 26), ('total expenses', 24), ('total expenditure', 23), (' change in inventory ', 23), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Personnel costs', 49), (' Cost of rendering services', 49), (' Cost of goods and services sold', 42), (' Premises cost ', 42), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Cost of product sold', 36), ('purchase of stock-in-trade', 35), (' cost of goods sold ', 34), ('cost of sales', 33), ('Cost of sales', 33), (' change in inventory ', 33), ('expenditure', 27), ('total expenses', 26), ('expense', 24), ('total expenditure', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('total expenses', 44), (' Cost of inventory sold', 42), (' Personnel costs', 42), ('total expenditure', 40), (' cost of coal sold', 37), (' cost of goods sold ', 37), (' change in inventory ', 36), ('expenditure', 35), (' Cost of product sold', 34), (' Premises cost ', 34), ('purchase of stock-in-trade', 33), ('expense', 33), (' Cost of goods and services sold', 33), (' Cost of rendering services', 33), ('cost of sales', 30), ('Cost of sales', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Cost of inventory sold', 37), ('purchase of stock-in-trade', 34), (' Cost of goods and services sold', 34), (' Cost of rendering services', 34), (' change in inventory ', 33), (' Cost of product sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), (' cost of goods sold ', 30), (' Premises cost ', 29), ('total expenses', 28), ('total expenditure', 26), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('cost of sales', 35), ('Cost of sales', 35), ('expenditure', 33), (' Premises cost ', 32), (' Cost of rendering services', 31), ('expense', 30), (' Cost of inventory sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 27), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 24), ('total expenses', 23), (' change in inventory ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('total expenditure', 42), ('total expenses', 38), ('purchase of stock-in-trade', 37), (' Cost of inventory sold', 37), (' Cost of rendering services', 37), (' Cost of goods and services sold', 36), (' change in inventory ', 36), (' Cost of product sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), (' cost of goods sold ', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 24), (' Premises cost ', 23), ('expense', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory ', 40), (' Cost of product sold', 38), (' Cost of rendering services', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), (' Premises cost ', 26), ('expense', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -1280341.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-1280341.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['purchase of stock-in-trade', 'expense', 'expenditure', 'total expenses', 'total expenditure', 'cost of sales', 'Cost of sales', ' Cost of product sold', ' cost of coal sold', ' Cost of goods and services sold', ' Cost of inventory sold', ' Personnel costs', ' cost of goods sold ', ' change in inventory ', ' Premises cost ', ' Cost of rendering services'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Cost of rendering services', 40), (' cost of coal sold', 39), (' Cost of goods and services sold', 39), (' Cost of product sold', 37), (' Premises cost ', 37), (' Cost of inventory sold', 35), (' Personnel costs', 35), ('purchase of stock-in-trade', 31), (' cost of goods sold ', 30), (' change in inventory ', 30), ('total expenditure', 29), ('cost of sales', 29), ('Cost of sales', 29), ('expenditure', 24), ('total expenses', 23), ('expense', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' change in inventory ', 44), (' Cost of goods and services sold', 38), (' Cost of inventory sold', 32), (' cost of coal sold', 31), (' Cost of product sold', 28), (' Cost of rendering services', 27), ('purchase of stock-in-trade', 26), (' Premises cost ', 26), ('total expenses', 25), (' Personnel costs', 23), (' cost of goods sold ', 23), ('total expenditure', 21), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('expense', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('cost of sales', 40), ('Cost of sales', 40), (' cost of coal sold', 40), (' Personnel costs', 40), (' Cost of goods and services sold', 39), (' Cost of product sold', 36), (' Premises cost ', 36), ('total expenses', 35), (' Cost of rendering services', 34), ('purchase of stock-in-trade', 33), (' Cost of inventory sold', 33), (' cost of goods sold ', 32), (' change in inventory ', 31), ('total expenditure', 30), ('expenditure', 29), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('cost of sales', 100), ('Cost of sales', 100), (' cost of coal sold', 61), (' Personnel costs', 61), (' cost of goods sold ', 61), (' Premises cost ', 60), (' Cost of product sold', 54), (' Cost of rendering services', 52), (' Cost of inventory sold', 50), (' Cost of goods and services sold', 41), ('total expenses', 38), ('purchase of stock-in-trade', 36), ('total expenditure', 32), (' change in inventory ', 25), ('expense', 13), ('expenditure', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('expense', 43), ('total expenses', 35), ('total expenditure', 32), ('expenditure', 31), (' Cost of product sold', 31), (' Cost of goods and services sold', 30), (' Premises cost ', 30), (' Cost of rendering services', 30), (' Cost of inventory sold', 29), (' Personnel costs', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26), (' cost of coal sold', 22), (' change in inventory ', 22), ('purchase of stock-in-trade', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Cost of goods and services sold', 43), (' Premises cost ', 43), (' Cost of rendering services', 41), (' Cost of inventory sold', 40), ('expense', 38), (' Cost of product sold', 37), ('total expenses', 32), (' cost of coal sold', 30), (' Personnel costs', 30), (' cost of goods sold ', 30), ('cost of sales', 29), ('Cost of sales', 29), (' change in inventory ', 29), ('expenditure', 28), ('purchase of stock-in-trade', 27), ('total expenditure', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Cost of rendering services', 36), (' Cost of goods and services sold', 35), (' change in inventory ', 31), (' Cost of inventory sold', 30), (' Personnel costs', 29), ('purchase of stock-in-trade', 27), (' cost of coal sold', 26), ('total expenditure', 25), (' Cost of product sold', 25), (' Premises cost ', 24), (' cost of goods sold ', 20), ('cost of sales', 19), ('Cost of sales', 19), ('expenditure', 18), ('total expenses', 18), ('expense', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Cost of goods and services sold', 38), ('total expenditure', 37), (' Personnel costs', 33), (' change in inventory ', 32), (' Cost of product sold', 31), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' cost of coal sold', 28), (' cost of goods sold ', 28), ('cost of sales', 26), ('Cost of sales', 26), ('expenditure', 25), ('total expenses', 24), (' Premises cost ', 24), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('total expenses', 75), ('expense', 67), ('expenditure', 64), ('total expenditure', 57), ('purchase of stock-in-trade', 39), (' Personnel costs', 38), (' Cost of rendering services', 33), (' Cost of goods and services sold', 32), (' change in inventory ', 30), ('cost of sales', 29), ('Cost of sales', 29), (' Cost of product sold', 28), (' Cost of inventory sold', 26), (' Premises cost ', 26), (' cost of coal sold', 23), (' cost of goods sold ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('cost of sales', 60), ('Cost of sales', 60), (' Personnel costs', 56), (' Premises cost ', 55), (' Cost of inventory sold', 53), (' Cost of rendering services', 48), (' Cost of product sold', 43), ('purchase of stock-in-trade', 40), (' cost of coal sold', 40), (' cost of goods sold ', 40), (' Cost of goods and services sold', 39), (' change in inventory ', 38), ('total expenses', 26), ('total expenditure', 22), ('expense', 12), ('expenditure', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 30), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('total expenses', 71), ('total expenditure', 56), ('expense', 55), ('expenditure', 54), ('purchase of stock-in-trade', 40), (' Cost of inventory sold', 34), ('cost of sales', 32), ('Cost of sales', 32), (' change in inventory ', 32), (' Cost of goods and services sold', 29), (' Cost of rendering services', 29), (' cost of coal sold', 27), (' Personnel costs', 27), (' cost of goods sold ', 27), (' Cost of product sold', 24), (' Premises cost ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Cost of product sold', 41), (' Cost of inventory sold', 39), (' change in inventory ', 38), ('total expenditure', 37), (' Premises cost ', 36), ('total expenses', 35), ('purchase of stock-in-trade', 34), (' Cost of goods and services sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), ('cost of sales', 32), ('Cost of sales', 32), (' Cost of rendering services', 30), (' cost of goods sold ', 28), ('expenditure', 25), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('purchase of stock-in-trade', 44), (' Cost of inventory sold', 44), (' change in inventory ', 43), ('total expenses', 41), (' Cost of rendering services', 40), (' cost of coal sold', 39), (' Personnel costs', 39), (' cost of goods sold ', 39), ('expenditure', 38), ('total expenditure', 37), (' Cost of product sold', 36), (' Premises cost ', 36), (' Cost of goods and services sold', 34), ('cost of sales', 32), ('Cost of sales', 32), ('expense', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 31), (' Cost of rendering services', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' Personnel costs', 30), (' Premises cost ', 28), (' cost of coal sold', 27), (' cost of goods sold ', 27), (' change in inventory ', 27), ('total expenditure', 26), ('total expenses', 25), ('expenditure', 20), ('cost of sales', 20), ('Cost of sales', 20), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 35), (' Cost of product sold', 31), (' Cost of rendering services', 31), ('purchase of stock-in-trade', 30), (' Cost of inventory sold', 30), (' Personnel costs', 30), (' Premises cost ', 28), (' cost of coal sold', 27), (' cost of goods sold ', 27), (' change in inventory ', 27), ('total expenditure', 26), ('total expenses', 25), ('expenditure', 20), ('cost of sales', 20), ('Cost of sales', 20), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' change in inventory ', 35), ('purchase of stock-in-trade', 33), (' Cost of goods and services sold', 33), (' Cost of inventory sold', 33), ('total expenditure', 31), ('total expenses', 30), (' Cost of rendering services', 30), (' Personnel costs', 29), (' cost of coal sold', 26), (' cost of goods sold ', 26), (' Cost of product sold', 25), ('expenditure', 24), ('expense', 22), (' Premises cost ', 20), ('cost of sales', 18), ('Cost of sales', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('cost of sales', 33), ('Cost of sales', 33), ('total expenses', 27), ('expense', 22), ('total expenditure', 21), ('purchase of stock-in-trade', 18), ('expenditure', 15), (' Premises cost ', 14), (' cost of coal sold', 12), (' Personnel costs', 12), (' cost of goods sold ', 12), (' change in inventory ', 11), (' Cost of product sold', 10), (' Cost of rendering services', 10), (' Cost of inventory sold', 9), (' Cost of goods and services sold', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Cost of inventory sold', 39), ('total expenditure', 37), (' Cost of rendering services', 36), (' cost of coal sold', 35), (' Cost of goods and services sold', 35), (' cost of goods sold ', 35), (' Cost of product sold', 33), ('total expenses', 32), (' Personnel costs', 31), (' change in inventory ', 30), (' Premises cost ', 29), ('purchase of stock-in-trade', 28), ('cost of sales', 26), ('Cost of sales', 26), ('expenditure', 25), ('expense', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Cost of rendering services', 36), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' cost of coal sold', 32), (' change in inventory ', 31), (' Cost of inventory sold', 29), ('total expenditure', 28), (' Cost of product sold', 27), (' Premises cost ', 27), ('total expenses', 26), (' Personnel costs', 25), ('cost of sales', 24), ('Cost of sales', 24), (' cost of goods sold ', 22), ('expenditure', 20), ('expense', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('purchase of stock-in-trade', 40), (' Cost of goods and services sold', 39), (' Cost of rendering services', 37), (' cost of coal sold', 36), (' cost of goods sold ', 36), (' Cost of product sold', 33), (' Cost of inventory sold', 32), ('total expenditure', 30), ('cost of sales', 30), ('Cost of sales', 30), (' change in inventory ', 30), (' Premises cost ', 29), ('total expenses', 28), (' Personnel costs', 27), ('expenditure', 24), ('expense', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Cost of inventory sold', 38), ('purchase of stock-in-trade', 35), (' Cost of goods and services sold', 35), (' change in inventory ', 34), (' Cost of product sold', 33), (' Cost of rendering services', 33), (' cost of coal sold', 32), (' Personnel costs', 32), ('total expenditure', 31), ('total expenses', 30), (' Premises cost ', 30), (' cost of goods sold ', 29), ('cost of sales', 21), ('Cost of sales', 21), ('expenditure', 20), ('expense', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('cost of sales', 35), ('Cost of sales', 35), ('expenditure', 33), (' Premises cost ', 32), (' Cost of rendering services', 31), ('expense', 30), (' Cost of inventory sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 27), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 24), ('total expenses', 23), (' change in inventory ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' Personnel costs', 29), (' cost of goods sold ', 29), (' Premises cost ', 27), (' cost of coal sold', 26), ('total expenses', 24), ('total expenditure', 23), (' change in inventory ', 23), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Cost of goods and services sold', 34), (' Cost of product sold', 30), (' Cost of rendering services', 30), ('purchase of stock-in-trade', 29), (' Cost of inventory sold', 29), (' Personnel costs', 29), (' cost of goods sold ', 29), (' Premises cost ', 27), (' cost of coal sold', 26), ('total expenses', 24), ('total expenditure', 23), (' change in inventory ', 23), ('expenditure', 19), ('cost of sales', 19), ('Cost of sales', 19), ('expense', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Personnel costs', 49), (' Cost of rendering services', 49), (' Cost of goods and services sold', 42), (' Premises cost ', 42), (' cost of coal sold', 39), (' Cost of inventory sold', 39), (' Cost of product sold', 36), ('purchase of stock-in-trade', 35), (' cost of goods sold ', 34), ('cost of sales', 33), ('Cost of sales', 33), (' change in inventory ', 33), ('expenditure', 27), ('total expenses', 26), ('expense', 24), ('total expenditure', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('total expenses', 44), (' Cost of inventory sold', 42), (' Personnel costs', 42), ('total expenditure', 40), (' cost of coal sold', 37), (' cost of goods sold ', 37), (' change in inventory ', 36), ('expenditure', 35), (' Cost of product sold', 34), (' Premises cost ', 34), ('purchase of stock-in-trade', 33), ('expense', 33), (' Cost of goods and services sold', 33), (' Cost of rendering services', 33), ('cost of sales', 30), ('Cost of sales', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Cost of inventory sold', 37), ('purchase of stock-in-trade', 34), (' Cost of goods and services sold', 34), (' Cost of rendering services', 34), (' change in inventory ', 33), (' Cost of product sold', 32), (' cost of coal sold', 30), (' Personnel costs', 30), (' cost of goods sold ', 30), (' Premises cost ', 29), ('total expenses', 28), ('total expenditure', 26), ('cost of sales', 23), ('Cost of sales', 23), ('expenditure', 19), ('expense', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Cost of product sold', 39), (' Personnel costs', 36), ('cost of sales', 35), ('Cost of sales', 35), ('expenditure', 33), (' Premises cost ', 32), (' Cost of rendering services', 31), ('expense', 30), (' Cost of inventory sold', 30), (' cost of coal sold', 29), (' cost of goods sold ', 29), ('total expenditure', 27), (' Cost of goods and services sold', 26), ('purchase of stock-in-trade', 24), ('total expenses', 23), (' change in inventory ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('total expenditure', 42), ('total expenses', 38), ('purchase of stock-in-trade', 37), (' Cost of inventory sold', 37), (' Cost of rendering services', 37), (' Cost of goods and services sold', 36), (' change in inventory ', 36), (' Cost of product sold', 34), (' cost of coal sold', 33), (' Personnel costs', 33), (' cost of goods sold ', 33), ('cost of sales', 32), ('Cost of sales', 32), ('expenditure', 24), (' Premises cost ', 23), ('expense', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('total expenses', 43), ('total expenditure', 43), (' change in inventory ', 40), (' Cost of product sold', 38), (' Cost of rendering services', 38), ('purchase of stock-in-trade', 37), (' cost of coal sold', 37), (' Cost of goods and services sold', 37), (' Cost of inventory sold', 37), (' Personnel costs', 37), (' cost of goods sold ', 37), ('cost of sales', 36), ('Cost of sales', 36), ('expenditure', 27), (' Premises cost ', 26), ('expense', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [3], 'score': 100, 'value': -1146515.0, 'line_item_label': ['Cost of sales'], 'note_numbers': [nan], 'line_item_value': [-1146515.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['consum ', ' power ', ' machinery ', ' charges ', ' research ', ' analytical ', ' equipment ', ' exchange ', ' loss on ', ' donation ', ' csr ', ' social ', ' miscellaneous ', ' loss allowance ', ' Included in administrative expenses ', ' Depreciation property ', ' plant and equipment ', ' Depreciation right-of-use assets ', ' Administrative expenses ', ' Wages and salaries ', ' Compulsory superannuation contributions ', ' Payroll on-costs (excluding employee benefit provision) ', ' Staff welfare ', ' Contractors, subcontractors and employee related expenses ', ' Facilities Expense ', ' Rental equipment expenses ', ' Depreciation expense right-of-use asset ', ' Depreciation expense ', ' Amortisation expense ', ' Other expenses ', ' Research and development expenses ', ' employee benefits expenses ', ' depreciation and amortisation expenses ', ' Employee expenses ', ' Distribution Expenses ', ' Depreciation and Amortisation Expenses ', ' Other Expenses from Ordinary Activities ', '  ', ' Defined contribution plans ', ' Other employement costs ', ' Salary & wages expense ', ' Superannuation expense ', ' other administration']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = sga_total_sga_expenses
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' marketing and advertising expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' Selling and marketting expenses ', 30), (' Salaries and employee benefits ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Servicing expenses', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies ', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' marketing and advertising expenses ', 32), (' Servicing expenses', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' Selling and marketting expenses ', 29), (' Salaries and employee benefits ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Servicing expenses', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Selling and marketting expenses ', 32), (' levies ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Salaries and employee benefits ', 29), (' marketing and advertising expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' employee benefits expense ', 100), (' employee benefit espense ', 95), (' Salaries and employee benefits ', 71), (' Depreciation expenses ', 56), (' Administrative expenses ', 53), (' Administration expenses ', 53), (' Depreciation and amortisation expenses ', 50), (' Amortisation expenses ', 50), (' Advertising expenses ', 49), (' Distribution expenses ', 47), (' Administrative and other expenses ', 46), ('expenses ', 43), (' Selling & distribution expenses ', 42), (' marketing and advertising expenses ', 42), (' property espense ', 38), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' other expenses ', 35), (' Occupancy expenses ', 35), (' Other expenses ', 35), (' Management expenses ', 35), (' Other expenses ', 35), (' Marketing expenses ', 34), (' Servicing expenses', 34), (' Logistics and distribution ', 33), (' Sales and marketing ', 32), (' depreciation ', 21), (' Administration ', 19), (' Occupancy ', 15), (' levies ', 15), (' Royalties ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Depreciation and amortisation expenses ', 100), (' Depreciation expenses ', 70), (' Amortisation expenses ', 70), (' marketing and advertising expenses ', 62), (' Advertising expenses ', 59), (' Administrative and other expenses ', 58), (' Administrative expenses ', 57), (' Administration expenses ', 57), (' Distribution expenses ', 52), (' employee benefits expense ', 50), (' Selling & distribution expenses ', 47), (' employee benefit espense ', 46), (' Salaries and employee benefits ', 46), (' depreciation ', 42), (' Selling and marketting expenses ', 42), (' Logistics and distribution ', 39), (' Sales and marketing ', 39), ('expenses ', 38), (' property espense ', 34), (' Administration ', 34), (' other expenses ', 32), (' Occupancy expenses ', 32), (' Other expenses ', 32), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' Management expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Servicing expenses', 31), (' Occupancy ', 19), (' Royalties ', 18), (' levies ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Salaries and employee benefits ', 44), (' Logistics and distribution ', 40), (' Administrative and other expenses ', 37), (' marketing and advertising expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Selling and marketting expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' Selling & distribution expenses ', 32), (' Advertising expenses ', 29), (' property espense ', 29), (' Distribution expenses ', 28), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Depreciation expenses ', 26), (' Servicing expenses', 26), (' other expenses ', 24), (' Marketing expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), (' depreciation ', 23), (' Amortisation expenses ', 23), (' Administration ', 22), (' Occupancy expenses ', 18), (' Lease expenses ', 18), (' Selling Expenses ', 18), (' Management expenses ', 18), (' Royalties ', 16), (' levies ', 14), ('expenses ', 13), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Sales and marketing ', 49), (' Administrative and other expenses ', 46), (' marketing and advertising expenses ', 46), (' Selling and marketting expenses ', 45), (' Logistics and distribution ', 43), (' Depreciation and amortisation expenses ', 42), (' Salaries and employee benefits ', 42), (' Administrative expenses ', 37), (' Administration expenses ', 37), (' Advertising expenses ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Marketing expenses ', 29), (' Management expenses ', 29), (' Depreciation expenses ', 28), (' Amortisation expenses ', 28), (' property espense ', 27), (' Distribution expenses ', 26), (' Lease expenses ', 24), (' Selling & distribution expenses ', 23), (' depreciation ', 21), (' Royalties ', 21), (' other expenses ', 18), (' Occupancy expenses ', 18), (' Other expenses ', 18), (' Selling Expenses ', 18), (' Other expenses ', 18), (' Servicing expenses', 17), (' Occupancy ', 15), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Servicing expenses', 72), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling and marketting expenses ', 53), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' marketing and advertising expenses ', 42), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Salaries and employee benefits ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Servicing expenses', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Salaries and employee benefits ', 22), (' marketing and advertising expenses ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Selling and marketting expenses ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies ', 13), ('expenses ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' marketing and advertising expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Selling and marketting expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Servicing expenses', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Selling and marketting expenses ', 47), (' Administrative and other expenses ', 43), (' marketing and advertising expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Salaries and employee benefits ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies ', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Administrative and other expenses ', 38), (' Logistics and distribution ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' Administrative expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' Depreciation expenses ', 33), (' Amortisation expenses ', 33), (' Distribution expenses ', 32), (' Advertising expenses ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Selling and marketting expenses ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Royalties ', 21), (' Selling Expenses ', 18), (' Occupancy ', 15), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' property espense ', 32), (' Selling & distribution expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling and marketting expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Salaries and employee benefits ', 28), (' Servicing expenses', 27), (' marketing and advertising expenses ', 26), (' Marketing expenses ', 25), (' Lease expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Sales and marketing ', 24), (' Selling Expenses ', 23), (' Occupancy expenses ', 22), (' Advertising expenses ', 21), (' Management expenses ', 19), (' depreciation ', 18), (' Administration ', 17), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' property espense ', 32), (' Selling & distribution expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling and marketting expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Salaries and employee benefits ', 28), (' Servicing expenses', 27), (' marketing and advertising expenses ', 26), (' Marketing expenses ', 25), (' Lease expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Sales and marketing ', 24), (' Selling Expenses ', 23), (' Occupancy expenses ', 22), (' Advertising expenses ', 21), (' Management expenses ', 19), (' depreciation ', 18), (' Administration ', 17), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Depreciation and amortisation expenses ', 41), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Depreciation expenses ', 35), (' Administrative and other expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' property espense ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' other expenses ', 27), (' Other expenses ', 27), (' Lease expenses ', 27), (' Other expenses ', 27), (' Marketing expenses ', 26), (' Sales and marketing ', 25), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Servicing expenses', 23), ('expenses ', 22), (' depreciation ', 22), (' Administration ', 21), (' Royalties ', 18), (' Occupancy ', 15), (' levies ', 8)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' Amortisation expenses ', 24), ('expenses ', 22), (' Advertising expenses ', 22), (' Sales and marketing ', 22), (' Distribution expenses ', 21), (' Administrative expenses ', 21), (' Administrative and other expenses ', 21), (' Administration expenses ', 21), (' Depreciation and amortisation expenses ', 21), (' marketing and advertising expenses ', 21), (' Royalties ', 20), (' Selling & distribution expenses ', 17), (' Administration ', 17), (' employee benefits expense ', 16), (' Selling and marketting expenses ', 16), (' Lease expenses ', 14), (' Selling Expenses ', 14), (' Salaries and employee benefits ', 14), (' other expenses ', 13), (' Occupancy expenses ', 13), (' Other expenses ', 13), (' Management expenses ', 13), (' Other expenses ', 13), (' Marketing expenses ', 12), (' Depreciation expenses ', 12), (' Servicing expenses', 12), (' property espense ', 11), (' Logistics and distribution ', 9), (' employee benefit espense ', 8), (' depreciation ', 0), (' Occupancy ', 0), (' levies ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' employee benefits expense ', 40), (' Depreciation and amortisation expenses ', 38), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' employee benefit espense ', 37), (' Depreciation expenses ', 35), (' property espense ', 34), (' Selling and marketting expenses ', 33), (' Management expenses ', 32), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 31), (' Administrative and other expenses ', 31), (' Amortisation expenses ', 31), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' Lease expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Logistics and distribution ', 28), (' Other expenses ', 28), (' Occupancy expenses ', 24), (' Selling Expenses ', 24), (' Servicing expenses', 24), ('expenses ', 23), (' Royalties ', 22), (' Administration ', 21), (' depreciation ', 18), (' Occupancy ', 14), (' levies ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Administrative and other expenses ', 35), (' employee benefit espense ', 34), (' Depreciation and amortisation expenses ', 32), (' Salaries and employee benefits ', 32), (' marketing and advertising expenses ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Sales and marketing ', 31), (' employee benefits expense ', 31), (' property espense ', 31), (' Selling and marketting expenses ', 31), (' Depreciation expenses ', 29), (' Servicing expenses', 29), (' Administration ', 28), (' other expenses ', 26), (' Marketing expenses ', 26), (' Other expenses ', 26), (' Logistics and distribution ', 26), (' Other expenses ', 26), (' Advertising expenses ', 25), (' Amortisation expenses ', 25), (' Selling & distribution expenses ', 23), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' Management expenses ', 23), (' Distribution expenses ', 22), (' Occupancy expenses ', 20), (' depreciation ', 18), ('expenses ', 15), (' Royalties ', 14), (' Occupancy ', 11), (' levies ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Salaries and employee benefits ', 39), (' Logistics and distribution ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Administrative and other expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' marketing and advertising expenses ', 32), (' Sales and marketing ', 30), (' Lease expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Depreciation expenses ', 27), (' Amortisation expenses ', 27), (' Servicing expenses', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Advertising expenses ', 26), (' property espense ', 26), (' Selling and marketting expenses ', 26), (' Administration ', 25), (' Marketing expenses ', 23), (' Occupancy expenses ', 23), (' Selling & distribution expenses ', 23), (' Management expenses ', 23), (' depreciation ', 21), (' Distribution expenses ', 21), (' Selling Expenses ', 19), (' levies ', 17), ('expenses ', 16), (' Royalties ', 16), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Depreciation and amortisation expenses ', 37), (' Administrative and other expenses ', 35), (' Salaries and employee benefits ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Servicing expenses', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' property espense ', 31), (' Selling and marketting expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' marketing and advertising expenses ', 29), (' Distribution expenses ', 28), (' Selling Expenses ', 27), (' Marketing expenses ', 26), (' Management expenses ', 26), (' Advertising expenses ', 25), (' Occupancy expenses ', 23), (' Sales and marketing ', 22), (' depreciation ', 21), (' Administration ', 21), (' Royalties ', 18), ('expenses ', 15), (' Occupancy ', 11), (' levies ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Selling Expenses ', 40), (' Servicing expenses', 37), (' Depreciation expenses ', 36), (' marketing and advertising expenses ', 35), (' Selling & distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 33), (' Selling and marketting expenses ', 33), (' Lease expenses ', 32), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), ('expenses ', 30), (' Marketing expenses ', 30), (' depreciation ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' Distribution expenses ', 27), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' Salaries and employee benefits ', 25), (' Management expenses ', 23), (' levies ', 22), (' Occupancy ', 21), (' Administrative expenses ', 20), (' Administration expenses ', 20), (' Royalties ', 19), (' Administration ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Depreciation and amortisation expenses ', 31), (' property espense ', 31), (' Administrative and other expenses ', 29), (' employee benefit espense ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Logistics and distribution ', 27), (' Other expenses ', 27), (' Salaries and employee benefits ', 27), (' Selling & distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 22), (' Marketing expenses ', 21), (' Occupancy expenses ', 21), (' Depreciation expenses ', 21), (' Amortisation expenses ', 21), (' Sales and marketing ', 21), (' Distribution expenses ', 20), (' Management expenses ', 19), (' Advertising expenses ', 18), (' depreciation ', 17), (' Administration ', 14), (' Royalties ', 14), ('expenses ', 12), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Depreciation and amortisation expenses ', 31), (' property espense ', 31), (' Administrative and other expenses ', 29), (' employee benefit espense ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Logistics and distribution ', 27), (' Other expenses ', 27), (' Salaries and employee benefits ', 27), (' Selling & distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 22), (' Marketing expenses ', 21), (' Occupancy expenses ', 21), (' Depreciation expenses ', 21), (' Amortisation expenses ', 21), (' Sales and marketing ', 21), (' Distribution expenses ', 20), (' Management expenses ', 19), (' Advertising expenses ', 18), (' depreciation ', 17), (' Administration ', 14), (' Royalties ', 14), ('expenses ', 12), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Selling & distribution expenses ', 46), (' Administrative and other expenses ', 45), (' marketing and advertising expenses ', 45), (' Selling and marketting expenses ', 45), (' Servicing expenses', 45), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' property espense ', 43), (' Depreciation and amortisation expenses ', 42), (' Logistics and distribution ', 38), (' Distribution expenses ', 37), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' Selling Expenses ', 37), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' Marketing expenses ', 35), (' Depreciation expenses ', 34), (' Salaries and employee benefits ', 34), (' Sales and marketing ', 33), (' Administration ', 33), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 24), (' Occupancy ', 19), (' levies ', 19), (' depreciation ', 18), (' Royalties ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Depreciation expenses ', 47), (' marketing and advertising expenses ', 44), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Advertising expenses ', 41), (' Administrative and other expenses ', 40), (' Lease expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Management expenses ', 39), (' Other expenses ', 39), (' Marketing expenses ', 38), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Distribution expenses ', 35), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' Selling and marketting expenses ', 35), (' Selling Expenses ', 34), ('expenses ', 33), (' Occupancy expenses ', 33), (' Servicing expenses', 32), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy ', 21), (' levies ', 14), (' Royalties ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Salaries and employee benefits ', 33), (' employee benefit espense ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Servicing expenses', 31), (' employee benefits expense ', 30), (' property espense ', 30), (' Lease expenses ', 29), (' Logistics and distribution ', 28), (' Selling and marketting expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' marketing and advertising expenses ', 26), (' Selling & distribution expenses ', 25), (' Selling Expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Marketing expenses ', 22), (' Occupancy expenses ', 22), (' Management expenses ', 22), (' Advertising expenses ', 21), (' Sales and marketing ', 21), (' depreciation ', 20), (' Royalties ', 17), (' Administration ', 16), ('expenses ', 14), (' levies ', 11), (' Occupancy ', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Selling Expenses ', 40), (' Servicing expenses', 37), (' Depreciation expenses ', 36), (' marketing and advertising expenses ', 35), (' Selling & distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 33), (' Selling and marketting expenses ', 33), (' Lease expenses ', 32), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), ('expenses ', 30), (' Marketing expenses ', 30), (' depreciation ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' Distribution expenses ', 27), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' Salaries and employee benefits ', 25), (' Management expenses ', 23), (' levies ', 22), (' Occupancy ', 21), (' Administrative expenses ', 20), (' Administration expenses ', 20), (' Royalties ', 19), (' Administration ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Administrative and other expenses ', 42), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Selling and marketting expenses ', 35), (' Marketing expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Management expenses ', 30), (' Logistics and distribution ', 30), (' marketing and advertising expenses ', 30), (' Servicing expenses', 30), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Selling Expenses ', 27), (' Occupancy expenses ', 26), (' Selling & distribution expenses ', 26), (' Distribution expenses ', 25), (' Depreciation expenses ', 25), (' Amortisation expenses ', 25), (' Advertising expenses ', 21), (' Administration ', 20), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Lease expenses ', 35), (' Selling and marketting expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Servicing expenses', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' marketing and advertising expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -180377.0, 'line_item_label': ['Employee benefits expense', 'Depreciation and amortisation expense', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-62231.0, -9975.0, -108171.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['expenses ', ' other expenses ', ' depreciation ', ' Distribution expenses ', ' Marketing expenses ', ' Occupancy expenses ', ' Administrative expenses ', ' Other expenses ', ' Depreciation expenses ', ' Selling & distribution expenses ', ' Administrative and other expenses ', ' Lease expenses ', ' Occupancy ', ' Administration expenses ', ' Advertising expenses ', ' Selling Expenses ', ' Depreciation and amortisation expenses ', ' Amortisation expenses ', ' Management expenses ', ' Logistics and distribution ', ' Sales and marketing ', ' Other expenses ', ' employee benefits expense ', ' property espense ', ' employee benefit espense ', ' Administration ', ' Royalties ', ' levies ', ' Salaries and employee benefits ', ' marketing and advertising expenses ', ' Selling and marketting expenses ', ' Servicing expenses'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Administrative and other expenses ', 38), (' Amortisation expenses ', 35), (' Logistics and distribution ', 35), (' Selling & distribution expenses ', 34), (' Depreciation and amortisation expenses ', 34), (' marketing and advertising expenses ', 34), (' Distribution expenses ', 33), (' Administrative expenses ', 33), (' Administration expenses ', 33), (' employee benefits expense ', 33), (' employee benefit espense ', 33), (' Marketing expenses ', 31), (' Advertising expenses ', 30), (' property espense ', 30), (' Selling and marketting expenses ', 30), (' Salaries and employee benefits ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Other expenses ', 27), (' Servicing expenses', 27), (' Depreciation expenses ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy expenses ', 23), (' Management expenses ', 23), (' Occupancy ', 22), (' Royalties ', 21), (' Lease expenses ', 19), (' Selling Expenses ', 19), (' levies ', 17), ('expenses ', 16), (' depreciation ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administrative and other expenses ', 37), (' Depreciation and amortisation expenses ', 32), (' marketing and advertising expenses ', 32), (' Servicing expenses', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' Administration ', 29), (' Selling and marketting expenses ', 29), (' Salaries and employee benefits ', 26), (' other expenses ', 25), (' Occupancy expenses ', 25), (' Other expenses ', 25), (' Management expenses ', 25), (' Other expenses ', 25), (' Marketing expenses ', 24), (' Occupancy ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Depreciation expenses ', 23), (' Amortisation expenses ', 23), (' Advertising expenses ', 22), (' property espense ', 22), (' depreciation ', 21), (' Distribution expenses ', 21), (' Royalties ', 21), (' Selling & distribution expenses ', 18), (' Lease expenses ', 17), (' Selling Expenses ', 17), (' levies ', 12), ('expenses ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other expenses ', 61), (' Other expenses ', 61), (' Other expenses ', 61), (' Administrative and other expenses ', 43), (' Administration ', 40), (' property espense ', 38), (' Servicing expenses', 33), (' Amortisation expenses ', 32), (' Sales and marketing ', 31), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Lease expenses ', 27), (' Selling Expenses ', 27), (' Depreciation and amortisation expenses ', 27), (' Salaries and employee benefits ', 27), (' marketing and advertising expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Depreciation expenses ', 24), (' employee benefits expense ', 24), (' employee benefit espense ', 24), (' Selling and marketting expenses ', 24), (' Advertising expenses ', 23), (' depreciation ', 22), (' Distribution expenses ', 22), (' Royalties ', 22), (' Management expenses ', 17), (' levies ', 13), ('expenses ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Sales and marketing ', 50), (' Lease expenses ', 40), (' Selling Expenses ', 40), (' Royalties ', 38), (' Marketing expenses ', 36), (' Servicing expenses', 36), (' Amortisation expenses ', 35), (' Selling & distribution expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Selling and marketting expenses ', 32), (' levies ', 31), (' other expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Depreciation and amortisation expenses ', 29), (' Management expenses ', 29), (' Other expenses ', 29), (' Salaries and employee benefits ', 29), (' marketing and advertising expenses ', 29), (' Logistics and distribution ', 28), (' Depreciation expenses ', 26), (' employee benefits expense ', 26), (' employee benefit espense ', 26), (' Advertising expenses ', 25), (' property espense ', 25), (' Administration ', 22), (' Occupancy expenses ', 19), (' Occupancy ', 14), ('expenses ', 13), (' depreciation ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' employee benefits expense ', 100), (' employee benefit espense ', 95), (' Salaries and employee benefits ', 71), (' Depreciation expenses ', 56), (' Administrative expenses ', 53), (' Administration expenses ', 53), (' Depreciation and amortisation expenses ', 50), (' Amortisation expenses ', 50), (' Advertising expenses ', 49), (' Distribution expenses ', 47), (' Administrative and other expenses ', 46), ('expenses ', 43), (' Selling & distribution expenses ', 42), (' marketing and advertising expenses ', 42), (' property espense ', 38), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' other expenses ', 35), (' Occupancy expenses ', 35), (' Other expenses ', 35), (' Management expenses ', 35), (' Other expenses ', 35), (' Marketing expenses ', 34), (' Servicing expenses', 34), (' Logistics and distribution ', 33), (' Sales and marketing ', 32), (' depreciation ', 21), (' Administration ', 19), (' Occupancy ', 15), (' levies ', 15), (' Royalties ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Depreciation and amortisation expenses ', 100), (' Depreciation expenses ', 70), (' Amortisation expenses ', 70), (' marketing and advertising expenses ', 62), (' Advertising expenses ', 59), (' Administrative and other expenses ', 58), (' Administrative expenses ', 57), (' Administration expenses ', 57), (' Distribution expenses ', 52), (' employee benefits expense ', 50), (' Selling & distribution expenses ', 47), (' employee benefit espense ', 46), (' Salaries and employee benefits ', 46), (' depreciation ', 42), (' Selling and marketting expenses ', 42), (' Logistics and distribution ', 39), (' Sales and marketing ', 39), ('expenses ', 38), (' property espense ', 34), (' Administration ', 34), (' other expenses ', 32), (' Occupancy expenses ', 32), (' Other expenses ', 32), (' Lease expenses ', 32), (' Selling Expenses ', 32), (' Management expenses ', 32), (' Other expenses ', 32), (' Marketing expenses ', 31), (' Servicing expenses', 31), (' Occupancy ', 19), (' Royalties ', 18), (' levies ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Salaries and employee benefits ', 44), (' Logistics and distribution ', 40), (' Administrative and other expenses ', 37), (' marketing and advertising expenses ', 37), (' employee benefits expense ', 36), (' employee benefit espense ', 36), (' Selling and marketting expenses ', 36), (' Depreciation and amortisation expenses ', 35), (' Sales and marketing ', 34), (' Selling & distribution expenses ', 32), (' Advertising expenses ', 29), (' property espense ', 29), (' Distribution expenses ', 28), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Depreciation expenses ', 26), (' Servicing expenses', 26), (' other expenses ', 24), (' Marketing expenses ', 24), (' Other expenses ', 24), (' Other expenses ', 24), (' depreciation ', 23), (' Amortisation expenses ', 23), (' Administration ', 22), (' Occupancy expenses ', 18), (' Lease expenses ', 18), (' Selling Expenses ', 18), (' Management expenses ', 18), (' Royalties ', 16), (' levies ', 14), ('expenses ', 13), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Sales and marketing ', 49), (' Administrative and other expenses ', 46), (' marketing and advertising expenses ', 46), (' Selling and marketting expenses ', 45), (' Logistics and distribution ', 43), (' Depreciation and amortisation expenses ', 42), (' Salaries and employee benefits ', 42), (' Administrative expenses ', 37), (' Administration expenses ', 37), (' Advertising expenses ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Marketing expenses ', 29), (' Management expenses ', 29), (' Depreciation expenses ', 28), (' Amortisation expenses ', 28), (' property espense ', 27), (' Distribution expenses ', 26), (' Lease expenses ', 24), (' Selling & distribution expenses ', 23), (' depreciation ', 21), (' Royalties ', 21), (' other expenses ', 18), (' Occupancy expenses ', 18), (' Other expenses ', 18), (' Selling Expenses ', 18), (' Other expenses ', 18), (' Servicing expenses', 17), (' Occupancy ', 15), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' other expenses ', 100), (' Other expenses ', 100), (' Other expenses ', 100), (' Servicing expenses', 72), (' Lease expenses ', 70), (' Selling Expenses ', 70), ('expenses ', 67), (' Occupancy expenses ', 67), (' property espense ', 67), (' Marketing expenses ', 64), (' Administrative and other expenses ', 63), (' Management expenses ', 58), (' Selling and marketting expenses ', 53), (' Selling & distribution expenses ', 48), (' Depreciation expenses ', 46), (' Amortisation expenses ', 46), (' Advertising expenses ', 44), (' Distribution expenses ', 43), (' Administrative expenses ', 43), (' Administration expenses ', 43), (' marketing and advertising expenses ', 42), (' Administration ', 38), (' employee benefits expense ', 35), (' depreciation ', 32), (' Depreciation and amortisation expenses ', 32), (' Salaries and employee benefits ', 32), (' Logistics and distribution ', 31), (' Sales and marketing ', 30), (' employee benefit espense ', 29), (' Royalties ', 21), (' Occupancy ', 12), (' levies ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Management expenses ', 35), (' Royalties ', 33), (' Servicing expenses', 33), (' Depreciation and amortisation expenses ', 32), (' Amortisation expenses ', 32), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Administrative and other expenses ', 27), (' Lease expenses ', 27), (' Occupancy expenses ', 26), (' Logistics and distribution ', 26), (' Marketing expenses ', 25), (' Selling & distribution expenses ', 25), (' Occupancy ', 25), (' Depreciation expenses ', 24), (' Advertising expenses ', 23), (' Sales and marketing ', 23), (' property espense ', 23), (' depreciation ', 22), (' Salaries and employee benefits ', 22), (' marketing and advertising expenses ', 22), (' Administration ', 20), (' Selling Expenses ', 18), (' employee benefits expense ', 18), (' employee benefit espense ', 18), (' Selling and marketting expenses ', 18), (' other expenses ', 17), (' Other expenses ', 17), (' Other expenses ', 17), (' levies ', 13), ('expenses ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' employee benefits expense ', 41), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' employee benefit espense ', 36), (' Depreciation expenses ', 33), (' Logistics and distribution ', 33), (' marketing and advertising expenses ', 33), (' Distribution expenses ', 32), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Sales and marketing ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Administrative and other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Amortisation expenses ', 28), (' Advertising expenses ', 27), (' Selling and marketting expenses ', 27), (' Administration ', 26), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Occupancy ', 22), (' Royalties ', 21), (' Selling Expenses ', 18), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' other expenses ', 64), (' Other expenses ', 64), (' Management expenses ', 64), (' Other expenses ', 64), (' Marketing expenses ', 62), (' Servicing expenses', 62), (' Lease expenses ', 59), (' Occupancy expenses ', 57), ('expenses ', 55), (' Selling Expenses ', 52), (' property espense ', 52), (' Selling and marketting expenses ', 47), (' Administrative and other expenses ', 43), (' marketing and advertising expenses ', 43), (' Depreciation expenses ', 40), (' Amortisation expenses ', 40), (' Advertising expenses ', 39), (' Distribution expenses ', 38), (' Administrative expenses ', 38), (' Selling & distribution expenses ', 38), (' Administration expenses ', 38), (' depreciation ', 35), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' Depreciation and amortisation expenses ', 29), (' Salaries and employee benefits ', 29), (' Logistics and distribution ', 28), (' employee benefit espense ', 26), (' Administration ', 24), (' levies ', 20), (' Royalties ', 17), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Depreciation and amortisation expenses ', 42), (' Administrative and other expenses ', 38), (' Logistics and distribution ', 38), (' Sales and marketing ', 38), (' property espense ', 38), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' Administrative expenses ', 37), (' Administration expenses ', 37), (' employee benefits expense ', 36), (' Depreciation expenses ', 33), (' Amortisation expenses ', 33), (' Distribution expenses ', 32), (' Advertising expenses ', 32), (' employee benefit espense ', 32), (' Administration ', 32), (' Selling and marketting expenses ', 32), (' other expenses ', 29), (' Marketing expenses ', 29), (' Other expenses ', 29), (' Other expenses ', 29), (' Servicing expenses', 29), (' depreciation ', 28), (' Selling & distribution expenses ', 28), (' Occupancy expenses ', 24), (' Lease expenses ', 24), (' Management expenses ', 24), (' Royalties ', 21), (' Selling Expenses ', 18), (' Occupancy ', 15), (' levies ', 15), ('expenses ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other expenses ', 59), (' Other expenses ', 59), (' Other expenses ', 59), (' Administrative and other expenses ', 50), (' property espense ', 43), (' Marketing expenses ', 40), (' Servicing expenses', 40), (' Lease expenses ', 36), (' Selling Expenses ', 36), (' Selling and marketting expenses ', 36), (' Occupancy expenses ', 35), (' Management expenses ', 35), (' Depreciation expenses ', 33), (' Selling & distribution expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Amortisation expenses ', 33), (' marketing and advertising expenses ', 33), (' Administrative expenses ', 32), (' Administration expenses ', 32), (' Administration ', 32), ('expenses ', 29), (' Logistics and distribution ', 29), (' Salaries and employee benefits ', 29), (' depreciation ', 28), (' Advertising expenses ', 27), (' Sales and marketing ', 27), (' employee benefits expense ', 27), (' employee benefit espense ', 27), (' Distribution expenses ', 26), (' Royalties ', 21), (' Occupancy ', 15), (' levies ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' property espense ', 32), (' Selling & distribution expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling and marketting expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Salaries and employee benefits ', 28), (' Servicing expenses', 27), (' marketing and advertising expenses ', 26), (' Marketing expenses ', 25), (' Lease expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Sales and marketing ', 24), (' Selling Expenses ', 23), (' Occupancy expenses ', 22), (' Advertising expenses ', 21), (' Management expenses ', 19), (' depreciation ', 18), (' Administration ', 17), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' property espense ', 32), (' Selling & distribution expenses ', 30), (' Logistics and distribution ', 30), (' Administrative expenses ', 29), (' Administration expenses ', 29), (' employee benefits expense ', 29), (' employee benefit espense ', 29), (' Selling and marketting expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Salaries and employee benefits ', 28), (' Servicing expenses', 27), (' marketing and advertising expenses ', 26), (' Marketing expenses ', 25), (' Lease expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Sales and marketing ', 24), (' Selling Expenses ', 23), (' Occupancy expenses ', 22), (' Advertising expenses ', 21), (' Management expenses ', 19), (' depreciation ', 18), (' Administration ', 17), (' Royalties ', 15), ('expenses ', 12), (' Occupancy ', 12), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Depreciation and amortisation expenses ', 41), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' Depreciation expenses ', 35), (' Administrative and other expenses ', 35), (' Selling and marketting expenses ', 34), (' Selling & distribution expenses ', 32), (' Advertising expenses ', 32), (' Amortisation expenses ', 32), (' property espense ', 32), (' Distribution expenses ', 31), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Management expenses ', 30), (' Logistics and distribution ', 29), (' other expenses ', 27), (' Other expenses ', 27), (' Lease expenses ', 27), (' Other expenses ', 27), (' Marketing expenses ', 26), (' Sales and marketing ', 25), (' Selling Expenses ', 24), (' Occupancy expenses ', 23), (' Servicing expenses', 23), ('expenses ', 22), (' depreciation ', 22), (' Administration ', 21), (' Royalties ', 18), (' Occupancy ', 15), (' levies ', 8)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' Amortisation expenses ', 24), ('expenses ', 22), (' Advertising expenses ', 22), (' Sales and marketing ', 22), (' Distribution expenses ', 21), (' Administrative expenses ', 21), (' Administrative and other expenses ', 21), (' Administration expenses ', 21), (' Depreciation and amortisation expenses ', 21), (' marketing and advertising expenses ', 21), (' Royalties ', 20), (' Selling & distribution expenses ', 17), (' Administration ', 17), (' employee benefits expense ', 16), (' Selling and marketting expenses ', 16), (' Lease expenses ', 14), (' Selling Expenses ', 14), (' Salaries and employee benefits ', 14), (' other expenses ', 13), (' Occupancy expenses ', 13), (' Other expenses ', 13), (' Management expenses ', 13), (' Other expenses ', 13), (' Marketing expenses ', 12), (' Depreciation expenses ', 12), (' Servicing expenses', 12), (' property espense ', 11), (' Logistics and distribution ', 9), (' employee benefit espense ', 8), (' depreciation ', 0), (' Occupancy ', 0), (' levies ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' employee benefits expense ', 40), (' Depreciation and amortisation expenses ', 38), (' Salaries and employee benefits ', 38), (' marketing and advertising expenses ', 38), (' employee benefit espense ', 37), (' Depreciation expenses ', 35), (' property espense ', 34), (' Selling and marketting expenses ', 33), (' Management expenses ', 32), (' Marketing expenses ', 31), (' Selling & distribution expenses ', 31), (' Administrative and other expenses ', 31), (' Amortisation expenses ', 31), (' Distribution expenses ', 30), (' Administrative expenses ', 30), (' Administration expenses ', 30), (' Advertising expenses ', 30), (' Sales and marketing ', 30), (' Lease expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Logistics and distribution ', 28), (' Other expenses ', 28), (' Occupancy expenses ', 24), (' Selling Expenses ', 24), (' Servicing expenses', 24), ('expenses ', 23), (' Royalties ', 22), (' Administration ', 21), (' depreciation ', 18), (' Occupancy ', 14), (' levies ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Administrative and other expenses ', 35), (' employee benefit espense ', 34), (' Depreciation and amortisation expenses ', 32), (' Salaries and employee benefits ', 32), (' marketing and advertising expenses ', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' Sales and marketing ', 31), (' employee benefits expense ', 31), (' property espense ', 31), (' Selling and marketting expenses ', 31), (' Depreciation expenses ', 29), (' Servicing expenses', 29), (' Administration ', 28), (' other expenses ', 26), (' Marketing expenses ', 26), (' Other expenses ', 26), (' Logistics and distribution ', 26), (' Other expenses ', 26), (' Advertising expenses ', 25), (' Amortisation expenses ', 25), (' Selling & distribution expenses ', 23), (' Lease expenses ', 23), (' Selling Expenses ', 23), (' Management expenses ', 23), (' Distribution expenses ', 22), (' Occupancy expenses ', 20), (' depreciation ', 18), ('expenses ', 15), (' Royalties ', 14), (' Occupancy ', 11), (' levies ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Salaries and employee benefits ', 39), (' Logistics and distribution ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' Administrative and other expenses ', 32), (' Depreciation and amortisation expenses ', 32), (' marketing and advertising expenses ', 32), (' Sales and marketing ', 30), (' Lease expenses ', 29), (' other expenses ', 28), (' Other expenses ', 28), (' Other expenses ', 28), (' Depreciation expenses ', 27), (' Amortisation expenses ', 27), (' Servicing expenses', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' Advertising expenses ', 26), (' property espense ', 26), (' Selling and marketting expenses ', 26), (' Administration ', 25), (' Marketing expenses ', 23), (' Occupancy expenses ', 23), (' Selling & distribution expenses ', 23), (' Management expenses ', 23), (' depreciation ', 21), (' Distribution expenses ', 21), (' Selling Expenses ', 19), (' levies ', 17), ('expenses ', 16), (' Royalties ', 16), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Depreciation and amortisation expenses ', 37), (' Administrative and other expenses ', 35), (' Salaries and employee benefits ', 35), (' employee benefits expense ', 34), (' employee benefit espense ', 34), (' other expenses ', 33), (' Other expenses ', 33), (' Other expenses ', 33), (' Logistics and distribution ', 32), (' Servicing expenses', 32), (' Administrative expenses ', 31), (' Administration expenses ', 31), (' property espense ', 31), (' Selling and marketting expenses ', 31), (' Lease expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' marketing and advertising expenses ', 29), (' Distribution expenses ', 28), (' Selling Expenses ', 27), (' Marketing expenses ', 26), (' Management expenses ', 26), (' Advertising expenses ', 25), (' Occupancy expenses ', 23), (' Sales and marketing ', 22), (' depreciation ', 21), (' Administration ', 21), (' Royalties ', 18), ('expenses ', 15), (' Occupancy ', 11), (' levies ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Selling Expenses ', 40), (' Servicing expenses', 37), (' Depreciation expenses ', 36), (' marketing and advertising expenses ', 35), (' Selling & distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 33), (' Selling and marketting expenses ', 33), (' Lease expenses ', 32), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), ('expenses ', 30), (' Marketing expenses ', 30), (' depreciation ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' Distribution expenses ', 27), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' Salaries and employee benefits ', 25), (' Management expenses ', 23), (' levies ', 22), (' Occupancy ', 21), (' Administrative expenses ', 20), (' Administration expenses ', 20), (' Royalties ', 19), (' Administration ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Depreciation and amortisation expenses ', 31), (' property espense ', 31), (' Administrative and other expenses ', 29), (' employee benefit espense ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Logistics and distribution ', 27), (' Other expenses ', 27), (' Salaries and employee benefits ', 27), (' Selling & distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 22), (' Marketing expenses ', 21), (' Occupancy expenses ', 21), (' Depreciation expenses ', 21), (' Amortisation expenses ', 21), (' Sales and marketing ', 21), (' Distribution expenses ', 20), (' Management expenses ', 19), (' Advertising expenses ', 18), (' depreciation ', 17), (' Administration ', 14), (' Royalties ', 14), ('expenses ', 12), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Depreciation and amortisation expenses ', 31), (' property espense ', 31), (' Administrative and other expenses ', 29), (' employee benefit espense ', 28), (' other expenses ', 27), (' Other expenses ', 27), (' Logistics and distribution ', 27), (' Other expenses ', 27), (' Salaries and employee benefits ', 27), (' Selling & distribution expenses ', 26), (' employee benefits expense ', 26), (' Selling and marketting expenses ', 26), (' Servicing expenses', 26), (' Administrative expenses ', 25), (' Administration expenses ', 25), (' marketing and advertising expenses ', 25), (' Lease expenses ', 24), (' Selling Expenses ', 22), (' Marketing expenses ', 21), (' Occupancy expenses ', 21), (' Depreciation expenses ', 21), (' Amortisation expenses ', 21), (' Sales and marketing ', 21), (' Distribution expenses ', 20), (' Management expenses ', 19), (' Advertising expenses ', 18), (' depreciation ', 17), (' Administration ', 14), (' Royalties ', 14), ('expenses ', 12), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Selling & distribution expenses ', 46), (' Administrative and other expenses ', 45), (' marketing and advertising expenses ', 45), (' Selling and marketting expenses ', 45), (' Servicing expenses', 45), (' Amortisation expenses ', 44), (' Advertising expenses ', 43), (' property espense ', 43), (' Depreciation and amortisation expenses ', 42), (' Logistics and distribution ', 38), (' Distribution expenses ', 37), (' Administrative expenses ', 37), (' Lease expenses ', 37), (' Administration expenses ', 37), (' Selling Expenses ', 37), (' employee benefits expense ', 37), (' employee benefit espense ', 37), (' other expenses ', 36), (' Other expenses ', 36), (' Other expenses ', 36), (' Marketing expenses ', 35), (' Depreciation expenses ', 34), (' Salaries and employee benefits ', 34), (' Sales and marketing ', 33), (' Administration ', 33), (' Occupancy expenses ', 26), (' Management expenses ', 26), ('expenses ', 24), (' Occupancy ', 19), (' levies ', 19), (' depreciation ', 18), (' Royalties ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Depreciation expenses ', 47), (' marketing and advertising expenses ', 44), (' employee benefits expense ', 43), (' employee benefit espense ', 43), (' Advertising expenses ', 41), (' Administrative and other expenses ', 40), (' Lease expenses ', 40), (' other expenses ', 39), (' Other expenses ', 39), (' Management expenses ', 39), (' Other expenses ', 39), (' Marketing expenses ', 38), (' Amortisation expenses ', 37), (' Selling & distribution expenses ', 36), (' Depreciation and amortisation expenses ', 36), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Distribution expenses ', 35), (' Administrative expenses ', 35), (' Administration expenses ', 35), (' Selling and marketting expenses ', 35), (' Selling Expenses ', 34), ('expenses ', 33), (' Occupancy expenses ', 33), (' Servicing expenses', 32), (' Logistics and distribution ', 27), (' depreciation ', 26), (' Sales and marketing ', 26), (' Administration ', 24), (' Occupancy ', 21), (' levies ', 14), (' Royalties ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Administrative and other expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Salaries and employee benefits ', 33), (' employee benefit espense ', 32), (' other expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), (' Servicing expenses', 31), (' employee benefits expense ', 30), (' property espense ', 30), (' Lease expenses ', 29), (' Logistics and distribution ', 28), (' Selling and marketting expenses ', 27), (' Administrative expenses ', 26), (' Administration expenses ', 26), (' marketing and advertising expenses ', 26), (' Selling & distribution expenses ', 25), (' Selling Expenses ', 25), (' Distribution expenses ', 24), (' Depreciation expenses ', 24), (' Amortisation expenses ', 24), (' Marketing expenses ', 22), (' Occupancy expenses ', 22), (' Management expenses ', 22), (' Advertising expenses ', 21), (' Sales and marketing ', 21), (' depreciation ', 20), (' Royalties ', 17), (' Administration ', 16), ('expenses ', 14), (' levies ', 11), (' Occupancy ', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Selling Expenses ', 40), (' Servicing expenses', 37), (' Depreciation expenses ', 36), (' marketing and advertising expenses ', 35), (' Selling & distribution expenses ', 34), (' Advertising expenses ', 34), (' property espense ', 34), (' employee benefit espense ', 33), (' Selling and marketting expenses ', 33), (' Lease expenses ', 32), (' other expenses ', 31), (' Occupancy expenses ', 31), (' Other expenses ', 31), (' Other expenses ', 31), ('expenses ', 30), (' Marketing expenses ', 30), (' depreciation ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Sales and marketing ', 28), (' employee benefits expense ', 28), (' Distribution expenses ', 27), (' Administrative and other expenses ', 25), (' Depreciation and amortisation expenses ', 25), (' Salaries and employee benefits ', 25), (' Management expenses ', 23), (' levies ', 22), (' Occupancy ', 21), (' Administrative expenses ', 20), (' Administration expenses ', 20), (' Royalties ', 19), (' Administration ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Administrative and other expenses ', 42), (' other expenses ', 38), (' Other expenses ', 38), (' Other expenses ', 38), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Selling and marketting expenses ', 35), (' Marketing expenses ', 33), (' Depreciation and amortisation expenses ', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Lease expenses ', 31), (' Management expenses ', 30), (' Logistics and distribution ', 30), (' marketing and advertising expenses ', 30), (' Servicing expenses', 30), (' Administrative expenses ', 28), (' Administration expenses ', 28), (' Selling Expenses ', 27), (' Occupancy expenses ', 26), (' Selling & distribution expenses ', 26), (' Distribution expenses ', 25), (' Depreciation expenses ', 25), (' Amortisation expenses ', 25), (' Advertising expenses ', 21), (' Administration ', 20), ('expenses ', 17), (' depreciation ', 17), (' Royalties ', 17), (' Occupancy ', 9), (' levies ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other expenses ', 43), (' Other expenses ', 43), (' Administrative and other expenses ', 43), (' Other expenses ', 43), (' property espense ', 36), (' Salaries and employee benefits ', 36), (' Lease expenses ', 35), (' Selling and marketting expenses ', 35), (' Management expenses ', 34), (' Marketing expenses ', 33), (' Servicing expenses', 33), (' Sales and marketing ', 32), (' employee benefits expense ', 32), (' employee benefit espense ', 32), (' Occupancy expenses ', 30), (' Selling Expenses ', 30), (' Depreciation and amortisation expenses ', 30), (' marketing and advertising expenses ', 30), (' Depreciation expenses ', 29), (' Selling & distribution expenses ', 29), (' Amortisation expenses ', 29), (' Logistics and distribution ', 29), (' Administrative expenses ', 27), (' Administration expenses ', 27), (' Distribution expenses ', 24), (' Advertising expenses ', 24), (' Administration ', 23), ('expenses ', 20), (' depreciation ', 19), (' Royalties ', 19), (' Occupancy ', 10), (' levies ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [4, 5, 8], 'score': 100, 'value': -165181.0, 'line_item_label': ['Employee benefits expense', 'Depreciation and amortisation expense', 'Other expenses'], 'note_numbers': [nan, nan, nan], 'line_item_value': [-60182.0, -10545.0, -94454.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Rent ', ' Rental expenses', ' Occupancy', ' Occupancy expenses ', ' Rental expense relating to operating leases lease expense']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_rent
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Premises cost ', 37), (' Administration expenses ', 33), (' Rental expenses ', 31), (' Other expense', 27), (' Occupancy expenses ', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 26), (' Occupancy expenses ', 25), (' Other expense', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Premises cost ', 60), (' Rental expenses ', 36), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Administration expenses ', 53), (' Occupancy expenses ', 35), (' Other expense', 35), (' Rental expenses ', 34), (' Premises cost ', 30), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Administration expenses ', 57), (' Premises cost ', 43), (' Occupancy expenses ', 32), (' Other expense', 32), (' Rental expenses ', 31), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Administration expenses ', 28), (' Premises cost ', 24), (' Other expense', 24), (' Rental expenses ', 21), (' Occupancy expenses ', 18), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 29), (' Premises cost ', 24), (' Occupancy expenses ', 18), (' Other expense', 18), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Other expense', 100), (' Occupancy expenses ', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Premises cost ', 26), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Premises cost ', 55), (' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses ', 26), (' Occupancy ', 25), (' Other expense', 17), ('Rent ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Premises cost ', 36), (' Rental expenses ', 34), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Other expense', 64), (' Occupancy expenses ', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Premises cost ', 22), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Administration expenses ', 37), (' Premises cost ', 36), (' Rental expenses ', 34), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other expense', 59), (' Rental expenses ', 40), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Other expense', 28), (' Rental expenses ', 25), (' Occupancy expenses ', 22), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Other expense', 28), (' Rental expenses ', 25), (' Occupancy expenses ', 22), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 31), (' Other expense', 27), (' Occupancy expenses ', 23), (' Premises cost ', 20), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('Rent ', 29), (' Rental expenses ', 25), (' Administration expenses ', 21), (' Premises cost ', 14), (' Occupancy expenses ', 13), (' Other expense', 13), (' Occupancy ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 30), (' Premises cost ', 29), (' Other expense', 28), (' Occupancy expenses ', 24), ('Rent ', 19), (' Occupancy ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 29), (' Premises cost ', 27), (' Other expense', 26), (' Occupancy expenses ', 20), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Rental expenses ', 32), (' Premises cost ', 29), (' Other expense', 28), (' Administration expenses ', 26), (' Occupancy expenses ', 23), ('Rent ', 17), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Other expense', 33), (' Administration expenses ', 31), (' Premises cost ', 30), (' Rental expenses ', 26), (' Occupancy expenses ', 23), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Premises cost ', 32), (' Occupancy expenses ', 31), (' Other expense', 31), (' Rental expenses ', 30), ('Rent ', 22), (' Occupancy ', 21), (' Administration expenses ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Premises cost ', 27), (' Other expense', 27), (' Administration expenses ', 25), (' Rental expenses ', 24), (' Occupancy expenses ', 21), ('Rent ', 12), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Premises cost ', 27), (' Other expense', 27), (' Administration expenses ', 25), (' Rental expenses ', 24), (' Occupancy expenses ', 21), ('Rent ', 12), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Premises cost ', 42), (' Administration expenses ', 37), (' Other expense', 36), (' Rental expenses ', 35), (' Occupancy expenses ', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Rental expenses ', 43), (' Other expense', 39), (' Administration expenses ', 35), (' Premises cost ', 34), (' Occupancy expenses ', 33), ('Rent ', 21), (' Occupancy ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Other expense', 31), (' Premises cost ', 29), (' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses ', 22), ('Rent ', 14), (' Occupancy ', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Premises cost ', 32), (' Occupancy expenses ', 31), (' Other expense', 31), (' Rental expenses ', 30), ('Rent ', 22), (' Occupancy ', 21), (' Administration expenses ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Other expense', 38), (' Rental expenses ', 37), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Premises cost ', 23), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Other expense', 43), (' Rental expenses ', 42), (' Occupancy expenses ', 30), (' Administration expenses ', 27), (' Premises cost ', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': -108171.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-108171.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Rent ', ' Rental expenses ', ' Administration expenses ', ' Occupancy ', ' Occupancy expenses ', ' Premises cost ', ' Other expense'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Premises cost ', 37), (' Administration expenses ', 33), (' Rental expenses ', 31), (' Other expense', 27), (' Occupancy expenses ', 23), ('Rent ', 22), (' Occupancy ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 26), (' Occupancy expenses ', 25), (' Other expense', 25), (' Rental expenses ', 24), (' Occupancy ', 24), ('Rent ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other expense', 61), (' Premises cost ', 36), (' Administration expenses ', 30), ('Rent ', 27), (' Occupancy expenses ', 26), (' Rental expenses ', 25), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Premises cost ', 60), (' Rental expenses ', 36), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 19), ('Rent ', 15), (' Occupancy ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Administration expenses ', 53), (' Occupancy expenses ', 35), (' Other expense', 35), (' Rental expenses ', 34), (' Premises cost ', 30), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Administration expenses ', 57), (' Premises cost ', 43), (' Occupancy expenses ', 32), (' Other expense', 32), (' Rental expenses ', 31), ('Rent ', 20), (' Occupancy ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Administration expenses ', 28), (' Premises cost ', 24), (' Other expense', 24), (' Rental expenses ', 21), (' Occupancy expenses ', 18), ('Rent ', 14), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Administration expenses ', 37), (' Rental expenses ', 29), (' Premises cost ', 24), (' Occupancy expenses ', 18), (' Other expense', 18), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' Other expense', 100), (' Occupancy expenses ', 67), (' Rental expenses ', 64), (' Administration expenses ', 43), ('Rent ', 38), (' Premises cost ', 26), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Premises cost ', 55), (' Rental expenses ', 33), (' Administration expenses ', 30), (' Occupancy expenses ', 26), (' Occupancy ', 25), (' Other expense', 17), ('Rent ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Premises cost ', 36), (' Rental expenses ', 34), (' Administration expenses ', 32), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Rental expenses ', 69), (' Other expense', 64), (' Occupancy expenses ', 57), (' Administration expenses ', 38), ('Rent ', 30), (' Premises cost ', 22), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Administration expenses ', 37), (' Premises cost ', 36), (' Rental expenses ', 34), (' Other expense', 29), (' Occupancy expenses ', 24), ('Rent ', 23), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other expense', 59), (' Rental expenses ', 40), (' Premises cost ', 36), (' Occupancy expenses ', 35), (' Administration expenses ', 32), ('Rent ', 31), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Other expense', 28), (' Rental expenses ', 25), (' Occupancy expenses ', 22), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Administration expenses ', 29), (' Premises cost ', 28), (' Other expense', 28), (' Rental expenses ', 25), (' Occupancy expenses ', 22), ('Rent ', 12), (' Occupancy ', 12)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Rental expenses ', 33), (' Administration expenses ', 31), (' Other expense', 27), (' Occupancy expenses ', 23), (' Premises cost ', 20), ('Rent ', 15), (' Occupancy ', 15)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('Rent ', 29), (' Rental expenses ', 25), (' Administration expenses ', 21), (' Premises cost ', 14), (' Occupancy expenses ', 13), (' Other expense', 13), (' Occupancy ', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Rental expenses ', 35), (' Administration expenses ', 30), (' Premises cost ', 29), (' Other expense', 28), (' Occupancy expenses ', 24), ('Rent ', 19), (' Occupancy ', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Administration expenses ', 31), (' Rental expenses ', 29), (' Premises cost ', 27), (' Other expense', 26), (' Occupancy expenses ', 20), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Rental expenses ', 32), (' Premises cost ', 29), (' Other expense', 28), (' Administration expenses ', 26), (' Occupancy expenses ', 23), ('Rent ', 17), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Other expense', 33), (' Administration expenses ', 31), (' Premises cost ', 30), (' Rental expenses ', 26), (' Occupancy expenses ', 23), ('Rent ', 15), (' Occupancy ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Premises cost ', 32), (' Occupancy expenses ', 31), (' Other expense', 31), (' Rental expenses ', 30), ('Rent ', 22), (' Occupancy ', 21), (' Administration expenses ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Premises cost ', 27), (' Other expense', 27), (' Administration expenses ', 25), (' Rental expenses ', 24), (' Occupancy expenses ', 21), ('Rent ', 12), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Premises cost ', 27), (' Other expense', 27), (' Administration expenses ', 25), (' Rental expenses ', 24), (' Occupancy expenses ', 21), ('Rent ', 12), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Premises cost ', 42), (' Administration expenses ', 37), (' Other expense', 36), (' Rental expenses ', 35), (' Occupancy expenses ', 26), ('Rent ', 19), (' Occupancy ', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Rental expenses ', 43), (' Other expense', 39), (' Administration expenses ', 35), (' Premises cost ', 34), (' Occupancy expenses ', 33), ('Rent ', 21), (' Occupancy ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Other expense', 31), (' Premises cost ', 29), (' Rental expenses ', 28), (' Administration expenses ', 26), (' Occupancy expenses ', 22), ('Rent ', 14), (' Occupancy ', 7)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Premises cost ', 32), (' Occupancy expenses ', 31), (' Other expense', 31), (' Rental expenses ', 30), ('Rent ', 22), (' Occupancy ', 21), (' Administration expenses ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Other expense', 38), (' Rental expenses ', 37), (' Administration expenses ', 28), (' Occupancy expenses ', 26), (' Premises cost ', 23), ('Rent ', 18), (' Occupancy ', 9)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Other expense', 43), (' Rental expenses ', 42), (' Occupancy expenses ', 30), (' Administration expenses ', 27), (' Premises cost ', 26), ('Rent ', 21), (' Occupancy ', 10)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [8], 'score': 100, 'value': -94454.0, 'line_item_label': ['Other expenses'], 'note_numbers': [nan], 'line_item_value': [-94454.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['other operating', 'Other revenue ', ' Other income']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Commission revenue ', ' Rent ', ' rental revenue']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_others_opr_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue ', 45), (' Other income', 37), ('other operating', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue ', 38), ('other operating', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('Other revenue ', 35), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('Other revenue ', 42), ('other operating', 28), (' Other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('Other revenue ', 24), (' Other income', 24), ('other operating', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Other income', 30), ('other operating', 25), ('Other revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue ', 35), (' Other income', 27), ('other operating', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 28), ('other operating', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 28), ('other operating', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 27), ('other operating', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('other operating', 15), (' Other income', 14), ('Other revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Other income', 37), ('other operating', 29), ('Other revenue ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Other income', 30), ('Other revenue ', 26), ('other operating', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Other income', 33), ('other operating', 24), ('Other revenue ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Other income', 37), ('other operating', 31), ('Other revenue ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('other operating', 42), ('Other revenue ', 38), (' Other income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('other operating', 32), (' Other income', 32), ('Other revenue ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Other income', 46), ('other operating', 29), ('Other revenue ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('other operating', 29), (' Other income', 29), ('Other revenue ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('other operating', 42), ('Other revenue ', 38), (' Other income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Other income', 42), ('other operating', 39), ('Other revenue ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 2308.0, 'line_item_label': ['Other income'], 'note_numbers': ['4.3'], 'line_item_value': [2308.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['other operating', 'Other revenue ', ' Other income'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('Other revenue ', 45), (' Other income', 37), ('other operating', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' Other income', 43), ('other operating', 18), ('Other revenue ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Other income', 100), ('other operating', 67), ('Other revenue ', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Other income', 40), ('Other revenue ', 38), ('other operating', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('Other revenue ', 35), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('Other revenue ', 42), ('other operating', 28), (' Other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('Other revenue ', 24), (' Other income', 24), ('other operating', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Other income', 30), ('other operating', 25), ('Other revenue ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other operating', 73), (' Other income', 61), ('Other revenue ', 42)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('Other revenue ', 35), (' Other income', 27), ('other operating', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' Other income', 52), ('other operating', 38), ('Other revenue ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Other income', 48), ('other operating', 31), ('Other revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' Other income', 67), ('other operating', 56), ('Other revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 28), ('other operating', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 28), ('other operating', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Other income', 31), ('Other revenue ', 27), ('other operating', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('other operating', 15), (' Other income', 14), ('Other revenue ', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Other income', 37), ('other operating', 29), ('Other revenue ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Other income', 30), ('Other revenue ', 26), ('other operating', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Other income', 33), ('other operating', 24), ('Other revenue ', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Other income', 37), ('other operating', 31), ('Other revenue ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('other operating', 42), ('Other revenue ', 38), (' Other income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('Other revenue ', 27), ('other operating', 25), (' Other income', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('other operating', 32), (' Other income', 32), ('Other revenue ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' Other income', 46), ('other operating', 29), ('Other revenue ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('other operating', 29), (' Other income', 29), ('Other revenue ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('other operating', 42), ('Other revenue ', 38), (' Other income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Other income', 42), ('other operating', 39), ('Other revenue ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('other operating', 44), (' Other income', 43), ('Other revenue ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2], 'score': 100, 'value': 5245.0, 'line_item_label': ['Other income'], 'note_numbers': ['4.3'], 'line_item_value': [5245.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Commission revenue ', ' Rent ', ' rental revenue'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' rental revenue', 62), (' Rent ', 50), ('Commission revenue ', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' rental revenue', 54), (' Rent ', 50), ('Commission revenue ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 40), ('Commission revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 30), (' rental revenue', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' rental revenue', 62), (' Rent ', 50), ('Commission revenue ', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' rental revenue', 54), (' Rent ', 50), ('Commission revenue ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 40), ('Commission revenue ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' Rent ', 50), ('Commission revenue ', 30), (' rental revenue', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Rent ', 50), (' rental revenue', 46), ('Commission revenue ', 29)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Commission revenue ', 0), (' Rent ', 0), (' rental revenue', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_income
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['Interest expense', 'interest expense']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), (' Other revenue', 45), ('Finance income and costs', 38), (' Net finance costs ', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs ', 59), ('other income', 43), (' Interest revenue', 30), (' Other revenue', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs ', 58), ('other income', 40), ('Finance income and costs', 40), (' Other revenue', 38), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Interest revenue', 43), (' Other revenue', 35), ('other income', 24), ('finance income', 24), (' Finance income and finance costs', 24), ('Finance income and costs', 23), (' Net finance costs ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Interest revenue', 44), (' Other revenue', 42), (' Net finance costs ', 39), ('Finance income and costs', 38), (' Finance income and finance costs', 37), ('finance income', 32), ('other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 37), (' Interest revenue', 31), (' Net finance costs ', 29), ('finance income', 27), ('other income', 24), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Finance income and finance costs', 44), ('Finance income and costs', 42), ('finance income', 35), (' Net finance costs ', 32), ('other income', 30), (' Interest revenue', 22), (' Other revenue', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Other revenue', 42), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs ', 22), (' Finance income and finance costs', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs ', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Other revenue', 35), (' Interest revenue', 31), ('other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs ', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32), (' Other revenue', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Finance income and finance costs', 40), (' Net finance costs ', 38), ('Finance income and costs', 37), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs ', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 32), ('other income', 31), (' Finance income and finance costs', 30), (' Other revenue', 28), ('Finance income and costs', 27), (' Net finance costs ', 27), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 32), ('other income', 31), (' Finance income and finance costs', 30), (' Other revenue', 28), ('Finance income and costs', 27), (' Net finance costs ', 27), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 38), ('finance income', 33), (' Net finance costs ', 32), ('other income', 31), (' Interest revenue', 29), (' Other revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' Net finance costs ', 22), ('Finance income and costs', 17), ('other income', 14), ('finance income', 13), (' Finance income and finance costs', 13), (' Other revenue', 13), (' Interest revenue', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Net finance costs ', 42), ('Finance income and costs', 41), ('other income', 37), ('finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 30), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 34), (' Interest revenue', 31), ('other income', 30), ('finance income', 26), (' Other revenue', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('Finance income and costs', 46), (' Finance income and finance costs', 44), (' Net finance costs ', 43), ('finance income', 37), ('other income', 33), (' Interest revenue', 26), (' Other revenue', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('other income', 37), (' Net finance costs ', 34), ('Finance income and costs', 31), (' Finance income and finance costs', 31), (' Interest revenue', 28), (' Other revenue', 26), ('finance income', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Other revenue', 38), (' Interest revenue', 34), ('other income', 32), (' Net finance costs ', 21), ('Finance income and costs', 17), ('finance income', 15), (' Finance income and finance costs', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 28), (' Other revenue', 27), (' Finance income and finance costs', 26), (' Net finance costs ', 26), ('other income', 24), ('Finance income and costs', 24), ('finance income', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 28), (' Other revenue', 27), (' Finance income and finance costs', 26), (' Net finance costs ', 26), ('other income', 24), ('Finance income and costs', 24), ('finance income', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 33), ('other income', 32), (' Other revenue', 31), ('finance income', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('other income', 46), (' Net finance costs ', 46), ('finance income', 44), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 31), (' Other revenue', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 30), ('other income', 29), ('Finance income and costs', 27), (' Net finance costs ', 27), (' Other revenue', 25), (' Interest revenue', 24), ('finance income', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Other revenue', 38), (' Interest revenue', 34), ('other income', 32), (' Net finance costs ', 21), ('Finance income and costs', 17), ('finance income', 15), (' Finance income and finance costs', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('other income', 42), (' Net finance costs ', 39), ('Finance income and costs', 35), (' Interest revenue', 32), (' Finance income and finance costs', 32), (' Other revenue', 30), ('finance income', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Other revenue', 30), (' Interest revenue', 28)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 9], 'score': 85, 'value': 129977.0, 'line_item_label': ['Finance income', 'Other income', 'Finance costs'], 'note_numbers': ['4.2', '4.3', '4.6'], 'line_item_value': [216285.0, 2308.0, -88616.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['other income', 'finance income', 'Finance income and costs', ' Interest revenue', ' Finance income and finance costs', ' Net finance costs ', ' Other revenue'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Interest revenue', 51), (' Other revenue', 45), ('Finance income and costs', 38), (' Net finance costs ', 38), ('other income', 37), (' Finance income and finance costs', 37), ('finance income', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('finance income', 100), ('Finance income and costs', 73), (' Finance income and finance costs', 60), (' Net finance costs ', 59), ('other income', 43), (' Interest revenue', 30), (' Other revenue', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('other income', 100), ('finance income', 43), (' Other revenue', 43), (' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 31), (' Finance income and finance costs', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' Net finance costs ', 58), ('other income', 40), ('Finance income and costs', 40), (' Other revenue', 38), (' Interest revenue', 33), (' Finance income and finance costs', 32), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Interest revenue', 43), (' Other revenue', 35), ('other income', 24), ('finance income', 24), (' Finance income and finance costs', 24), ('Finance income and costs', 23), (' Net finance costs ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Interest revenue', 44), (' Other revenue', 42), (' Net finance costs ', 39), ('Finance income and costs', 38), (' Finance income and finance costs', 37), ('finance income', 32), ('other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 37), (' Interest revenue', 31), (' Net finance costs ', 29), ('finance income', 27), ('other income', 24), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Finance income and finance costs', 44), ('Finance income and costs', 42), ('finance income', 35), (' Net finance costs ', 32), ('other income', 30), (' Interest revenue', 22), (' Other revenue', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('other income', 61), (' Other revenue', 42), (' Interest revenue', 37), ('finance income', 25), ('Finance income and costs', 24), (' Net finance costs ', 22), (' Finance income and finance costs', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Net finance costs ', 85), ('Finance income and costs', 69), (' Finance income and finance costs', 56), ('finance income', 52), (' Other revenue', 35), (' Interest revenue', 31), ('other income', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 33), (' Interest revenue', 27), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('other income', 52), ('finance income', 50), (' Net finance costs ', 45), ('Finance income and costs', 43), (' Finance income and finance costs', 36), (' Interest revenue', 32), (' Other revenue', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('other income', 48), ('finance income', 41), (' Finance income and finance costs', 40), (' Net finance costs ', 38), ('Finance income and costs', 37), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('other income', 67), (' Net finance costs ', 49), ('Finance income and costs', 42), ('finance income', 41), (' Finance income and finance costs', 36), (' Other revenue', 29), (' Interest revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 32), ('other income', 31), (' Finance income and finance costs', 30), (' Other revenue', 28), ('Finance income and costs', 27), (' Net finance costs ', 27), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 32), ('other income', 31), (' Finance income and finance costs', 30), (' Other revenue', 28), ('Finance income and costs', 27), (' Net finance costs ', 27), ('finance income', 19)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Finance income and finance costs', 39), ('Finance income and costs', 38), ('finance income', 33), (' Net finance costs ', 32), ('other income', 31), (' Interest revenue', 29), (' Other revenue', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' Net finance costs ', 22), ('Finance income and costs', 17), ('other income', 14), ('finance income', 13), (' Finance income and finance costs', 13), (' Other revenue', 13), (' Interest revenue', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Net finance costs ', 42), ('Finance income and costs', 41), ('other income', 37), ('finance income', 36), (' Finance income and finance costs', 36), (' Interest revenue', 30), (' Other revenue', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Net finance costs ', 38), (' Finance income and finance costs', 36), ('Finance income and costs', 34), (' Interest revenue', 31), ('other income', 30), ('finance income', 26), (' Other revenue', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('Finance income and costs', 46), (' Finance income and finance costs', 44), (' Net finance costs ', 43), ('finance income', 37), ('other income', 33), (' Interest revenue', 26), (' Other revenue', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('other income', 37), (' Net finance costs ', 34), ('Finance income and costs', 31), (' Finance income and finance costs', 31), (' Interest revenue', 28), (' Other revenue', 26), ('finance income', 23)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Other revenue', 38), (' Interest revenue', 34), ('other income', 32), (' Net finance costs ', 21), ('Finance income and costs', 17), ('finance income', 15), (' Finance income and finance costs', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 28), (' Other revenue', 27), (' Finance income and finance costs', 26), (' Net finance costs ', 26), ('other income', 24), ('Finance income and costs', 24), ('finance income', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest revenue', 28), (' Other revenue', 27), (' Finance income and finance costs', 26), (' Net finance costs ', 26), ('other income', 24), ('Finance income and costs', 24), ('finance income', 13)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Interest revenue', 38), (' Net finance costs ', 38), ('Finance income and costs', 33), (' Finance income and finance costs', 33), ('other income', 32), (' Other revenue', 31), ('finance income', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('other income', 46), (' Net finance costs ', 46), ('finance income', 44), ('Finance income and costs', 40), (' Finance income and finance costs', 38), (' Interest revenue', 31), (' Other revenue', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Finance income and finance costs', 30), ('other income', 29), ('Finance income and costs', 27), (' Net finance costs ', 27), (' Other revenue', 25), (' Interest revenue', 24), ('finance income', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Other revenue', 38), (' Interest revenue', 34), ('other income', 32), (' Net finance costs ', 21), ('Finance income and costs', 17), ('finance income', 15), (' Finance income and finance costs', 14)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('other income', 42), (' Net finance costs ', 39), ('Finance income and costs', 35), (' Interest revenue', 32), (' Finance income and finance costs', 32), (' Other revenue', 30), ('finance income', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Net finance costs ', 44), ('other income', 43), ('Finance income and costs', 39), (' Finance income and finance costs', 35), ('finance income', 30), (' Other revenue', 30), (' Interest revenue', 28)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [1, 2, 9], 'score': 85, 'value': 130355.0, 'line_item_label': ['Finance income', 'Other income', 'Finance costs'], 'note_numbers': ['4.2', '4.3', '4.6'], 'line_item_value': [238012.0, 5245.0, -112902.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue ', 69), (' Interest income from cash and cash equivalents ', 68), (' Interest income from financial assets measured at amortised cost', 68), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income from finance leases , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Interest income from financial assets measured at amortised cost', 81), (' Bank interest ', 77), (' Sublease interest income ', 73), (' Interest income from cash and cash equivalents ', 69), (' interest revenue ', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 64), (' Interest received - Loan ', 60), (' Interest received - Bank ', 55), (' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 41)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 52), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), (' Interest income from financial assets measured at amortised cost', 52), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue ', 33), ('interest ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Sublease interest income ', 84), (' Bank interest ', 77), (' interest revenue ', 69), (' Interest income from cash and cash equivalents ', 68), (' Interest income from financial assets measured at amortised cost', 68), (' Share of JV interest received/(paid) ', 63), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 63), (' Interest received - Bank ', 58), (' Interest received - Loan ', 58), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income from finance leases , res_fuzz_match = [('interest ', 100), (' Interest income ', 100), (' Interest income from financial assets measured at amortised cost', 81), (' Bank interest ', 77), (' Sublease interest income ', 73), (' Interest income from cash and cash equivalents ', 69), (' interest revenue ', 67), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 64), (' Interest received - Loan ', 60), (' Interest received - Bank ', 55), (' Share of JV interest received/(paid) ', 50), (' Bank Deposits - cash and cash equivalents ', 41)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance income , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 52), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), (' Interest income from financial assets measured at amortised cost', 52), (' Bank Deposits - cash and cash equivalents ', 43), (' Interest income from cash and cash equivalents ', 43), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' Share of JV interest received/(paid) ', 35), (' interest revenue ', 33), ('interest ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4], 'score': [100, 100, 100, 100], 'value': [235996.0, 2016.0, 214633.0, 1652.0], 'label': ['None Interest income', 'None Interest income from finance leases', 'None Interest income', 'None Interest income from finance leases'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income from finance leases , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income , res_fuzz_match = [('Interest expense', 69), ('interest expense', 69)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest income from finance leases , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' Interest received - Bank ', 56), (' Interest received - Loan ', 56), (' interest revenue ', 53), (' Share of JV interest received/(paid) ', 52), ('interest ', 50), (' Interest income ', 50), (' Interest income from financial assets measured at amortised cost', 48), (' Bank interest ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Interest income from cash and cash equivalents ', 43), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' interest revenue ', 53), ('interest ', 50), (' Interest received - Bank ', 47), (' Interest received - Loan ', 47), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' Bank interest ', 46), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 42), (' Interest income from cash and cash equivalents ', 42), (' Interest income from financial assets measured at amortised cost', 42), (' Sublease interest income ', 38), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' Interest income from financial assets measured at amortised cost', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue ', 30), (' Interest income from cash and cash equivalents ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' Bank Deposits - cash and cash equivalents ', 53), (' Interest received - Loan ', 50), (' Interest income from cash and cash equivalents ', 49), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest income from financial assets measured at amortised cost', 38), (' Interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 60), ('interest ', 50), (' Bank interest ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Interest income ', 40), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' interest revenue ', 40), (' Interest income from cash and cash equivalents ', 40), (' Interest income from financial assets measured at amortised cost', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' Interest received - Bank ', 56), (' Interest received - Loan ', 56), (' interest revenue ', 53), (' Share of JV interest received/(paid) ', 52), ('interest ', 50), (' Interest income ', 50), (' Interest income from financial assets measured at amortised cost', 48), (' Bank interest ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 43), (' Interest income from cash and cash equivalents ', 43), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' interest revenue ', 53), ('interest ', 50), (' Interest received - Bank ', 47), (' Interest received - Loan ', 47), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' Bank interest ', 46), (' Interest income ', 43), (' Share of JV interest received/(paid) ', 42), (' Interest income from cash and cash equivalents ', 42), (' Interest income from financial assets measured at amortised cost', 42), (' Sublease interest income ', 38), (' Bank Deposits - cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 40), (' Interest income from financial assets measured at amortised cost', 40), ('interest ', 38), (' Bank interest ', 30), (' Interest income ', 30), (' Interest received - Bank ', 30), (' Sublease interest income ', 30), (' Share of JV interest received/(paid) ', 30), (' interest revenue ', 30), (' Interest income from cash and cash equivalents ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' Bank Deposits - cash and cash equivalents ', 53), (' Interest received - Loan ', 50), (' Interest income from cash and cash equivalents ', 49), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Interest received - Bank ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 42), (' Sublease interest income ', 41), (' interest revenue ', 40), ('interest ', 38), (' Interest income from financial assets measured at amortised cost', 38), (' Interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 60), ('interest ', 50), (' Bank interest ', 50), (' Sublease interest income ', 50), (' Share of JV interest received/(paid) ', 50), (' Interest income ', 40), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' Bank Deposits - cash and cash equivalents ', 40), (' interest revenue ', 40), (' Interest income from cash and cash equivalents ', 40), (' Interest income from financial assets measured at amortised cost', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 59), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 36), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [('Interest expense', 30), ('interest expense', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 67), (' Interest received - Loan ', 65), (' Interest income ', 64), (' Interest received - Bank ', 60), (' Share of JV interest received/(paid) ', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Sublease interest income ', 55), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 43), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 61), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), ('interest ', 50), (' Share of JV interest received/(paid) ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Interest income from cash and cash equivalents ', 42), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Share of JV interest received/(paid) ', 50), (' interest revenue ', 47), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income from cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 59), (' Interest income from financial assets measured at amortised cost', 59), (' Bank Deposits - cash and cash equivalents ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income ', 43), (' Sublease interest income ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33), (' Share of JV interest received/(paid) ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('interest ', 100), (' Bank interest ', 77), (' interest revenue ', 67), (' Interest received - Loan ', 65), (' Interest income ', 64), (' Interest received - Bank ', 60), (' Share of JV interest received/(paid) ', 58), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 57), (' Sublease interest income ', 55), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 43), (' Bank Deposits - cash and cash equivalents ', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 61), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), ('interest ', 50), (' Share of JV interest received/(paid) ', 50), (' interest revenue ', 47), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Interest income from cash and cash equivalents ', 42), (' Sublease interest income ', 41), (' Bank Deposits - cash and cash equivalents ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Interest income from financial assets measured at amortised cost', 62), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 55), (' Share of JV interest received/(paid) ', 50), (' interest revenue ', 47), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income from cash and cash equivalents ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest income ', 36), (' Sublease interest income ', 36), (' Bank Deposits - cash and cash equivalents ', 34)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 59), (' Interest income from financial assets measured at amortised cost', 59), (' Bank Deposits - cash and cash equivalents ', 45), (' Interest income from cash and cash equivalents ', 45), (' Interest income ', 43), (' Sublease interest income ', 41), ('interest ', 38), (' Bank interest ', 38), (' Interest received - Bank ', 35), (' Interest received - Loan ', 35), (' interest revenue ', 33), (' Share of JV interest received/(paid) ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': [100, 100], 'value': [2166.0, 2266.0], 'label': ['None Interest on lease liabilities (Note 12)', 'None Interest on lease liabilities (Note 12)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('Interest expense', 73), ('interest expense', 73)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 50), (' Interest income from financial assets measured at amortised cost', 49), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Share of JV interest received/(paid) ', 42), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 55), (' interest revenue ', 53), ('interest ', 50), (' Interest income from financial assets measured at amortised cost', 49), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 48), (' Share of JV interest received/(paid) ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income from cash and cash equivalents ', 44), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' Bank interest ', 54), ('interest ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' interest revenue ', 47), (' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Bank Deposits - cash and cash equivalents ', 41), (' Interest income from financial assets measured at amortised cost', 41), (' Interest received - Bank ', 40), (' Interest income from cash and cash equivalents ', 39), (' Sublease interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' Interest income ', 64), (' Interest received - Loan ', 55), (' interest revenue ', 53), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 47), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Interest received - Bank ', 45), (' Interest income from cash and cash equivalents ', 44), (' Interest income from financial assets measured at amortised cost', 44), ('interest ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 50), (' Interest income from financial assets measured at amortised cost', 49), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 44), (' Share of JV interest received/(paid) ', 42), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 35)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' Interest income ', 64), (' Sublease interest income ', 55), (' interest revenue ', 53), ('interest ', 50), (' Interest income from financial assets measured at amortised cost', 49), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 48), (' Share of JV interest received/(paid) ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Interest income from cash and cash equivalents ', 44), (' Bank interest ', 38), (' Bank Deposits - cash and cash equivalents ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' Bank interest ', 54), ('interest ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 47), (' interest revenue ', 47), (' Share of JV interest received/(paid) ', 46), (' Interest received - Loan ', 45), (' Interest income ', 43), (' Bank Deposits - cash and cash equivalents ', 41), (' Interest income from financial assets measured at amortised cost', 41), (' Interest received - Bank ', 40), (' Interest income from cash and cash equivalents ', 39), (' Sublease interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' Interest income ', 64), (' Interest received - Loan ', 55), (' interest revenue ', 53), (' Sublease interest income ', 50), (' Bank Deposits - cash and cash equivalents ', 47), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Interest received - Bank ', 45), (' Interest income from cash and cash equivalents ', 44), (' Interest income from financial assets measured at amortised cost', 44), ('interest ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('Interest expense', 33), ('interest expense', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('Interest expense', 47), ('interest expense', 47)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest ', ' Bank interest ', ' Interest income ', ' Interest received - Bank ', ' Interest received - Loan ', ' Sublease interest income ', ' Share of JV interest received/(paid) ', ' Bank Deposits - cash and cash equivalents ', ' Finance income under the effective interest method on financial assets not measured at FVTPL ', ' interest revenue ', ' Interest income from cash and cash equivalents ', ' Interest income from financial assets measured at amortised cost'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 55), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Interest income from financial assets measured at amortised cost', 43), (' Interest received - Bank ', 41), (' Interest received - Loan ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Interest income from cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 50), (' Interest income from financial assets measured at amortised cost', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Interest income from cash and cash equivalents ', 41), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('interest ', 62), (' interest revenue ', 60), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), (' Interest income ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 42), (' Sublease interest income ', 41), (' Interest income from financial assets measured at amortised cost', 39), (' Interest income from cash and cash equivalents ', 35), (' Bank Deposits - cash and cash equivalents ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), ('interest ', 50), (' Interest income ', 50), (' interest revenue ', 47), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 41), (' Interest income from cash and cash equivalents ', 41), (' Interest income from financial assets measured at amortised cost', 41), (' Interest received - Bank ', 40), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Sublease interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' Sublease interest income ', 59), (' Bank interest ', 54), (' interest revenue ', 53), ('interest ', 50), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' Sublease interest income ', 59), (' Interest income ', 57), (' Bank interest ', 54), ('interest ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 49), (' interest revenue ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' Sublease interest income ', 59), (' Bank interest ', 54), (' interest revenue ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 51), ('interest ', 50), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' Interest income ', 64), (' interest revenue ', 53), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), ('interest ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' Interest income ', 71), (' Sublease interest income ', 55), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 46), (' Interest income from financial assets measured at amortised cost', 43), (' Interest received - Bank ', 41), (' Interest received - Loan ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 38), (' Interest income from cash and cash equivalents ', 37)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' Interest income ', 57), (' Sublease interest income ', 50), (' Interest income from financial assets measured at amortised cost', 44), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 41), (' Interest income from cash and cash equivalents ', 41), (' Interest received - Bank ', 40), (' Interest received - Loan ', 40), (' interest revenue ', 40), ('interest ', 38), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Bank Deposits - cash and cash equivalents ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('interest ', 62), (' interest revenue ', 60), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), (' Interest income ', 50), (' Bank interest ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Share of JV interest received/(paid) ', 42), (' Sublease interest income ', 41), (' Interest income from financial assets measured at amortised cost', 39), (' Interest income from cash and cash equivalents ', 35), (' Bank Deposits - cash and cash equivalents ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' Finance income under the effective interest method on financial assets not measured at FVTPL ', 52), ('interest ', 50), (' Interest income ', 50), (' interest revenue ', 47), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 41), (' Interest income from cash and cash equivalents ', 41), (' Interest income from financial assets measured at amortised cost', 41), (' Interest received - Bank ', 40), (' Bank interest ', 38), (' Share of JV interest received/(paid) ', 38), (' Sublease interest income ', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' Sublease interest income ', 59), (' Bank interest ', 54), (' interest revenue ', 53), ('interest ', 50), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 50), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' Sublease interest income ', 59), (' Interest income ', 57), (' Bank interest ', 54), ('interest ', 50), (' Share of JV interest received/(paid) ', 50), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 49), (' interest revenue ', 47), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Interest received - Loan ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' Sublease interest income ', 59), (' Bank interest ', 54), (' interest revenue ', 53), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 51), ('interest ', 50), (' Interest income ', 50), (' Interest received - Loan ', 50), (' Share of JV interest received/(paid) ', 50), (' Interest income from financial assets measured at amortised cost', 47), (' Interest income from cash and cash equivalents ', 46), (' Interest received - Bank ', 45), (' Bank Deposits - cash and cash equivalents ', 44)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' Interest income ', 64), (' interest revenue ', 53), (' Interest received - Bank ', 50), (' Interest received - Loan ', 50), (' Sublease interest income ', 50), (' Bank interest ', 46), (' Share of JV interest received/(paid) ', 46), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 45), (' Interest income from financial assets measured at amortised cost', 45), (' Bank Deposits - cash and cash equivalents ', 44), (' Interest income from cash and cash equivalents ', 44), ('interest ', 38)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest ', 0), (' Bank interest ', 0), (' Interest income ', 0), (' Interest received - Bank ', 0), (' Interest received - Loan ', 0), (' Sublease interest income ', 0), (' Share of JV interest received/(paid) ', 0), (' Bank Deposits - cash and cash equivalents ', 0), (' Finance income under the effective interest method on financial assets not measured at FVTPL ', 0), (' interest revenue ', 0), (' Interest income from cash and cash equivalents ', 0), (' Interest income from financial assets measured at amortised cost', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['Interest expense', 'interest expense'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('Interest expense', 80), ('interest expense', 80)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('Interest expense', 40), ('interest expense', 40)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('Interest expense', 80), ('interest expense', 80)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('Interest expense', 67), ('interest expense', 67)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('Interest expense', 53), ('interest expense', 53)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('Interest expense', 60), ('interest expense', 60)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('Interest expense', 0), ('interest expense', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 10], 'score': [80, 80], 'value': [6.0, 17.0], 'label': ['None Non-deductible entertainment expense', 'None Non-deductible entertainment expense'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:52+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:52+0530 - sLogger - DEBUG - df_meta_keyword = smr_interest_expense
2023-08-28 10:54:52+0530 - sLogger - DEBUG - list_target_keywords = ['interest income']
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' Interest on external debt ', 31), (' Interest in finance leases', 31), (' interest expense ', 26), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), (' Interest in finance leases', 56), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense ', 30), (' Interest on external debt ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' Interest in finance leases', 41), (' finance expenses ', 27), (' interest expense ', 25), (' Interest on external debt ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Interest on external debt ', 43), (' interest expense ', 38), (' Interest in finance leases', 38), (' finance expenses ', 34), (' net finance costs ', 22), ('finance cost ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 39), (' Interest on external debt ', 35), (' interest expense ', 34), ('finance cost ', 32), (' finance expenses ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Interest on external debt ', 35), (' Interest in finance leases', 32), (' net finance costs ', 29), (' interest expense ', 26), ('finance cost ', 21), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 32), ('finance cost ', 30), (' finance expenses ', 29), (' Interest on external debt ', 29), (' interest expense ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense ', 74), (' finance expenses ', 56), (' Interest on external debt ', 50), (' Interest in finance leases', 31), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' Interest in finance leases', 39), (' interest expense ', 31), (' Interest on external debt ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense ', 65), (' net finance costs ', 45), (' Interest on external debt ', 44), ('finance cost ', 37), (' Interest in finance leases', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense ', 54), (' net finance costs ', 49), (' finance expenses ', 46), (' Interest on external debt ', 43), ('finance cost ', 42), (' Interest in finance leases', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' interest expense ', 32), (' Interest in finance leases', 32), (' Interest on external debt ', 28), (' net finance costs ', 27), ('finance cost ', 23), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' interest expense ', 32), (' Interest in finance leases', 32), (' Interest on external debt ', 28), (' net finance costs ', 27), ('finance cost ', 23), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Interest on external debt ', 41), (' interest expense ', 35), (' Interest in finance leases', 35), (' net finance costs ', 32), (' finance expenses ', 30), ('finance cost ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('finance cost ', 29), (' net finance costs ', 22), (' Interest on external debt ', 17), (' Interest in finance leases', 17), (' finance expenses ', 12), (' interest expense ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' net finance costs ', 42), (' Interest on external debt ', 41), (' Interest in finance leases', 41), (' interest expense ', 38), ('finance cost ', 33), (' finance expenses ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Interest in finance leases', 41), (' net finance costs ', 38), (' Interest on external debt ', 35), (' interest expense ', 34), ('finance cost ', 27), (' finance expenses ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' net finance costs ', 43), ('finance cost ', 38), (' Interest in finance leases', 35), (' finance expenses ', 32), (' Interest on external debt ', 31), (' interest expense ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' interest expense ', 38), (' Interest in finance leases', 38), (' Interest on external debt ', 35), (' net finance costs ', 34), (' finance expenses ', 29), ('finance cost ', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' interest expense ', 28), (' Interest on external debt ', 24), (' Interest in finance leases', 24), (' finance expenses ', 22), (' net finance costs ', 21), ('finance cost ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest on external debt ', 29), (' Interest in finance leases', 29), (' interest expense ', 28), (' net finance costs ', 26), ('finance cost ', 22), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest on external debt ', 29), (' Interest in finance leases', 29), (' interest expense ', 28), (' net finance costs ', 26), ('finance cost ', 22), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' interest expense ', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), (' Interest in finance leases', 38), ('finance cost ', 32), (' finance expenses ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' net finance costs ', 46), (' finance expenses ', 43), (' interest expense ', 41), (' Interest on external debt ', 41), (' Interest in finance leases', 41), ('finance cost ', 34)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' interest expense ', 33), (' Interest on external debt ', 33), (' Interest in finance leases', 33), (' net finance costs ', 27), ('finance cost ', 25), (' finance expenses ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' interest expense ', 28), (' Interest on external debt ', 24), (' Interest in finance leases', 24), (' finance expenses ', 22), (' net finance costs ', 21), ('finance cost ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' interest expense ', 43), (' Interest in finance leases', 43), (' net finance costs ', 39), (' Interest on external debt ', 36), (' finance expenses ', 33), ('finance cost ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense ', 40), (' Interest in finance leases', 40), (' finance expenses ', 38), ('finance cost ', 35), (' Interest on external debt ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -88616.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.6'], 'line_item_value': [-88616.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses ', ' net finance costs ', ' interest expense ', ' Interest on external debt ', ' Interest in finance leases'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' net finance costs ', 38), ('finance cost ', 33), (' Interest on external debt ', 31), (' Interest in finance leases', 31), (' interest expense ', 26), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' net finance costs ', 59), (' Interest in finance leases', 56), ('finance cost ', 52), (' finance expenses ', 48), (' interest expense ', 30), (' Interest on external debt ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' Interest in finance leases', 45), (' net finance costs ', 38), (' interest expense ', 38), (' Interest on external debt ', 32), ('finance cost ', 27), (' finance expenses ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' Interest in finance leases', 41), (' finance expenses ', 27), (' interest expense ', 25), (' Interest on external debt ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Interest on external debt ', 43), (' interest expense ', 38), (' Interest in finance leases', 38), (' finance expenses ', 34), (' net finance costs ', 22), ('finance cost ', 18)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 39), (' Interest on external debt ', 35), (' interest expense ', 34), ('finance cost ', 32), (' finance expenses ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Interest on external debt ', 35), (' Interest in finance leases', 32), (' net finance costs ', 29), (' interest expense ', 26), ('finance cost ', 21), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 32), ('finance cost ', 30), (' finance expenses ', 29), (' Interest on external debt ', 29), (' interest expense ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' interest expense ', 74), (' finance expenses ', 56), (' Interest on external debt ', 50), (' Interest in finance leases', 31), (' net finance costs ', 22), ('finance cost ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance expenses ', 67), (' Interest in finance leases', 39), (' interest expense ', 31), (' Interest on external debt ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses ', 69), (' interest expense ', 65), (' net finance costs ', 45), (' Interest on external debt ', 44), ('finance cost ', 37), (' Interest in finance leases', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' Interest in finance leases', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), ('finance cost ', 36), (' finance expenses ', 34), (' interest expense ', 32)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' interest expense ', 54), (' net finance costs ', 49), (' finance expenses ', 46), (' Interest on external debt ', 43), ('finance cost ', 42), (' Interest in finance leases', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' interest expense ', 32), (' Interest in finance leases', 32), (' Interest on external debt ', 28), (' net finance costs ', 27), ('finance cost ', 23), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' interest expense ', 32), (' Interest in finance leases', 32), (' Interest on external debt ', 28), (' net finance costs ', 27), ('finance cost ', 23), (' finance expenses ', 22)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Interest on external debt ', 41), (' interest expense ', 35), (' Interest in finance leases', 35), (' net finance costs ', 32), (' finance expenses ', 30), ('finance cost ', 24)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('finance cost ', 29), (' net finance costs ', 22), (' Interest on external debt ', 17), (' Interest in finance leases', 17), (' finance expenses ', 12), (' interest expense ', 11)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' net finance costs ', 42), (' Interest on external debt ', 41), (' Interest in finance leases', 41), (' interest expense ', 38), ('finance cost ', 33), (' finance expenses ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Interest in finance leases', 41), (' net finance costs ', 38), (' Interest on external debt ', 35), (' interest expense ', 34), ('finance cost ', 27), (' finance expenses ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' net finance costs ', 43), ('finance cost ', 38), (' Interest in finance leases', 35), (' finance expenses ', 32), (' Interest on external debt ', 31), (' interest expense ', 26)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' interest expense ', 38), (' Interest in finance leases', 38), (' Interest on external debt ', 35), (' net finance costs ', 34), (' finance expenses ', 29), ('finance cost ', 27)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' interest expense ', 28), (' Interest on external debt ', 24), (' Interest in finance leases', 24), (' finance expenses ', 22), (' net finance costs ', 21), ('finance cost ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest on external debt ', 29), (' Interest in finance leases', 29), (' interest expense ', 28), (' net finance costs ', 26), ('finance cost ', 22), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Interest on external debt ', 29), (' Interest in finance leases', 29), (' interest expense ', 28), (' net finance costs ', 26), ('finance cost ', 22), (' finance expenses ', 21)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' interest expense ', 43), (' net finance costs ', 38), (' Interest on external debt ', 38), (' Interest in finance leases', 38), ('finance cost ', 32), (' finance expenses ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' net finance costs ', 46), (' finance expenses ', 43), (' interest expense ', 41), (' Interest on external debt ', 41), (' Interest in finance leases', 41), ('finance cost ', 34)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' interest expense ', 33), (' Interest on external debt ', 33), (' Interest in finance leases', 33), (' net finance costs ', 27), ('finance cost ', 25), (' finance expenses ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' interest expense ', 28), (' Interest on external debt ', 24), (' Interest in finance leases', 24), (' finance expenses ', 22), (' net finance costs ', 21), ('finance cost ', 16)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' interest expense ', 43), (' Interest in finance leases', 43), (' net finance costs ', 39), (' Interest on external debt ', 36), (' finance expenses ', 33), ('finance cost ', 31)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' net finance costs ', 44), (' interest expense ', 40), (' Interest in finance leases', 40), (' finance expenses ', 38), ('finance cost ', 35), (' Interest on external debt ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [9], 'score': 100, 'value': -112902.0, 'line_item_label': ['Finance costs'], 'note_numbers': ['4.6'], 'line_item_value': [-112902.0]}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest on lease liabilities ', 100), (' Interest accrued on lease liabilities ', 78), (' Interest expenses ', 73), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Unwind of discount on Lease Liability', 67), (' Lease interest expense ', 65), (' interest income ', 64), (' Interest expense on financial liabilities using the effective interest rate method - other ', 60), (' Lease liabilities interest expense ', 56), (' Interest expense from financial liabilities measured at amortised cost ', 53), ('loan ', 50), (' debenture ', 50), (' bank facilities ', 50), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' cash credit ', 55), (' Interest expense from financial liabilities measured at amortised cost ', 55), ('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Unwind of discount on Lease Liability', 48), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on lease liabilities ', 45), (' Other interest expense ', 43), (' interest income ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Lease interest expense ', 55), (' Interest expense from financial liabilities measured at amortised cost ', 55), (' Interest expenses ', 53), (' Other interest expense ', 52), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' cash credit ', 45), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Lease liabilities interest expense ', 45), (' Unwind of discount on Lease Liability', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Interest on lease liabilities ', 40), (' Interest accrued on lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest accrued on loans ', 37), (' interest income ', 36), (' debt ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' interest income ', 43), (' Interest accrued on loans ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Lease liabilities interest expense ', 41), (' interest ', 38), (' Other interest expense ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 36), (' Unwind of discount on decommissioning provision ', 36), (' Unwind of discount on Lease Liability', 36), (' Lease interest expense ', 35), (' Interest on lease liabilities ', 35), (' Interest expenses ', 33), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [(' interest ', 100), (' Interest on leases ', 100), (' Interest on lease liabilities ', 100), (' Interest accrued on lease liabilities ', 78), (' Interest expenses ', 73), (' Interest accrued on loans ', 68), (' Other interest expense ', 67), (' Unwind of discount on Lease Liability', 67), (' Lease interest expense ', 65), (' interest income ', 64), (' Interest expense on financial liabilities using the effective interest rate method - other ', 60), (' Lease liabilities interest expense ', 56), (' Interest expense from financial liabilities measured at amortised cost ', 53), ('loan ', 50), (' debenture ', 50), (' bank facilities ', 50), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 47), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Unwind of discount on decommissioning provision ', 37), (' cash credit ', 36), (' debt ', 25), (' bonds ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Interest on bank overdrafts and loans (other than those from related parties) ', 61), (' cash credit ', 55), (' Interest expense from financial liabilities measured at amortised cost ', 55), ('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Unwind of discount on Lease Liability', 48), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Interest on lease liabilities ', 45), (' Other interest expense ', 43), (' interest income ', 43), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 42), (' Lease liabilities interest expense ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' debt ', 25), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Lease interest expense ', 55), (' Interest expense from financial liabilities measured at amortised cost ', 55), (' Interest expenses ', 53), (' Other interest expense ', 52), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest on leases ', 46), (' cash credit ', 45), (' Discount unwind on the provision for asset retirement obligation ', 45), (' Lease liabilities interest expense ', 45), (' Unwind of discount on Lease Liability', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Unwind of discount on decommissioning provision ', 41), (' Interest on lease liabilities ', 40), (' Interest accrued on lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest accrued on loans ', 37), (' interest income ', 36), (' debt ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' bank facilities ', 50), (' bonds ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' interest income ', 43), (' Interest accrued on loans ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Lease liabilities interest expense ', 41), (' interest ', 38), (' Other interest expense ', 38), (' Interest on leases ', 38), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 36), (' Unwind of discount on decommissioning provision ', 36), (' Unwind of discount on Lease Liability', 36), (' Lease interest expense ', 35), (' Interest on lease liabilities ', 35), (' Interest expenses ', 33), (' debenture ', 25), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 4], 'score': [100, 100], 'value': [2166.0, 2266.0], 'label': ['None Interest on lease liabilities (Note 12)', 'None Interest on lease liabilities (Note 12)'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [('interest income', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [('interest income', 36)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' interest income ', 64), (' cash credit ', 55), (' debt ', 50), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Unwind of discount on Lease Liability', 41), (' bank facilities ', 40), (' Lease interest expense ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest accrued on lease liabilities ', 38), (' Interest accrued on loans ', 37), (' Lease liabilities interest expense ', 37), (' borrowings ', 33), (' Interest expenses ', 33), (' Interest on leases ', 31), ('loan ', 25), (' bonds ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' interest income ', 64), (' cash credit ', 55), (' debt ', 50), (' interest ', 50), (' Interest expenses ', 47), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 46), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense from financial liabilities measured at amortised cost ', 42), (' Lease liabilities interest expense ', 41), (' Unwind of discount on Lease Liability', 41), (' Interest on lease liabilities ', 40), (' debenture ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' borrowings ', 33), (' bank facilities ', 30), ('loan ', 25), (' bonds ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' Interest on lease liabilities ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Lease liabilities interest expense ', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Interest expenses ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Lease interest expense ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 39), (' Interest accrued on lease liabilities ', 38), (' Interest accrued on loans ', 37), (' Unwind of discount on Lease Liability', 37), (' Unwind of discount on decommissioning provision ', 34), (' borrowings ', 33), (' bank facilities ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' interest income ', 64), (' debenture ', 62), (' Interest expenses ', 60), (' Other interest expense ', 52), ('loan ', 50), (' debt ', 50), (' bonds ', 50), (' Lease interest expense ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 49), (' Lease liabilities interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' Interest on leases ', 46), (' cash credit ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Interest accrued on lease liabilities ', 42), (' bank facilities ', 40), (' Interest on lease liabilities ', 40), (' interest ', 38), (' Unwind of discount on Lease Liability', 37), (' borrowings ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' interest income ', 64), (' cash credit ', 55), (' debt ', 50), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest on bank overdrafts and loans (other than those from related parties) ', 41), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Unwind of discount on Lease Liability', 41), (' bank facilities ', 40), (' Lease interest expense ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 39), (' debenture ', 38), (' interest ', 38), (' Interest accrued on lease liabilities ', 38), (' Interest accrued on loans ', 37), (' Lease liabilities interest expense ', 37), (' borrowings ', 33), (' Interest expenses ', 33), (' Interest on leases ', 31), ('loan ', 25), (' bonds ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' interest income ', 64), (' cash credit ', 55), (' debt ', 50), (' interest ', 50), (' Interest expenses ', 47), (' Interest accrued on loans ', 47), (' Interest on leases ', 46), (' Interest accrued on lease liabilities ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 46), (' Lease interest expense ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Other interest expense ', 43), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest expense from financial liabilities measured at amortised cost ', 42), (' Lease liabilities interest expense ', 41), (' Unwind of discount on Lease Liability', 41), (' Interest on lease liabilities ', 40), (' debenture ', 38), (' Interest on bank overdrafts and loans (other than those from related parties) ', 38), (' borrowings ', 33), (' bank facilities ', 30), ('loan ', 25), (' bonds ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('loan ', 50), (' debt ', 50), (' debenture ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on leases ', 46), (' cash credit ', 45), (' Interest on lease liabilities ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Lease liabilities interest expense ', 44), (' Other interest expense ', 43), (' interest income ', 43), (' Interest expense on financial liabilities using the effective interest rate method - other ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Interest expenses ', 40), (' Discount unwind on the provision for asset retirement obligation ', 40), (' Lease interest expense ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 39), (' Interest accrued on lease liabilities ', 38), (' Interest accrued on loans ', 37), (' Unwind of discount on Lease Liability', 37), (' Unwind of discount on decommissioning provision ', 34), (' borrowings ', 33), (' bank facilities ', 30)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' interest income ', 64), (' debenture ', 62), (' Interest expenses ', 60), (' Other interest expense ', 52), ('loan ', 50), (' debt ', 50), (' bonds ', 50), (' Lease interest expense ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 49), (' Lease liabilities interest expense ', 48), (' Interest accrued on loans ', 47), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' Interest on leases ', 46), (' cash credit ', 45), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' Interest on bank overdrafts and loans (other than those from related parties) ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Interest accrued on lease liabilities ', 42), (' bank facilities ', 40), (' Interest on lease liabilities ', 40), (' interest ', 38), (' Unwind of discount on Lease Liability', 37), (' borrowings ', 33)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [('interest income', 43)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:52+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:52+0530 - sLogger - DEBUG - keywords = ['loan ', ' debt ', ' debenture ', ' cash credit ', ' borrowings ', ' bank facilities ', ' bonds ', ' interest ', ' Interest expenses ', ' Discount unwind on the provision for asset retirement obligation ', ' Other interest expense ', ' Interest on leases ', ' Interest on bank overdrafts and loans (other than those from related parties) ', ' Interest accrued on loans ', ' Interest accrued on lease liabilities ', ' Lease interest expense ', ' Interest expense on financial liabilities using the effective interest rate method - other ', ' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', ' Lease liabilities interest expense ', ' interest income ', ' Interest on lease liabilities ', ' Interest expense from financial liabilities measured at amortised cost ', ' Unwind of discount on decommissioning provision ', ' Unwind of discount on Lease Liability'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' interest income ', 71), ('loan ', 50), (' borrowings ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 49), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 46), (' Unwind of discount on decommissioning provision ', 44), (' Unwind of discount on Lease Liability', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' debenture ', 38), (' interest ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 37), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' debt ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' interest income ', 57), ('loan ', 50), (' bonds ', 50), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Lease liabilities interest expense ', 41), (' Interest expense from financial liabilities measured at amortised cost ', 41), (' Interest expenses ', 40), (' Interest on lease liabilities ', 40), (' debenture ', 38), (' interest ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Lease interest expense ', 35), (' borrowings ', 33), (' bank facilities ', 30), (' debt ', 25)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [(' Interest expenses ', 80), (' bonds ', 75), (' Other interest expense ', 67), (' Lease interest expense ', 65), (' interest ', 62), (' Interest on leases ', 54), (' Lease liabilities interest expense ', 52), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' interest income ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 39), (' Unwind of discount on decommissioning provision ', 39), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' bank facilities ', 30), (' borrowings ', 17)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' bonds ', 75), (' Other interest expense ', 71), (' Interest expenses ', 67), (' Lease interest expense ', 60), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), (' Lease liabilities interest expense ', 52), ('loan ', 50), (' debt ', 50), (' interest ', 50), (' interest income ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Unwind of discount on decommissioning provision ', 41), (' debenture ', 38), (' Interest on leases ', 38), (' Interest accrued on loans ', 37), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' Interest on lease liabilities ', 35), (' borrowings ', 33), (' Unwind of discount on Lease Liability', 33), (' bank facilities ', 20)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:52+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' Lease interest expense ', 60), (' Other interest expense ', 57), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Interest accrued on loans ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest on lease liabilities ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 38), (' bonds ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' Lease interest expense ', 60), (' Other interest expense ', 57), (' interest income ', 57), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Unwind of discount on decommissioning provision ', 47), (' cash credit ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest on lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest accrued on loans ', 42), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' bonds ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('loan ', 75), (' Lease interest expense ', 60), (' Other interest expense ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Interest accrued on loans ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest on lease liabilities ', 45), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' interest income ', 64), (' debenture ', 62), (' Interest expenses ', 60), (' Lease interest expense ', 60), (' Other interest expense ', 52), (' Interest expense on financial liabilities using the effective interest rate method - other ', 51), ('loan ', 50), (' debt ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 48), (' Interest on leases ', 46), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 43), (' Interest accrued on lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest on lease liabilities ', 40), (' interest ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' borrowings ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' interest income ', 71), ('loan ', 50), (' borrowings ', 50), (' bonds ', 50), (' Discount unwind on the provision for asset retirement obligation ', 49), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 46), (' Unwind of discount on decommissioning provision ', 44), (' Unwind of discount on Lease Liability', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Interest accrued on lease liabilities ', 42), (' bank facilities ', 40), (' Interest expenses ', 40), (' Lease interest expense ', 40), (' Interest expense on financial liabilities using the effective interest rate method - other ', 40), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 40), (' debenture ', 38), (' interest ', 38), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 37), (' Lease liabilities interest expense ', 37), (' cash credit ', 36), (' debt ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' interest income ', 57), ('loan ', 50), (' bonds ', 50), (' Interest on leases ', 46), (' Interest on bank overdrafts and loans (other than those from related parties) ', 46), (' Interest expense on financial liabilities using the effective interest rate method - other ', 44), (' Other interest expense ', 43), (' Interest accrued on loans ', 42), (' Discount unwind on the provision for asset retirement obligation ', 41), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 41), (' Lease liabilities interest expense ', 41), (' Interest expense from financial liabilities measured at amortised cost ', 41), (' Interest expenses ', 40), (' Interest on lease liabilities ', 40), (' debenture ', 38), (' interest ', 38), (' Interest accrued on lease liabilities ', 38), (' Unwind of discount on decommissioning provision ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Lease interest expense ', 35), (' borrowings ', 33), (' bank facilities ', 30), (' debt ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [(' Interest expenses ', 80), (' bonds ', 75), (' Other interest expense ', 67), (' Lease interest expense ', 65), (' interest ', 62), (' Interest on leases ', 54), (' Lease liabilities interest expense ', 52), ('loan ', 50), (' debt ', 50), (' debenture ', 50), (' interest income ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 42), (' Interest on bank overdrafts and loans (other than those from related parties) ', 42), (' Interest accrued on loans ', 42), (' Interest on lease liabilities ', 40), (' Interest expense from financial liabilities measured at amortised cost ', 39), (' Unwind of discount on decommissioning provision ', 39), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' bank facilities ', 30), (' borrowings ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' bonds ', 75), (' Other interest expense ', 71), (' Interest expenses ', 67), (' Lease interest expense ', 60), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), (' Lease liabilities interest expense ', 52), ('loan ', 50), (' debt ', 50), (' interest ', 50), (' interest income ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 48), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 48), (' Interest expense from financial liabilities measured at amortised cost ', 48), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Unwind of discount on decommissioning provision ', 41), (' debenture ', 38), (' Interest on leases ', 38), (' Interest accrued on loans ', 37), (' cash credit ', 36), (' Interest accrued on lease liabilities ', 35), (' Interest on lease liabilities ', 35), (' borrowings ', 33), (' Unwind of discount on Lease Liability', 33), (' bank facilities ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' Lease interest expense ', 60), (' Other interest expense ', 57), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), (' Interest on bank overdrafts and loans (other than those from related parties) ', 52), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Interest accrued on loans ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest on lease liabilities ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 43), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 38), (' bonds ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' Lease interest expense ', 60), (' Other interest expense ', 57), (' interest income ', 57), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), ('loan ', 50), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' interest ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' Interest expense on financial liabilities using the effective interest rate method - other ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Unwind of discount on decommissioning provision ', 47), (' cash credit ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest on lease liabilities ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest accrued on loans ', 42), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' bonds ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('loan ', 75), (' Lease interest expense ', 60), (' Other interest expense ', 57), (' Interest expense on financial liabilities using the effective interest rate method - other ', 56), (' Lease liabilities interest expense ', 56), (' Interest on leases ', 54), (' Interest accrued on lease liabilities ', 54), (' Interest expenses ', 53), (' debt ', 50), (' borrowings ', 50), (' bank facilities ', 50), (' bonds ', 50), (' interest ', 50), (' Interest on bank overdrafts and loans (other than those from related parties) ', 50), (' interest income ', 50), (' Interest expense from financial liabilities measured at amortised cost ', 49), (' Interest accrued on loans ', 47), (' Discount unwind on the provision for asset retirement obligation ', 46), (' cash credit ', 45), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 45), (' Interest on lease liabilities ', 45), (' Unwind of discount on Lease Liability', 41), (' debenture ', 38), (' Unwind of discount on decommissioning provision ', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' interest income ', 64), (' debenture ', 62), (' Interest expenses ', 60), (' Lease interest expense ', 60), (' Other interest expense ', 52), (' Interest expense on financial liabilities using the effective interest rate method - other ', 51), ('loan ', 50), (' debt ', 50), (' bonds ', 50), (' Lease liabilities interest expense ', 48), (' Interest on leases ', 46), (' Interest expense from financial liabilities measured at amortised cost ', 45), (' Discount unwind on the provision for asset retirement obligation ', 44), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 44), (' Unwind of discount on decommissioning provision ', 44), (' Interest on bank overdrafts and loans (other than those from related parties) ', 43), (' Interest accrued on lease liabilities ', 43), (' Interest accrued on loans ', 42), (' bank facilities ', 40), (' Interest on lease liabilities ', 40), (' interest ', 38), (' Unwind of discount on Lease Liability', 37), (' cash credit ', 36), (' borrowings ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('loan ', 0), (' debt ', 0), (' debenture ', 0), (' cash credit ', 0), (' borrowings ', 0), (' bank facilities ', 0), (' bonds ', 0), (' interest ', 0), (' Interest expenses ', 0), (' Discount unwind on the provision for asset retirement obligation ', 0), (' Other interest expense ', 0), (' Interest on leases ', 0), (' Interest on bank overdrafts and loans (other than those from related parties) ', 0), (' Interest accrued on loans ', 0), (' Interest accrued on lease liabilities ', 0), (' Lease interest expense ', 0), (' Interest expense on financial liabilities using the effective interest rate method - other ', 0), (' Interest expense using the effective interest rate method - AASB 16 application lease liabilities ', 0), (' Lease liabilities interest expense ', 0), (' interest income ', 0), (' Interest on lease liabilities ', 0), (' Interest expense from financial liabilities measured at amortised cost ', 0), (' Unwind of discount on decommissioning provision ', 0), (' Unwind of discount on Lease Liability', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 10], 'score': [80, 80], 'value': [6.0, 17.0], 'label': ['None Non-deductible entertainment expense', 'None Non-deductible entertainment expense'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['interest income'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('interest income', 71)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('interest income', 57)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('interest income', 57)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [('interest income', 71)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('interest income', 57)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [('interest income', 57)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [('interest income', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [('interest income', 64)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('interest income', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:53+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax ']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = noie_oi_or_exp
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories ', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories ', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' expenses ', 43), (' interest revenue ', 43), (' Impairement (expenses)/reversal ', 43), (' other income and revenue ', 41), (' Share of gain/(loss) of joint venture ', 40), (' Loss on revaluation of inventories ', 37), (' Impairment loss ', 36), (' share of profit of equity accounted investees ', 35), (' finance expenses', 34), (' net of tax ', 34), (' net of tax ', 34), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of profit of equity-accounted investees, net of income tax ', 31), (' other opertaing income ', 30), (' other income ', 24), (' finance income and finance cost ', 24), (' Other income ', 24), (' Finance income and finance costs ', 24), (' finance income and costs ', 23), (' Finance income and costs ', 23), (' net finance costs ', 22), ('finance cost ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' interest revenue ', 44), (' interest gains and losses ', 42), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), (' expenses ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 38), (' finance income and finance cost ', 37), (' Finance income and finance costs ', 37), (' other opertaing income ', 36), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 34), ('finance cost ', 32), (' finance expenses', 31), (' Loss on revaluation of inventories ', 30), (' other gains/losses ', 29), (' other income ', 27), (' Other income ', 27), (' Impairment loss ', 27), (' net of tax ', 24), (' net of tax ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' interest gains and losses ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' Impairement (expenses)/reversal ', 40), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Share of profit of equity-accounted investees, net of income tax ', 39), (' share of profit of equity accounted investees ', 38), (' finance income and costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories ', 37), (' other gains/losses ', 34), (' Profit from discontinued operation ', 34), (' Impairment loss ', 33), (' interest revenue ', 31), (' other opertaing income ', 30), (' net finance costs ', 29), (' other income ', 24), (' Other income ', 24), ('finance cost ', 21), (' finance expenses', 21), (' net of tax ', 19), (' net of tax ', 19), (' expenses ', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Impairment loss ', 55), (' interest gains and losses ', 50), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' Impairement (expenses)/reversal ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' Profit from discontinued operation ', 37), (' Share of gain/(loss) of joint venture ', 36), (' other opertaing income ', 35), (' Loss on revaluation of inventories ', 33), (' net finance costs ', 32), (' share of profit of equity accounted investees ', 32), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' finance expenses', 29), (' other gains/losses ', 27), (' interest revenue ', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories ', 30), (' interest gains and losses ', 29), (' Share of profit of equity-accounted investees, net of income tax ', 27), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of profit of equity-accounted investees, net of income tax ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories ', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories ', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 38), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' share of profit of equity accounted investees ', 53), (' other income and revenue ', 50), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' net of tax ', 41), (' net of tax ', 41), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' net finance costs ', 38), (' other gains/losses ', 38), (' finance income and costs ', 37), (' Finance income and costs ', 37), ('finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories ', 33), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories ', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 48), (' other income and revenue ', 44), (' Profit from discontinued operation ', 44), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' other gains/losses ', 35), (' Impairement (expenses)/reversal ', 35), (' interest gains and losses ', 34), (' interest revenue ', 32), (' Loss on revaluation of inventories ', 32), (' other income ', 31), (' Other income ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' Impairment loss ', 25), ('finance cost ', 23), (' finance expenses', 22), (' net of tax ', 15), (' net of tax ', 15), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 48), (' other income and revenue ', 44), (' Profit from discontinued operation ', 44), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' other gains/losses ', 35), (' Impairement (expenses)/reversal ', 35), (' interest gains and losses ', 34), (' interest revenue ', 32), (' Loss on revaluation of inventories ', 32), (' other income ', 31), (' Other income ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' Impairment loss ', 25), ('finance cost ', 23), (' finance expenses', 22), (' net of tax ', 15), (' net of tax ', 15), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Profit from discontinued operation ', 45), (' other income and revenue ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' other opertaing income ', 39), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Impairement (expenses)/reversal ', 35), (' Loss on revaluation of inventories ', 35), (' share of profit of equity accounted investees ', 34), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net finance costs ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 30), (' other gains/losses ', 29), (' interest revenue ', 29), ('finance cost ', 24), (' expenses ', 22), (' Impairment loss ', 20), (' net of tax ', 18), (' net of tax ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' net of tax ', 60), (' net of tax ', 60), ('finance cost ', 29), (' net finance costs ', 22), (' expenses ', 22), (' other opertaing income ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), (' Loss on revaluation of inventories ', 17), (' other income ', 14), (' Other income ', 14), (' Impairment loss ', 14), (' finance income and finance cost ', 13), (' Share of gain/(loss) of joint venture ', 13), (' Finance income and finance costs ', 13), (' finance expenses', 12), (' Share of profit of equity-accounted investees, net of income tax ', 12), (' other gains/losses ', 11), (' share of profit of equity accounted investees ', 11), (' interest revenue ', 11), (' Impairement (expenses)/reversal ', 9), (' interest gains and losses ', 8), (' other income and revenue ', 8), (' Profit from discontinued operation ', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' other opertaing income ', 54), (' other income and revenue ', 47), (' Profit from discontinued operation ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 44), (' net finance costs ', 42), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 41), (' Finance income and costs ', 41), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' interest gains and losses ', 37), (' Other income ', 37), (' Loss on revaluation of inventories ', 37), (' finance income and finance cost ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), ('finance cost ', 33), (' finance expenses', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 24), (' expenses ', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 54), (' interest gains and losses ', 39), (' other income and revenue ', 39), (' net finance costs ', 38), (' other opertaing income ', 36), (' finance income and finance cost ', 36), (' share of profit of equity accounted investees ', 36), (' Finance income and finance costs ', 36), (' Impairement (expenses)/reversal ', 35), (' finance income and costs ', 34), (' Share of gain/(loss) of joint venture ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories ', 34), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income ', 30), (' Other income ', 30), (' other gains/losses ', 28), ('finance cost ', 27), (' finance expenses', 26), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 20), (' expenses ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' finance income and costs ', 46), (' Finance income and costs ', 46), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' net finance costs ', 43), (' Share of gain/(loss) of joint venture ', 41), ('finance cost ', 38), (' other income and revenue ', 38), (' Profit from discontinued operation ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' other opertaing income ', 33), (' other income ', 33), (' share of profit of equity accounted investees ', 33), (' Other income ', 33), (' finance expenses', 32), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories ', 31), (' other gains/losses ', 30), (' interest gains and losses ', 30), (' interest revenue ', 26), (' Impairement (expenses)/reversal ', 24), (' Impairment loss ', 19), (' expenses ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 54), (' share of profit of equity accounted investees ', 48), (' Profit from discontinued operation ', 47), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 41), (' interest gains and losses ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' Other income ', 37), (' net finance costs ', 34), (' Loss on revaluation of inventories ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 29), (' interest revenue ', 28), ('finance cost ', 27), (' Impairment loss ', 27), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Loss on revaluation of inventories ', 46), (' Impairment loss ', 40), (' other gains/losses ', 34), (' interest revenue ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income ', 32), (' Other income ', 32), (' other opertaing income ', 31), (' expenses ', 30), (' Impairement (expenses)/reversal ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' share of profit of equity accounted investees ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' finance expenses', 22), (' net finance costs ', 21), (' Profit from discontinued operation ', 20), (' net of tax ', 19), (' net of tax ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), ('finance cost ', 16), (' finance income and finance cost ', 14), (' Finance income and finance costs ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 40), (' Profit from discontinued operation ', 38), (' share of profit of equity accounted investees ', 37), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 33), (' other gains/losses ', 31), (' interest gains and losses ', 31), (' Loss on revaluation of inventories ', 31), (' other opertaing income ', 30), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' net finance costs ', 26), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' other income ', 24), (' finance income and costs ', 24), (' Other income ', 24), (' Finance income and costs ', 24), ('finance cost ', 22), (' Impairment loss ', 22), (' finance expenses', 21), (' net of tax ', 14), (' net of tax ', 14), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 40), (' Profit from discontinued operation ', 38), (' share of profit of equity accounted investees ', 37), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 33), (' other gains/losses ', 31), (' interest gains and losses ', 31), (' Loss on revaluation of inventories ', 31), (' other opertaing income ', 30), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' net finance costs ', 26), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' other income ', 24), (' finance income and costs ', 24), (' Other income ', 24), (' Finance income and costs ', 24), ('finance cost ', 22), (' Impairment loss ', 22), (' finance expenses', 21), (' net of tax ', 14), (' net of tax ', 14), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' other gains/losses ', 52), (' Loss on revaluation of inventories ', 50), (' Share of gain/(loss) of joint venture ', 47), (' Impairement (expenses)/reversal ', 43), (' share of profit of equity accounted investees ', 42), (' net finance costs ', 38), (' interest revenue ', 38), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' other opertaing income ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), ('finance cost ', 32), (' other income ', 32), (' Other income ', 32), (' finance expenses', 30), (' expenses ', 24), (' net of tax ', 12), (' net of tax ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' other opertaing income ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 47), (' net finance costs ', 46), (' other income ', 46), (' Other income ', 46), (' finance expenses', 43), (' Profit from discontinued operation ', 43), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' other income and revenue ', 39), (' net of tax ', 39), (' net of tax ', 39), (' finance income and finance cost ', 38), (' Finance income and finance costs ', 38), (' Impairement (expenses)/reversal ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' expenses ', 33), (' other gains/losses ', 31), (' interest revenue ', 31), (' Share of gain/(loss) of joint venture ', 31), (' interest gains and losses ', 30), (' Impairment loss ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' share of profit of equity accounted investees ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' Profit from discontinued operation ', 43), (' other opertaing income ', 37), (' other gains/losses ', 36), (' interest gains and losses ', 35), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Loss on revaluation of inventories ', 33), (' Impairement (expenses)/reversal ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' other income ', 29), (' Other income ', 29), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), ('finance cost ', 25), (' finance expenses', 25), (' Impairment loss ', 25), (' interest revenue ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Loss on revaluation of inventories ', 46), (' Impairment loss ', 40), (' other gains/losses ', 34), (' interest revenue ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income ', 32), (' Other income ', 32), (' other opertaing income ', 31), (' expenses ', 30), (' Impairement (expenses)/reversal ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' share of profit of equity accounted investees ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' finance expenses', 22), (' net finance costs ', 21), (' Profit from discontinued operation ', 20), (' net of tax ', 19), (' net of tax ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), ('finance cost ', 16), (' finance income and finance cost ', 14), (' Finance income and finance costs ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' other opertaing income ', 51), (' other income and revenue ', 51), (' Share of profit of equity-accounted investees, net of income tax ', 45), (' Profit from discontinued operation ', 44), (' other income ', 42), (' share of profit of equity accounted investees ', 42), (' Other income ', 42), (' net finance costs ', 39), (' Impairement (expenses)/reversal ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 35), (' interest gains and losses ', 35), (' Finance income and costs ', 35), (' Loss on revaluation of inventories ', 35), (' finance expenses', 33), (' other gains/losses ', 32), (' finance income and finance cost ', 32), (' interest revenue ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 23), (' expenses ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': -86308.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['4.3', '4.6'], 'line_item_value': [2308.0, -88616.0]}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['finance cost ', ' finance expenses', ' net finance costs ', ' other opertaing income ', ' other income ', ' expenses ', ' other gains/losses ', ' finance income and finance cost ', ' share of profit of equity accounted investees ', ' finance income and costs ', ' interest revenue ', ' interest gains and losses ', ' other income and revenue ', ' Other income ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Impairement (expenses)/reversal ', ' Finance income and finance costs ', ' Profit from discontinued operation ', ' net of tax ', ' Finance income and costs ', ' Loss on revaluation of inventories ', ' Share of profit of equity-accounted investees, net of income tax '] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' other income and revenue ', 52), (' interest revenue ', 51), (' Profit from discontinued operation ', 51), (' share of profit of equity accounted investees ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 42), (' other opertaing income ', 40), (' Share of gain/(loss) of joint venture ', 40), (' net finance costs ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Loss on revaluation of inventories ', 38), (' other income ', 37), (' finance income and finance cost ', 37), (' Other income ', 37), (' Finance income and finance costs ', 37), (' Impairement (expenses)/reversal ', 35), ('finance cost ', 33), (' other gains/losses ', 30), (' interest gains and losses ', 26), (' finance expenses', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 16), (' Impairment loss ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' finance income and costs ', 73), (' Finance income and costs ', 73), (' finance income and finance cost ', 60), (' Finance income and finance costs ', 60), (' net finance costs ', 59), ('finance cost ', 52), (' finance expenses', 48), (' other income and revenue ', 47), (' other income ', 43), (' Other income ', 43), (' interest gains and losses ', 41), (' Impairment loss ', 35), (' other opertaing income ', 33), (' Profit from discontinued operation ', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' Share of gain/(loss) of joint venture ', 30), (' Loss on revaluation of inventories ', 30), (' Share of profit of equity-accounted investees, net of income tax ', 30), (' share of profit of equity accounted investees ', 26), (' Impairement (expenses)/reversal ', 25), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' other income ', 100), (' Other income ', 100), (' other opertaing income ', 76), (' other gains/losses ', 69), (' other income and revenue ', 67), (' Profit from discontinued operation ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 38), (' interest revenue ', 38), (' Loss on revaluation of inventories ', 38), (' interest gains and losses ', 36), (' Impairment loss ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 34), (' net of tax ', 33), (' net of tax ', 33), (' Impairement (expenses)/reversal ', 32), (' finance income and costs ', 31), (' Finance income and costs ', 31), (' share of profit of equity accounted investees ', 30), ('finance cost ', 27), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' finance expenses', 25), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('finance cost ', 60), (' net finance costs ', 58), (' other income ', 40), (' finance income and costs ', 40), (' Other income ', 40), (' Finance income and costs ', 40), (' net of tax ', 38), (' net of tax ', 38), (' other opertaing income ', 37), (' share of profit of equity accounted investees ', 36), (' other gains/losses ', 33), (' interest revenue ', 33), (' Loss on revaluation of inventories ', 33), (' finance income and finance cost ', 32), (' other income and revenue ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Finance income and finance costs ', 32), (' Impairment loss ', 30), (' Impairement (expenses)/reversal ', 28), (' Profit from discontinued operation ', 28), (' Share of profit of equity-accounted investees, net of income tax ', 28), (' finance expenses', 27), (' interest gains and losses ', 26), (' expenses ', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' expenses ', 43), (' interest revenue ', 43), (' Impairement (expenses)/reversal ', 43), (' other income and revenue ', 41), (' Share of gain/(loss) of joint venture ', 40), (' Loss on revaluation of inventories ', 37), (' Impairment loss ', 36), (' share of profit of equity accounted investees ', 35), (' finance expenses', 34), (' net of tax ', 34), (' net of tax ', 34), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of profit of equity-accounted investees, net of income tax ', 31), (' other opertaing income ', 30), (' other income ', 24), (' finance income and finance cost ', 24), (' Other income ', 24), (' Finance income and finance costs ', 24), (' finance income and costs ', 23), (' Finance income and costs ', 23), (' net finance costs ', 22), ('finance cost ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' interest revenue ', 44), (' interest gains and losses ', 42), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' net finance costs ', 39), (' share of profit of equity accounted investees ', 39), (' expenses ', 38), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 38), (' finance income and finance cost ', 37), (' Finance income and finance costs ', 37), (' other opertaing income ', 36), (' Impairement (expenses)/reversal ', 35), (' Profit from discontinued operation ', 34), ('finance cost ', 32), (' finance expenses', 31), (' Loss on revaluation of inventories ', 30), (' other gains/losses ', 29), (' other income ', 27), (' Other income ', 27), (' Impairment loss ', 27), (' net of tax ', 24), (' net of tax ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' interest gains and losses ', 44), (' other income and revenue ', 42), (' Share of gain/(loss) of joint venture ', 41), (' Impairement (expenses)/reversal ', 40), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' Share of profit of equity-accounted investees, net of income tax ', 39), (' share of profit of equity accounted investees ', 38), (' finance income and costs ', 37), (' Finance income and costs ', 37), (' Loss on revaluation of inventories ', 37), (' other gains/losses ', 34), (' Profit from discontinued operation ', 34), (' Impairment loss ', 33), (' interest revenue ', 31), (' other opertaing income ', 30), (' net finance costs ', 29), (' other income ', 24), (' Other income ', 24), ('finance cost ', 21), (' finance expenses', 21), (' net of tax ', 19), (' net of tax ', 19), (' expenses ', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Impairment loss ', 55), (' interest gains and losses ', 50), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' Impairement (expenses)/reversal ', 43), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' other income and revenue ', 41), (' Profit from discontinued operation ', 37), (' Share of gain/(loss) of joint venture ', 36), (' other opertaing income ', 35), (' Loss on revaluation of inventories ', 33), (' net finance costs ', 32), (' share of profit of equity accounted investees ', 32), (' Share of profit of equity-accounted investees, net of income tax ', 31), ('finance cost ', 30), (' other income ', 30), (' Other income ', 30), (' finance expenses', 29), (' other gains/losses ', 27), (' interest revenue ', 22), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' expenses ', 67), (' other income ', 61), (' Other income ', 61), (' other gains/losses ', 59), (' finance expenses', 56), (' Impairement (expenses)/reversal ', 56), (' other opertaing income ', 53), (' other income and revenue ', 41), (' interest revenue ', 37), (' Share of gain/(loss) of joint venture ', 35), (' share of profit of equity accounted investees ', 34), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories ', 30), (' interest gains and losses ', 29), (' Share of profit of equity-accounted investees, net of income tax ', 27), (' Impairment loss ', 26), (' Profit from discontinued operation ', 26), (' finance income and costs ', 24), (' Finance income and costs ', 24), (' net finance costs ', 22), (' finance income and finance cost ', 20), (' Finance income and finance costs ', 20), ('finance cost ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('finance cost ', 100), (' net finance costs ', 85), (' finance income and costs ', 69), (' Finance income and costs ', 69), (' finance expenses', 67), (' finance income and finance cost ', 56), (' Finance income and finance costs ', 56), (' share of profit of equity accounted investees ', 35), (' net of tax ', 33), (' net of tax ', 33), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income and revenue ', 30), (' other opertaing income ', 28), (' other income ', 27), (' Other income ', 27), (' Share of profit of equity-accounted investees, net of income tax ', 27), (' Share of gain/(loss) of joint venture ', 26), (' Impairement (expenses)/reversal ', 26), (' Loss on revaluation of inventories ', 25), (' interest gains and losses ', 24), (' other gains/losses ', 23), (' Impairment loss ', 18), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' share of profit of equity accounted investees ', 46), (' other income and revenue ', 45), (' net of tax ', 41), (' net of tax ', 41), (' net finance costs ', 38), (' Loss on revaluation of inventories ', 37), ('finance cost ', 36), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' finance expenses', 34), (' finance income and costs ', 33), (' Impairement (expenses)/reversal ', 33), (' Finance income and costs ', 33), (' other gains/losses ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' finance expenses', 69), (' Impairement (expenses)/reversal ', 56), (' expenses ', 55), (' other income ', 52), (' Other income ', 52), (' other opertaing income ', 47), (' other income and revenue ', 47), (' net finance costs ', 45), (' finance income and costs ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Finance income and costs ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 38), ('finance cost ', 37), (' finance income and finance cost ', 36), (' Finance income and finance costs ', 36), (' Profit from discontinued operation ', 33), (' other gains/losses ', 32), (' interest revenue ', 32), (' interest gains and losses ', 32), (' Share of gain/(loss) of joint venture ', 32), (' Loss on revaluation of inventories ', 32), (' share of profit of equity accounted investees ', 27), (' Impairment loss ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' other opertaing income ', 55), (' Share of profit of equity-accounted investees, net of income tax ', 54), (' share of profit of equity accounted investees ', 53), (' other income and revenue ', 50), (' Profit from discontinued operation ', 49), (' other income ', 48), (' Other income ', 48), (' net of tax ', 41), (' net of tax ', 41), (' finance income and finance cost ', 40), (' Finance income and finance costs ', 40), (' net finance costs ', 38), (' other gains/losses ', 38), (' finance income and costs ', 37), (' Finance income and costs ', 37), ('finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' finance expenses', 34), (' Impairement (expenses)/reversal ', 33), (' Loss on revaluation of inventories ', 33), (' Impairment loss ', 30), (' interest revenue ', 27), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' other income ', 67), (' Other income ', 67), (' other income and revenue ', 59), (' other opertaing income ', 55), (' net finance costs ', 49), (' other gains/losses ', 49), (' Impairement (expenses)/reversal ', 48), (' finance expenses', 46), (' Profit from discontinued operation ', 45), ('finance cost ', 42), (' finance income and costs ', 42), (' Finance income and costs ', 42), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' share of profit of equity accounted investees ', 39), (' finance income and finance cost ', 36), (' interest gains and losses ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), (' Impairment loss ', 30), (' expenses ', 29), (' Loss on revaluation of inventories ', 28), (' interest revenue ', 27), (' net of tax ', 21), (' net of tax ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 48), (' other income and revenue ', 44), (' Profit from discontinued operation ', 44), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' other gains/losses ', 35), (' Impairement (expenses)/reversal ', 35), (' interest gains and losses ', 34), (' interest revenue ', 32), (' Loss on revaluation of inventories ', 32), (' other income ', 31), (' Other income ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' Impairment loss ', 25), ('finance cost ', 23), (' finance expenses', 22), (' net of tax ', 15), (' net of tax ', 15), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 48), (' other income and revenue ', 44), (' Profit from discontinued operation ', 44), (' share of profit of equity accounted investees ', 40), (' other opertaing income ', 36), (' Share of gain/(loss) of joint venture ', 36), (' other gains/losses ', 35), (' Impairement (expenses)/reversal ', 35), (' interest gains and losses ', 34), (' interest revenue ', 32), (' Loss on revaluation of inventories ', 32), (' other income ', 31), (' Other income ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), (' Impairment loss ', 25), ('finance cost ', 23), (' finance expenses', 22), (' net of tax ', 15), (' net of tax ', 15), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Profit from discontinued operation ', 45), (' other income and revenue ', 43), (' Share of profit of equity-accounted investees, net of income tax ', 40), (' other opertaing income ', 39), (' finance income and finance cost ', 39), (' Finance income and finance costs ', 39), (' finance income and costs ', 38), (' Finance income and costs ', 38), (' Impairement (expenses)/reversal ', 35), (' Loss on revaluation of inventories ', 35), (' share of profit of equity accounted investees ', 34), (' interest gains and losses ', 34), (' Share of gain/(loss) of joint venture ', 34), (' net finance costs ', 32), (' other income ', 31), (' Other income ', 31), (' finance expenses', 30), (' other gains/losses ', 29), (' interest revenue ', 29), ('finance cost ', 24), (' expenses ', 22), (' Impairment loss ', 20), (' net of tax ', 18), (' net of tax ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [(' net of tax ', 60), (' net of tax ', 60), ('finance cost ', 29), (' net finance costs ', 22), (' expenses ', 22), (' other opertaing income ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), (' Loss on revaluation of inventories ', 17), (' other income ', 14), (' Other income ', 14), (' Impairment loss ', 14), (' finance income and finance cost ', 13), (' Share of gain/(loss) of joint venture ', 13), (' Finance income and finance costs ', 13), (' finance expenses', 12), (' Share of profit of equity-accounted investees, net of income tax ', 12), (' other gains/losses ', 11), (' share of profit of equity accounted investees ', 11), (' interest revenue ', 11), (' Impairement (expenses)/reversal ', 9), (' interest gains and losses ', 8), (' other income and revenue ', 8), (' Profit from discontinued operation ', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' other opertaing income ', 54), (' other income and revenue ', 47), (' Profit from discontinued operation ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 44), (' net finance costs ', 42), (' share of profit of equity accounted investees ', 41), (' finance income and costs ', 41), (' Finance income and costs ', 41), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' interest gains and losses ', 37), (' Other income ', 37), (' Loss on revaluation of inventories ', 37), (' finance income and finance cost ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Finance income and finance costs ', 36), ('finance cost ', 33), (' finance expenses', 31), (' other gains/losses ', 30), (' interest revenue ', 30), (' net of tax ', 27), (' net of tax ', 27), (' Impairment loss ', 24), (' expenses ', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 54), (' interest gains and losses ', 39), (' other income and revenue ', 39), (' net finance costs ', 38), (' other opertaing income ', 36), (' finance income and finance cost ', 36), (' share of profit of equity accounted investees ', 36), (' Finance income and finance costs ', 36), (' Impairement (expenses)/reversal ', 35), (' finance income and costs ', 34), (' Share of gain/(loss) of joint venture ', 34), (' Finance income and costs ', 34), (' Loss on revaluation of inventories ', 34), (' Profit from discontinued operation ', 32), (' interest revenue ', 31), (' other income ', 30), (' Other income ', 30), (' other gains/losses ', 28), ('finance cost ', 27), (' finance expenses', 26), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 20), (' expenses ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' finance income and costs ', 46), (' Finance income and costs ', 46), (' finance income and finance cost ', 44), (' Finance income and finance costs ', 44), (' net finance costs ', 43), (' Share of gain/(loss) of joint venture ', 41), ('finance cost ', 38), (' other income and revenue ', 38), (' Profit from discontinued operation ', 38), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' other opertaing income ', 33), (' other income ', 33), (' share of profit of equity accounted investees ', 33), (' Other income ', 33), (' finance expenses', 32), (' net of tax ', 32), (' net of tax ', 32), (' Loss on revaluation of inventories ', 31), (' other gains/losses ', 30), (' interest gains and losses ', 30), (' interest revenue ', 26), (' Impairement (expenses)/reversal ', 24), (' Impairment loss ', 19), (' expenses ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 54), (' share of profit of equity accounted investees ', 48), (' Profit from discontinued operation ', 47), (' other opertaing income ', 45), (' other income and revenue ', 45), (' other gains/losses ', 41), (' interest gains and losses ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Impairement (expenses)/reversal ', 38), (' other income ', 37), (' Other income ', 37), (' net finance costs ', 34), (' Loss on revaluation of inventories ', 34), (' finance income and finance cost ', 31), (' finance income and costs ', 31), (' Finance income and finance costs ', 31), (' Finance income and costs ', 31), (' finance expenses', 29), (' interest revenue ', 28), ('finance cost ', 27), (' Impairment loss ', 27), (' net of tax ', 21), (' net of tax ', 21), (' expenses ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Loss on revaluation of inventories ', 46), (' Impairment loss ', 40), (' other gains/losses ', 34), (' interest revenue ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income ', 32), (' Other income ', 32), (' other opertaing income ', 31), (' expenses ', 30), (' Impairement (expenses)/reversal ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' share of profit of equity accounted investees ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' finance expenses', 22), (' net finance costs ', 21), (' Profit from discontinued operation ', 20), (' net of tax ', 19), (' net of tax ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), ('finance cost ', 16), (' finance income and finance cost ', 14), (' Finance income and finance costs ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 40), (' Profit from discontinued operation ', 38), (' share of profit of equity accounted investees ', 37), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 33), (' other gains/losses ', 31), (' interest gains and losses ', 31), (' Loss on revaluation of inventories ', 31), (' other opertaing income ', 30), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' net finance costs ', 26), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' other income ', 24), (' finance income and costs ', 24), (' Other income ', 24), (' Finance income and costs ', 24), ('finance cost ', 22), (' Impairment loss ', 22), (' finance expenses', 21), (' net of tax ', 14), (' net of tax ', 14), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Share of profit of equity-accounted investees, net of income tax ', 40), (' Profit from discontinued operation ', 38), (' share of profit of equity accounted investees ', 37), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 33), (' other gains/losses ', 31), (' interest gains and losses ', 31), (' Loss on revaluation of inventories ', 31), (' other opertaing income ', 30), (' Impairement (expenses)/reversal ', 29), (' interest revenue ', 28), (' net finance costs ', 26), (' finance income and finance cost ', 26), (' Finance income and finance costs ', 26), (' other income ', 24), (' finance income and costs ', 24), (' Other income ', 24), (' Finance income and costs ', 24), ('finance cost ', 22), (' Impairment loss ', 22), (' finance expenses', 21), (' net of tax ', 14), (' net of tax ', 14), (' expenses ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' other gains/losses ', 52), (' Loss on revaluation of inventories ', 50), (' Share of gain/(loss) of joint venture ', 47), (' Impairement (expenses)/reversal ', 43), (' share of profit of equity accounted investees ', 42), (' net finance costs ', 38), (' interest revenue ', 38), (' interest gains and losses ', 37), (' other income and revenue ', 37), (' Impairment loss ', 37), (' Profit from discontinued operation ', 37), (' other opertaing income ', 36), (' Share of profit of equity-accounted investees, net of income tax ', 35), (' finance income and finance cost ', 33), (' finance income and costs ', 33), (' Finance income and finance costs ', 33), (' Finance income and costs ', 33), ('finance cost ', 32), (' other income ', 32), (' Other income ', 32), (' finance expenses', 30), (' expenses ', 24), (' net of tax ', 12), (' net of tax ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' other opertaing income ', 48), (' Share of profit of equity-accounted investees, net of income tax ', 47), (' net finance costs ', 46), (' other income ', 46), (' Other income ', 46), (' finance expenses', 43), (' Profit from discontinued operation ', 43), (' finance income and costs ', 40), (' Finance income and costs ', 40), (' other income and revenue ', 39), (' net of tax ', 39), (' net of tax ', 39), (' finance income and finance cost ', 38), (' Finance income and finance costs ', 38), (' Impairement (expenses)/reversal ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 34), (' share of profit of equity accounted investees ', 34), (' expenses ', 33), (' other gains/losses ', 31), (' interest revenue ', 31), (' Share of gain/(loss) of joint venture ', 31), (' interest gains and losses ', 30), (' Impairment loss ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' share of profit of equity accounted investees ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' Profit from discontinued operation ', 43), (' other opertaing income ', 37), (' other gains/losses ', 36), (' interest gains and losses ', 35), (' other income and revenue ', 35), (' Share of gain/(loss) of joint venture ', 35), (' Loss on revaluation of inventories ', 33), (' Impairement (expenses)/reversal ', 31), (' finance income and finance cost ', 30), (' Finance income and finance costs ', 30), (' other income ', 29), (' Other income ', 29), (' net finance costs ', 27), (' finance income and costs ', 27), (' Finance income and costs ', 27), ('finance cost ', 25), (' finance expenses', 25), (' Impairment loss ', 25), (' interest revenue ', 24), (' net of tax ', 20), (' net of tax ', 20), (' expenses ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' Loss on revaluation of inventories ', 46), (' Impairment loss ', 40), (' other gains/losses ', 34), (' interest revenue ', 34), (' Share of gain/(loss) of joint venture ', 33), (' other income ', 32), (' Other income ', 32), (' other opertaing income ', 31), (' expenses ', 30), (' Impairement (expenses)/reversal ', 29), (' interest gains and losses ', 28), (' other income and revenue ', 28), (' share of profit of equity accounted investees ', 24), (' Share of profit of equity-accounted investees, net of income tax ', 23), (' finance expenses', 22), (' net finance costs ', 21), (' Profit from discontinued operation ', 20), (' net of tax ', 19), (' net of tax ', 19), (' finance income and costs ', 17), (' Finance income and costs ', 17), ('finance cost ', 16), (' finance income and finance cost ', 14), (' Finance income and finance costs ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' other opertaing income ', 51), (' other income and revenue ', 51), (' Share of profit of equity-accounted investees, net of income tax ', 45), (' Profit from discontinued operation ', 44), (' other income ', 42), (' share of profit of equity accounted investees ', 42), (' Other income ', 42), (' net finance costs ', 39), (' Impairement (expenses)/reversal ', 39), (' Share of gain/(loss) of joint venture ', 38), (' finance income and costs ', 35), (' interest gains and losses ', 35), (' Finance income and costs ', 35), (' Loss on revaluation of inventories ', 35), (' finance expenses', 33), (' other gains/losses ', 32), (' finance income and finance cost ', 32), (' interest revenue ', 32), (' Finance income and finance costs ', 32), ('finance cost ', 31), (' net of tax ', 25), (' net of tax ', 25), (' Impairment loss ', 23), (' expenses ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' other income and revenue ', 46), (' Share of profit of equity-accounted investees, net of income tax ', 46), (' other opertaing income ', 45), (' net finance costs ', 44), (' other income ', 43), (' share of profit of equity accounted investees ', 43), (' Other income ', 43), (' Profit from discontinued operation ', 42), (' Impairement (expenses)/reversal ', 40), (' finance income and costs ', 39), (' Finance income and costs ', 39), (' finance expenses', 38), (' Share of gain/(loss) of joint venture ', 38), (' other gains/losses ', 36), (' Loss on revaluation of inventories ', 36), ('finance cost ', 35), (' finance income and finance cost ', 35), (' Finance income and finance costs ', 35), (' interest gains and losses ', 32), (' interest revenue ', 28), (' net of tax ', 24), (' net of tax ', 24), (' Impairment loss ', 22), (' expenses ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [2, 9], 'score': 100, 'value': -107657.0, 'line_item_label': ['Other income', 'Finance costs'], 'note_numbers': ['4.3', '4.6'], 'line_item_value': [5245.0, -112902.0]}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' japan recoveries ', 64), (' secondment income (tw recovery) ', 62), (' Net foreign losses ', 62), (' other ', 60), (' net other foreign exchange (losses)/gains ', 57), (' Net other foreign exchange (losses)/gains ', 57), (' net foreign exchange gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange gains/(losses) ', 52), (' Net foreign exchange (loss)/gain ', 52), ('other revenue ', 50), (' foreign exchange gain ', 50), (' Interest on unwinding of discount in provisions ', 48), (' Investment in joint venture ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' dividend from other parties ', 43), (' profit from discontinued operation ', 43), (' net of tax ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net of tax ', 43), (' Profit from discontinued operation ', 43), (' net of tax ', 43), (' Net loss on disposal of property ', 43), (' Arising from inventory of cranes ', 43), (' Arising from inventory of spare parts ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' government grants ', 42), (' sundry income ', 42), (' Commision rebate ', 42), (' Sub-lease rental income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' Other expense - Loss on inventory obsolescence ', 38), (' other income ', 36), (' Profit on sale of assets ', 35), (' paid by customers - at amortised cost ', 33), (' net ppe disposal (loss)/gain ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' Miscellanous income ', 33), (' Derivaties at FVTPL- net change in fair value ', 33), (' Other income - Bank guarantee ', 33), (' quota lease income ', 31), (' Loss on sale of disposal of assets ', 29), (' Impairment loss ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' Accretion expense ', 77), (' net foreign exchange gain ', 63), (' net foreign exchange gains/(losses) ', 63), (' net foreign exchange (loss)/gain ', 63), (' Net foreign exchange gains/(losses) ', 63), (' Net foreign exchange (loss)/gain ', 63), (' net other foreign exchange (losses)/gains ', 58), (' Net other foreign exchange (losses)/gains ', 58), (' Net foreign losses ', 56), (' Other expense - Loss on inventory obsolescence ', 53), (' foreign exchange gain ', 47), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Power purchase agreement realised gain ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Profit on sale of assets ', 41), (' other ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' profit from discontinued operation ', 38), (' Sub-lease rental income ', 38), (' Profit from discontinued operation ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' secondment income (tw recovery) ', 37), (' net ppe disposal (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Arising from inventory of cranes ', 37), (' Other income - Bank guarantee ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' other income ', 36), (' japan recoveries ', 36), (' margin charge income ', 33), (' sundry income ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' paid by customers - at amortised cost ', 32), (' other miscellaneous - net (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Net loss on disposal of property ', 32), (' other miscellaneous - net (loss)/gain ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' share of jv income ', 27), (' Impairment loss ', 27), (' Miscellanous income ', 27), (' quota lease income ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' net gain / loss on disposal of property plant and equipment  ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' government grants ', 40), (' other ', 40), (' dividend from other parties ', 40), (' other income ', 40), (' net foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' secondment income (tw recovery) ', 40), (' net foreign exchange gains/(losses) ', 40), (' paid by customers - at amortised cost ', 40), (' net foreign exchange (loss)/gain ', 40), (' net ppe disposal (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' Net foreign exchange gains/(losses) ', 40), (' Loss on loan refinancing ', 40), (' Net foreign exchange (loss)/gain ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net foreign losses ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), ('other revenue ', 30), (' insurance proceeds ', 30), (' foreign exchange gain ', 30), (' share of jv income ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' sundry income ', 30), (' Asset impairment ', 30), (' plant and equipment ', 30), (' Miscellanous income ', 30), (' Bank charges', 30), (' Impairment loss ', 21), (' commission revenue ', 20), (' Accretion expense ', 20), (' Commision rebate ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' plant and equipment ', 100), (' net gain / loss on disposal of property plant and equipment  ', 76), (' Other expense - Net loss on sale or property, plant and equipment ', 75), (' insurance proceeds ', 64), (' Net loss on disposal of property ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' Asset impairment ', 50), (' Loss on sale of disposal of assets ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Loss on loan refinancing ', 50), (' Net foreign losses ', 50), (' Bank charges', 50), (' Remuneration from services linked to newly acquired entities ', 49), (' Power purchase agreement realised gain ', 49), (' secondment income (tw recovery) ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Arising from inventory of cranes ', 48), (' Profit on sale of assets ', 47), (' Arising from inventory of spare parts ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' other income ', 45), (' share of jv income ', 45), (' net foreign exchange gains/(losses) ', 45), (' Sub-lease rental income ', 45), (' Net foreign exchange gains/(losses) ', 45), (' dividend from other parties ', 44), (' quota lease income ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Other income - Bank guarantee ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange (loss)/gain ', 41), (' other ', 40), (' Miscellanous income ', 40), (' margin charge income ', 39), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' commission revenue ', 36), (' Impairment loss ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' other ', 100), (' net other foreign exchange (losses)/gains ', 80), (' Net other foreign exchange (losses)/gains ', 80), (' dividend from other parties ', 70), (' profit from discontinued operation ', 60), (' Profit from discontinued operation ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' other income ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' japan recoveries ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net loss on disposal of property ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Net foreign exchange (loss)/gain ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' Bank charges', 42), (' government grants ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' margin charge income ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' plant and equipment ', 40), (' Loss on loan refinancing ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' commission revenue ', 30), (' share of jv income ', 30), (' quota lease income ', 30), (' sundry income ', 30), (' Sub-lease rental income ', 30), (' Profit on sale of assets ', 30), (' Asset impairment ', 30), (' Loss on sale of disposal of assets ', 30), (' Accretion expense ', 30), (' Miscellanous income ', 30), (' Commision rebate ', 30), (' Impairment loss ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none freight recovery , res_fuzz_match = [(' japan recoveries ', 64), (' secondment income (tw recovery) ', 62), (' Net foreign losses ', 62), (' other ', 60), (' net other foreign exchange (losses)/gains ', 57), (' Net other foreign exchange (losses)/gains ', 57), (' net foreign exchange gain ', 52), (' net foreign exchange gains/(losses) ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange gains/(losses) ', 52), (' Net foreign exchange (loss)/gain ', 52), ('other revenue ', 50), (' foreign exchange gain ', 50), (' Interest on unwinding of discount in provisions ', 48), (' Investment in joint venture ', 47), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' commission revenue ', 43), (' dividend from other parties ', 43), (' profit from discontinued operation ', 43), (' net of tax ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net of tax ', 43), (' Profit from discontinued operation ', 43), (' net of tax ', 43), (' Net loss on disposal of property ', 43), (' Arising from inventory of cranes ', 43), (' Arising from inventory of spare parts ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), (' government grants ', 42), (' sundry income ', 42), (' Commision rebate ', 42), (' Sub-lease rental income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Loss on loan refinancing ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' Other expense - Loss on inventory obsolescence ', 38), (' other income ', 36), (' Profit on sale of assets ', 35), (' paid by customers - at amortised cost ', 33), (' net ppe disposal (loss)/gain ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Net PPE disposal (loss)/gain ', 33), (' other miscellaneous - net (loss)/gain ', 33), (' Miscellanous income ', 33), (' Derivaties at FVTPL- net change in fair value ', 33), (' Other income - Bank guarantee ', 33), (' quota lease income ', 31), (' Loss on sale of disposal of assets ', 29), (' Impairment loss ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none freight expense , res_fuzz_match = [(' Accretion expense ', 77), (' net foreign exchange gain ', 63), (' net foreign exchange gains/(losses) ', 63), (' net foreign exchange (loss)/gain ', 63), (' Net foreign exchange gains/(losses) ', 63), (' Net foreign exchange (loss)/gain ', 63), (' net other foreign exchange (losses)/gains ', 58), (' Net other foreign exchange (losses)/gains ', 58), (' Net foreign losses ', 56), (' Other expense - Loss on inventory obsolescence ', 53), (' foreign exchange gain ', 47), (' net of tax ', 43), (' net of tax ', 43), (' net of tax ', 43), ('other revenue ', 42), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Power purchase agreement realised gain ', 42), (' Power purchase agreement unrelaised gain ', 42), (' net gain / loss on disposal of property plant and equipment  ', 42), (' Investment in joint venture ', 42), (' Share of gain/(loss) of joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Arising from inventory of spare parts ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Commision rebate ', 42), (' Other expense - Net loss on sale or property, plant and equipment ', 42), (' Profit on sale of assets ', 41), (' other ', 40), (' Bank charges', 40), (' Loss on loan refinancing ', 39), (' profit from discontinued operation ', 38), (' Sub-lease rental income ', 38), (' Profit from discontinued operation ', 38), (' dividend from other parties ', 37), (' effective portion of changes in fair value of cash flow ', 37), (' secondment income (tw recovery) ', 37), (' net ppe disposal (loss)/gain ', 37), (' Net PPE disposal (loss)/gain ', 37), (' Arising from inventory of cranes ', 37), (' Other income - Bank guarantee ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' other income ', 36), (' japan recoveries ', 36), (' margin charge income ', 33), (' sundry income ', 33), (' Asset impairment ', 33), (' plant and equipment ', 33), (' paid by customers - at amortised cost ', 32), (' other miscellaneous - net (loss)/gain ', 32), (' Loss on sale of disposal of assets ', 32), (' Net loss on disposal of property ', 32), (' other miscellaneous - net (loss)/gain ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' share of jv income ', 27), (' Impairment loss ', 27), (' Miscellanous income ', 27), (' quota lease income ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' other miscellaneous - net (loss)/gain ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' net gain / loss on disposal of property plant and equipment  ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' government grants ', 40), (' other ', 40), (' dividend from other parties ', 40), (' other income ', 40), (' net foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' profit from discontinued operation ', 40), (' secondment income (tw recovery) ', 40), (' net foreign exchange gains/(losses) ', 40), (' paid by customers - at amortised cost ', 40), (' net foreign exchange (loss)/gain ', 40), (' net ppe disposal (loss)/gain ', 40), (' quota lease income ', 40), (' Profit on sale of assets ', 40), (' Loss on sale of disposal of assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' Profit from discontinued operation ', 40), (' Net loss on disposal of property ', 40), (' Net foreign exchange gains/(losses) ', 40), (' Loss on loan refinancing ', 40), (' Net foreign exchange (loss)/gain ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net foreign losses ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), ('other revenue ', 30), (' insurance proceeds ', 30), (' foreign exchange gain ', 30), (' share of jv income ', 30), (' japan recoveries ', 30), (' margin charge income ', 30), (' sundry income ', 30), (' Asset impairment ', 30), (' plant and equipment ', 30), (' Miscellanous income ', 30), (' Bank charges', 30), (' Impairment loss ', 21), (' commission revenue ', 20), (' Accretion expense ', 20), (' Commision rebate ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none gain on sale of property, plant and equipment and intangibles , res_fuzz_match = [(' plant and equipment ', 100), (' net gain / loss on disposal of property plant and equipment  ', 76), (' Other expense - Net loss on sale or property, plant and equipment ', 75), (' insurance proceeds ', 64), (' Net loss on disposal of property ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' government grants ', 50), (' japan recoveries ', 50), (' Asset impairment ', 50), (' Loss on sale of disposal of assets ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Loss on loan refinancing ', 50), (' Net foreign losses ', 50), (' Bank charges', 50), (' Remuneration from services linked to newly acquired entities ', 49), (' Power purchase agreement realised gain ', 49), (' secondment income (tw recovery) ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Arising from inventory of cranes ', 48), (' Profit on sale of assets ', 47), (' Arising from inventory of spare parts ', 47), (' Derivaties at FVTPL- net change in fair value ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Power purchase agreement unrelaised gain ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' other income ', 45), (' share of jv income ', 45), (' net foreign exchange gains/(losses) ', 45), (' Sub-lease rental income ', 45), (' Net foreign exchange gains/(losses) ', 45), (' dividend from other parties ', 44), (' quota lease income ', 44), (' net (loss)/profit on disposal of non-current assets ', 44), (' Net (loss)/profit on disposal of non-current assets ', 44), (' Other income - Bank guarantee ', 44), (' effective portion of changes in fair value of cash flow ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Net other foreign exchange (losses)/gains ', 43), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange (loss)/gain ', 41), (' other ', 40), (' Miscellanous income ', 40), (' margin charge income ', 39), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' commission revenue ', 36), (' Impairment loss ', 36), (' Other expense - Loss on inventory obsolescence ', 36), ('other revenue ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none others , res_fuzz_match = [(' other ', 100), (' net other foreign exchange (losses)/gains ', 80), (' Net other foreign exchange (losses)/gains ', 80), (' dividend from other parties ', 70), (' profit from discontinued operation ', 60), (' Profit from discontinued operation ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), ('other revenue ', 50), (' other income ', 50), (' net foreign exchange gain ', 50), (' secondment income (tw recovery) ', 50), (' japan recoveries ', 50), (' net foreign exchange gains/(losses) ', 50), (' net foreign exchange (loss)/gain ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net loss on disposal of property ', 50), (' Net foreign exchange gains/(losses) ', 50), (' Net foreign exchange (loss)/gain ', 50), (' other miscellaneous - net (loss)/gain ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' Bank charges', 42), (' government grants ', 40), (' insurance proceeds ', 40), (' foreign exchange gain ', 40), (' effective portion of changes in fair value of cash flow ', 40), (' margin charge income ', 40), (' paid by customers - at amortised cost ', 40), (' net ppe disposal (loss)/gain ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Remuneration from services linked to newly acquired entities ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Investment in joint venture ', 40), (' Share of gain/(loss) of joint venture ', 40), (' Interest on unwinding of discount in provisions ', 40), (' plant and equipment ', 40), (' Loss on loan refinancing ', 40), (' Net PPE disposal (loss)/gain ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Derivaties at FVTPL- net change in fair value ', 40), (' Other income - Bank guarantee ', 40), (' Other expense - Loss on inventory obsolescence ', 40), (' commission revenue ', 30), (' share of jv income ', 30), (' quota lease income ', 30), (' sundry income ', 30), (' Sub-lease rental income ', 30), (' Profit on sale of assets ', 30), (' Asset impairment ', 30), (' Loss on sale of disposal of assets ', 30), (' Accretion expense ', 30), (' Miscellanous income ', 30), (' Commision rebate ', 30), (' Impairment loss ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total other income , res_fuzz_match = [(' other ', 100), (' other income ', 100), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' quota lease income ', 69), ('other revenue ', 61), (' net other foreign exchange (losses)/gains ', 59), (' Net other foreign exchange (losses)/gains ', 59), (' sundry income ', 58), (' margin charge income ', 57), (' Sub-lease rental income ', 56), (' dividend from other parties ', 50), (' Other income - Bank guarantee ', 50), (' Miscellanous income ', 47), (' net foreign exchange (loss)/gain ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Remuneration from services linked to newly acquired entities ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Net foreign losses ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' government grants ', 42), (' Investment in joint venture ', 42), (' net foreign exchange gain ', 41), (' profit from discontinued operation ', 41), (' net foreign exchange gains/(losses) ', 41), (' paid by customers - at amortised cost ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' Bank charges', 40), (' net ppe disposal (loss)/gain ', 39), (' Net PPE disposal (loss)/gain ', 39), (' Loss on sale of disposal of assets ', 37), (' effective portion of changes in fair value of cash flow ', 36), (' Share of gain/(loss) of joint venture ', 36), (' Net loss on disposal of property ', 36), (' Arising from inventory of cranes ', 36), (' Arising from inventory of spare parts ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' foreign exchange gain ', 35), (' Profit on sale of assets ', 35), (' Asset impairment ', 33), (' plant and equipment ', 33), (' Power purchase agreement realised gain ', 32), (' Power purchase agreement unrelaised gain ', 32), (' Accretion expense ', 31), (' commission revenue ', 29), (' insurance proceeds ', 27), (' Impairment loss ', 27), (' Commision rebate ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 9, 10, 11], 'score': [100, 100, 100, 100, 100, 100], 'value': [0.0, 4616.0, 5245.0, 136.0, 2172.0, 2308.0], 'label': ['None Gain on sale of property, plant and equipment and intangibles', 'None Others', 'None Total other income', 'None Gain on sale of property, plant and equipment and intangibles', 'None Others', 'None Total other income'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Sub-lease rental income ', 56), (' quota lease income ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Profit on sale of assets ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' net foreign exchange gain ', 46), (' net ppe disposal (loss)/gain ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' other income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net foreign exchange (loss)/gain ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Share of gain/(loss) of joint venture ', 44), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Net other foreign exchange (losses)/gains ', 43), ('other revenue ', 42), (' government grants ', 42), (' Commision rebate ', 42), (' effective portion of changes in fair value of cash flow ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Miscellanous income ', 40), (' Other income - Bank guarantee ', 40), (' Loss on sale of disposal of assets ', 37), (' Investment in joint venture ', 37), (' Arising from inventory of spare parts ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Arising from inventory of cranes ', 36), (' profit from discontinued operation ', 34), (' Profit from discontinued operation ', 34), (' margin charge income ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' plant and equipment ', 33), (' dividend from other parties ', 32), (' Bank charges', 30), (' commission revenue ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Commision rebate ', 67), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Net foreign losses ', 56), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' dividend from other parties ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange (loss)/gain ', 52), (' Asset impairment ', 50), (' Loss on loan refinancing ', 50), (' secondment income (tw recovery) ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' net gain / loss on disposal of property plant and equipment  ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' plant and equipment ', 47), (' Arising from inventory of spare parts ', 47), (' Miscellanous income ', 47), (' net foreign exchange gain ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Arising from inventory of cranes ', 44), (' Other income - Bank guarantee ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net ppe disposal (loss)/gain ', 42), (' sundry income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' Power purchase agreement realised gain ', 39), (' Power purchase agreement unrelaised gain ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' profit from discontinued operation ', 38), (' Profit from discontinued operation ', 38), (' Derivaties at FVTPL- net change in fair value ', 36), ('other revenue ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Accretion expense ', 62), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' dividend from other parties ', 56), (' Net foreign losses ', 56), (' other income ', 55), ('other revenue ', 50), (' commission revenue ', 50), (' government grants ', 50), (' Asset impairment ', 50), (' Loss on loan refinancing ', 50), (' Commision rebate ', 50), (' net foreign exchange (loss)/gain ', 49), (' Net foreign exchange (loss)/gain ', 49), (' secondment income (tw recovery) ', 48), (' net gain / loss on disposal of property plant and equipment  ', 48), (' Investment in joint venture ', 47), (' Arising from inventory of spare parts ', 47), (' net foreign exchange gain ', 46), (' net foreign exchange gains/(losses) ', 46), (' Net foreign exchange gains/(losses) ', 46), (' share of jv income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Share of gain/(loss) of joint venture ', 44), (' Other income - Bank guarantee ', 44), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 43), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' Net loss on disposal of property ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' foreign exchange gain ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' insurance proceeds ', 36), (' Arising from inventory of cranes ', 36), (' Sub-lease rental income ', 35), (' margin charge income ', 33), (' plant and equipment ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' Loss on loan refinancing ', 61), (' quota lease income ', 56), (' other income ', 55), (' net foreign exchange (loss)/gain ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Profit on sale of assets ', 47), (' net foreign exchange gain ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' share of jv income ', 45), (' secondment income (tw recovery) ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' japan recoveries ', 43), (' sundry income ', 42), (' Loss on sale of disposal of assets ', 42), (' profit from discontinued operation ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Share of gain/(loss) of joint venture ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Arising from inventory of spare parts ', 38), (' Investment in joint venture ', 37), (' insurance proceeds ', 36), (' dividend from other parties ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Power purchase agreement realised gain ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Net loss on disposal of property ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' Other income - Bank guarantee ', 36), (' foreign exchange gain ', 35), (' plant and equipment ', 34), ('other revenue ', 33), (' government grants ', 33), (' Asset impairment ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none interest on lease liabilities (note 12) , res_fuzz_match = [(' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Sub-lease rental income ', 56), (' quota lease income ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' Other expense - Net loss on sale or property, plant and equipment ', 50), (' other miscellaneous - net (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Profit on sale of assets ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' net foreign exchange gain ', 46), (' net ppe disposal (loss)/gain ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' other income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net foreign exchange (loss)/gain ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net foreign exchange (loss)/gain ', 45), (' Share of gain/(loss) of joint venture ', 44), (' Loss on loan refinancing ', 44), (' secondment income (tw recovery) ', 43), (' net other foreign exchange (losses)/gains ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net gain / loss on disposal of property plant and equipment  ', 43), (' Interest on unwinding of discount in provisions ', 43), (' Net other foreign exchange (losses)/gains ', 43), ('other revenue ', 42), (' government grants ', 42), (' Commision rebate ', 42), (' effective portion of changes in fair value of cash flow ', 40), (' net (loss)/profit on disposal of non-current assets ', 40), (' Power purchase agreement realised gain ', 40), (' Power purchase agreement unrelaised gain ', 40), (' Net (loss)/profit on disposal of non-current assets ', 40), (' Miscellanous income ', 40), (' Other income - Bank guarantee ', 40), (' Loss on sale of disposal of assets ', 37), (' Investment in joint venture ', 37), (' Arising from inventory of spare parts ', 37), (' Derivaties at FVTPL- net change in fair value ', 37), (' share of jv income ', 36), (' japan recoveries ', 36), (' Arising from inventory of cranes ', 36), (' profit from discontinued operation ', 34), (' Profit from discontinued operation ', 34), (' margin charge income ', 33), (' paid by customers - at amortised cost ', 33), (' sundry income ', 33), (' plant and equipment ', 33), (' dividend from other parties ', 32), (' Bank charges', 30), (' commission revenue ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none finance costs - related parties (note 21) , res_fuzz_match = [(' Commision rebate ', 67), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' Net foreign losses ', 56), (' other income ', 55), (' paid by customers - at amortised cost ', 54), (' dividend from other parties ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange (loss)/gain ', 52), (' Asset impairment ', 50), (' Loss on loan refinancing ', 50), (' secondment income (tw recovery) ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' net gain / loss on disposal of property plant and equipment  ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' plant and equipment ', 47), (' Arising from inventory of spare parts ', 47), (' Miscellanous income ', 47), (' net foreign exchange gain ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' share of jv income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Sub-lease rental income ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Arising from inventory of cranes ', 44), (' Other income - Bank guarantee ', 44), (' commission revenue ', 43), (' japan recoveries ', 43), (' Share of gain/(loss) of joint venture ', 43), (' government grants ', 42), (' net ppe disposal (loss)/gain ', 42), (' sundry income ', 42), (' Remuneration from services linked to newly acquired entities ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' foreign exchange gain ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' net (loss)/profit on disposal of non-current assets ', 39), (' Power purchase agreement realised gain ', 39), (' Power purchase agreement unrelaised gain ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' profit from discontinued operation ', 38), (' Profit from discontinued operation ', 38), (' Derivaties at FVTPL- net change in fair value ', 36), ('other revenue ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none finance costs external parties , res_fuzz_match = [(' Accretion expense ', 62), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' dividend from other parties ', 56), (' Net foreign losses ', 56), (' other income ', 55), ('other revenue ', 50), (' commission revenue ', 50), (' government grants ', 50), (' Asset impairment ', 50), (' Loss on loan refinancing ', 50), (' Commision rebate ', 50), (' net foreign exchange (loss)/gain ', 49), (' Net foreign exchange (loss)/gain ', 49), (' secondment income (tw recovery) ', 48), (' net gain / loss on disposal of property plant and equipment  ', 48), (' Investment in joint venture ', 47), (' Arising from inventory of spare parts ', 47), (' net foreign exchange gain ', 46), (' net foreign exchange gains/(losses) ', 46), (' Net foreign exchange gains/(losses) ', 46), (' share of jv income ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Share of gain/(loss) of joint venture ', 44), (' Other income - Bank guarantee ', 44), (' japan recoveries ', 43), (' paid by customers - at amortised cost ', 43), (' other miscellaneous - net (loss)/gain ', 42), (' sundry income ', 42), (' Net loss on disposal of property ', 42), (' other miscellaneous - net (loss)/gain ', 42), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Power purchase agreement realised gain ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 41), (' foreign exchange gain ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' effective portion of changes in fair value of cash flow ', 38), (' net ppe disposal (loss)/gain ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' insurance proceeds ', 36), (' Arising from inventory of cranes ', 36), (' Sub-lease rental income ', 35), (' margin charge income ', 33), (' plant and equipment ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none total finance costs , res_fuzz_match = [(' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), (' Loss on loan refinancing ', 61), (' quota lease income ', 56), (' other income ', 55), (' net foreign exchange (loss)/gain ', 50), (' net other foreign exchange (losses)/gains ', 50), (' Sub-lease rental income ', 50), (' Net foreign exchange (loss)/gain ', 50), (' Net other foreign exchange (losses)/gains ', 50), (' Net foreign losses ', 50), (' Profit on sale of assets ', 47), (' net foreign exchange gain ', 45), (' effective portion of changes in fair value of cash flow ', 45), (' share of jv income ', 45), (' secondment income (tw recovery) ', 45), (' net foreign exchange gains/(losses) ', 45), (' paid by customers - at amortised cost ', 45), (' net (loss)/profit on disposal of non-current assets ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net (loss)/profit on disposal of non-current assets ', 45), (' Other expense - Loss on inventory obsolescence ', 45), (' japan recoveries ', 43), (' sundry income ', 42), (' Loss on sale of disposal of assets ', 42), (' profit from discontinued operation ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' net gain / loss on disposal of property plant and equipment  ', 41), (' Share of gain/(loss) of joint venture ', 41), (' Interest on unwinding of discount in provisions ', 41), (' Profit from discontinued operation ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' Miscellanous income ', 40), (' Bank charges', 40), (' margin charge income ', 39), (' Arising from inventory of spare parts ', 38), (' Investment in joint venture ', 37), (' insurance proceeds ', 36), (' dividend from other parties ', 36), (' net ppe disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Power purchase agreement realised gain ', 36), (' Power purchase agreement unrelaised gain ', 36), (' Net loss on disposal of property ', 36), (' Net PPE disposal (loss)/gain ', 36), (' other miscellaneous - net (loss)/gain ', 36), (' Arising from inventory of cranes ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' Other income - Bank guarantee ', 36), (' foreign exchange gain ', 35), (' plant and equipment ', 34), ('other revenue ', 33), (' government grants ', 33), (' Asset impairment ', 33), (' Commision rebate ', 33), (' Accretion expense ', 31), (' commission revenue ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' share of jv income ', 73), (' Bank charges', 70), (' sundry income ', 67), (' other income ', 64), (' Sub-lease rental income ', 60), (' Miscellanous income ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' quota lease income ', 56), (' Other income - Bank guarantee ', 56), (' Accretion expense ', 54), (' secondment income (tw recovery) ', 52), (' commission revenue ', 50), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' Investment in joint venture ', 47), (' paid by customers - at amortised cost ', 46), (' net foreign exchange gains/(losses) ', 45), (' Net foreign exchange gains/(losses) ', 45), (' profit from discontinued operation ', 44), (' Profit from discontinued operation ', 44), (' net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Net other foreign exchange (losses)/gains ', 43), ('other revenue ', 42), (' government grants ', 42), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Net foreign exchange (loss)/gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' dividend from other parties ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' net gain / loss on disposal of property plant and equipment  ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Net foreign losses ', 38), (' Derivaties at FVTPL- net change in fair value ', 38), (' Power purchase agreement realised gain ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Other expense - Loss on inventory obsolescence ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' share of jv income ', 73), (' sundry income ', 67), (' Sub-lease rental income ', 65), (' other income ', 64), (' Miscellanous income ', 60), (' net of tax ', 57), (' secondment income (tw recovery) ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Interest on unwinding of discount in provisions ', 55), (' Other income - Bank guarantee ', 52), ('other revenue ', 50), (' commission revenue ', 50), (' margin charge income ', 50), (' Net foreign losses ', 50), (' net (loss)/profit on disposal of non-current assets ', 47), (' plant and equipment ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' paid by customers - at amortised cost ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Profit from discontinued operation ', 44), (' Arising from inventory of spare parts ', 44), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net foreign exchange gain ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Net loss on disposal of property ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' Profit on sale of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Net foreign exchange (loss)/gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' foreign exchange gain ', 40), (' other ', 40), (' net other foreign exchange (losses)/gains ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' Loss on loan refinancing ', 39), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Net PPE disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Derivaties at FVTPL- net change in fair value ', 38), (' Arising from inventory of cranes ', 37), (' Impairment loss ', 36), (' Other expense - Loss on inventory obsolescence ', 36), (' government grants ', 33), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' net of tax ', 57), (' japan recoveries ', 57), (' net of tax ', 57), (' net of tax ', 57), (' other income ', 55), (' net other foreign exchange (losses)/gains ', 54), (' Net other foreign exchange (losses)/gains ', 54), (' secondment income (tw recovery) ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange (loss)/gain ', 52), (' Other income - Bank guarantee ', 52), ('other revenue ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' dividend from other parties ', 48), (' Investment in joint venture ', 47), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' margin charge income ', 44), (' quota lease income ', 44), (' Arising from inventory of cranes ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' commission revenue ', 43), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' paid by customers - at amortised cost ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Power purchase agreement unrelaised gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Bank charges', 40), (' net (loss)/profit on disposal of non-current assets ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Loss on loan refinancing ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' share of jv income ', 36), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Miscellanous income ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' Impairment loss ', 64), (' Accretion expense ', 62), (' Net foreign losses ', 62), (' other ', 60), (' Miscellanous income ', 60), (' Profit on sale of assets ', 59), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' profit from discontinued operation ', 56), (' margin charge income ', 56), (' quota lease income ', 56), (' Profit from discontinued operation ', 56), (' Loss on loan refinancing ', 56), (' Sub-lease rental income ', 55), (' net ppe disposal (loss)/gain ', 54), (' Net loss on disposal of property ', 54), (' Net PPE disposal (loss)/gain ', 54), (' Other expense - Loss on inventory obsolescence ', 53), (' other miscellaneous - net (loss)/gain ', 52), (' other miscellaneous - net (loss)/gain ', 52), (' Other expense - Net loss on sale or property, plant and equipment ', 51), ('other revenue ', 50), (' commission revenue ', 50), (' japan recoveries ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' Asset impairment ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' dividend from other parties ', 48), (' secondment income (tw recovery) ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Other income - Bank guarantee ', 48), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' net foreign exchange (loss)/gain ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net foreign exchange (loss)/gain ', 45), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Derivaties at FVTPL- net change in fair value ', 38), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' share of jv income ', 73), (' Bank charges', 70), (' sundry income ', 67), (' other income ', 64), (' Sub-lease rental income ', 60), (' Miscellanous income ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' quota lease income ', 56), (' Other income - Bank guarantee ', 56), (' Accretion expense ', 54), (' secondment income (tw recovery) ', 52), (' commission revenue ', 50), (' foreign exchange gain ', 50), (' net foreign exchange gain ', 50), (' Loss on loan refinancing ', 50), (' Investment in joint venture ', 47), (' paid by customers - at amortised cost ', 46), (' net foreign exchange gains/(losses) ', 45), (' Net foreign exchange gains/(losses) ', 45), (' profit from discontinued operation ', 44), (' Profit from discontinued operation ', 44), (' net other foreign exchange (losses)/gains ', 43), (' Share of gain/(loss) of joint venture ', 43), (' Net other foreign exchange (losses)/gains ', 43), ('other revenue ', 42), (' government grants ', 42), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Net foreign exchange (loss)/gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' dividend from other parties ', 40), (' Arising from inventory of cranes ', 40), (' Arising from inventory of spare parts ', 40), (' net gain / loss on disposal of property plant and equipment  ', 39), (' effective portion of changes in fair value of cash flow ', 38), (' net ppe disposal (loss)/gain ', 38), (' Power purchase agreement unrelaised gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' Net foreign losses ', 38), (' Derivaties at FVTPL- net change in fair value ', 38), (' Power purchase agreement realised gain ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' net (loss)/profit on disposal of non-current assets ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Net (loss)/profit on disposal of non-current assets ', 36), (' Profit on sale of assets ', 35), (' plant and equipment ', 33), (' Other expense - Loss on inventory obsolescence ', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' share of jv income ', 73), (' sundry income ', 67), (' Sub-lease rental income ', 65), (' other income ', 64), (' Miscellanous income ', 60), (' net of tax ', 57), (' secondment income (tw recovery) ', 57), (' net of tax ', 57), (' net of tax ', 57), (' quota lease income ', 56), (' Interest on unwinding of discount in provisions ', 55), (' Other income - Bank guarantee ', 52), ('other revenue ', 50), (' commission revenue ', 50), (' margin charge income ', 50), (' Net foreign losses ', 50), (' net (loss)/profit on disposal of non-current assets ', 47), (' plant and equipment ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' paid by customers - at amortised cost ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' Loss on sale of disposal of assets ', 45), (' dividend from other parties ', 44), (' profit from discontinued operation ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Profit from discontinued operation ', 44), (' Arising from inventory of spare parts ', 44), (' japan recoveries ', 43), (' Power purchase agreement realised gain ', 43), (' Power purchase agreement unrelaised gain ', 43), (' Share of gain/(loss) of joint venture ', 43), (' net foreign exchange gain ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Net loss on disposal of property ', 42), (' Commision rebate ', 42), (' net foreign exchange (loss)/gain ', 41), (' Profit on sale of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Net foreign exchange (loss)/gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' foreign exchange gain ', 40), (' other ', 40), (' net other foreign exchange (losses)/gains ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' Loss on loan refinancing ', 39), (' net foreign exchange gains/(losses) ', 38), (' net ppe disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Net PPE disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Derivaties at FVTPL- net change in fair value ', 38), (' Arising from inventory of cranes ', 37), (' Impairment loss ', 36), (' Other expense - Loss on inventory obsolescence ', 36), (' government grants ', 33), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' net of tax ', 57), (' japan recoveries ', 57), (' net of tax ', 57), (' net of tax ', 57), (' other income ', 55), (' net other foreign exchange (losses)/gains ', 54), (' Net other foreign exchange (losses)/gains ', 54), (' secondment income (tw recovery) ', 52), (' net foreign exchange (loss)/gain ', 52), (' Net foreign exchange (loss)/gain ', 52), (' Other income - Bank guarantee ', 52), ('other revenue ', 50), (' Asset impairment ', 50), (' Net foreign losses ', 50), (' dividend from other parties ', 48), (' Investment in joint venture ', 47), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Net foreign exchange gains/(losses) ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' margin charge income ', 44), (' quota lease income ', 44), (' Arising from inventory of cranes ', 44), (' Derivaties at FVTPL- net change in fair value ', 44), (' commission revenue ', 43), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' paid by customers - at amortised cost ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Power purchase agreement unrelaised gain ', 41), (' Other expense - Net loss on sale or property, plant and equipment ', 41), (' other ', 40), (' Power purchase agreement realised gain ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Bank charges', 40), (' net (loss)/profit on disposal of non-current assets ', 39), (' Remuneration from services linked to newly acquired entities ', 39), (' Loss on loan refinancing ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' Other expense - Loss on inventory obsolescence ', 39), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' share of jv income ', 36), (' Sub-lease rental income ', 35), (' Profit on sale of assets ', 35), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Miscellanous income ', 33), (' Commision rebate ', 33), (' Loss on sale of disposal of assets ', 32)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' Impairment loss ', 64), (' Accretion expense ', 62), (' Net foreign losses ', 62), (' other ', 60), (' Miscellanous income ', 60), (' Profit on sale of assets ', 59), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' profit from discontinued operation ', 56), (' margin charge income ', 56), (' quota lease income ', 56), (' Profit from discontinued operation ', 56), (' Loss on loan refinancing ', 56), (' Sub-lease rental income ', 55), (' net ppe disposal (loss)/gain ', 54), (' Net loss on disposal of property ', 54), (' Net PPE disposal (loss)/gain ', 54), (' Other expense - Loss on inventory obsolescence ', 53), (' other miscellaneous - net (loss)/gain ', 52), (' other miscellaneous - net (loss)/gain ', 52), (' Other expense - Net loss on sale or property, plant and equipment ', 51), ('other revenue ', 50), (' commission revenue ', 50), (' japan recoveries ', 50), (' net (loss)/profit on disposal of non-current assets ', 50), (' Asset impairment ', 50), (' Share of gain/(loss) of joint venture ', 50), (' Net (loss)/profit on disposal of non-current assets ', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' dividend from other parties ', 48), (' secondment income (tw recovery) ', 48), (' Interest on unwinding of discount in provisions ', 48), (' Other income - Bank guarantee ', 48), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Power purchase agreement unrelaised gain ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' net foreign exchange gains/(losses) ', 45), (' net foreign exchange (loss)/gain ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net foreign exchange (loss)/gain ', 45), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Arising from inventory of cranes ', 44), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' Loss on sale of disposal of assets ', 41), (' Remuneration from services linked to newly acquired entities ', 41), (' Derivaties at FVTPL- net change in fair value ', 38), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['other revenue ', ' commission revenue ', ' government grants ', ' insurance proceeds ', ' foreign exchange gain ', ' other ', ' dividend from other parties ', ' other income ', ' net foreign exchange gain ', ' effective portion of changes in fair value of cash flow ', ' profit from discontinued operation ', ' net of tax ', ' share of jv income ', ' secondment income (tw recovery) ', ' japan recoveries ', ' margin charge income ', ' net foreign exchange gains/(losses) ', ' paid by customers - at amortised cost ', ' net foreign exchange (loss)/gain ', ' net ppe disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' quota lease income ', ' sundry income ', ' net (loss)/profit on disposal of non-current assets ', ' net other foreign exchange (losses)/gains ', ' Sub-lease rental income ', ' Profit on sale of assets ', ' Asset impairment ', ' Loss on sale of disposal of assets ', ' Remuneration from services linked to newly acquired entities ', ' Power purchase agreement realised gain ', ' Power purchase agreement unrelaised gain ', ' net gain / loss on disposal of property plant and equipment  ', ' Investment in joint venture ', ' Share of gain/(loss) of joint venture ', ' net of tax ', ' Impairment loss ', ' Interest on unwinding of discount in provisions ', ' Profit from discontinued operation ', ' net of tax ', ' Net loss on disposal of property ', ' plant and equipment ', ' Net foreign exchange gains/(losses) ', ' Accretion expense ', ' Loss on loan refinancing ', ' Net foreign exchange (loss)/gain ', ' Net PPE disposal (loss)/gain ', ' other miscellaneous - net (loss)/gain ', ' Arising from inventory of cranes ', ' Arising from inventory of spare parts ', ' Net (loss)/profit on disposal of non-current assets ', ' Net other foreign exchange (losses)/gains ', ' Miscellanous income ', ' Commision rebate ', ' Net foreign losses ', ' Derivaties at FVTPL- net change in fair value ', ' Other income - Bank guarantee ', ' Other expense - Net loss on sale or property, plant and equipment ', ' Other expense - Loss on inventory obsolescence ', ' Bank charges'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 64), (' quota lease income ', 62), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' Profit on sale of assets ', 53), (' Miscellanous income ', 53), (' profit from discontinued operation ', 52), (' Profit from discontinued operation ', 52), (' net (loss)/profit on disposal of non-current assets ', 51), (' Net (loss)/profit on disposal of non-current assets ', 51), (' government grants ', 50), (' Net foreign losses ', 50), (' secondment income (tw recovery) ', 48), (' Other income - Bank guarantee ', 48), (' net other foreign exchange (losses)/gains ', 47), (' Investment in joint venture ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' net foreign exchange gain ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' Sub-lease rental income ', 45), (' net foreign exchange (loss)/gain ', 44), (' Loss on loan refinancing ', 44), (' Net foreign exchange (loss)/gain ', 44), (' Arising from inventory of cranes ', 44), (' japan recoveries ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), ('other revenue ', 42), (' paid by customers - at amortised cost ', 42), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' foreign exchange gain ', 41), (' net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' other ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Arising from inventory of spare parts ', 40), (' Share of gain/(loss) of joint venture ', 39), (' effective portion of changes in fair value of cash flow ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' Power purchase agreement realised gain ', 35), (' Other expense - Loss on inventory obsolescence ', 35), (' Power purchase agreement unrelaised gain ', 34), (' plant and equipment ', 33), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' sundry income ', 75), (' other income ', 73), (' Other income - Bank guarantee ', 67), (' share of jv income ', 64), (' Commision rebate ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' Sub-lease rental income ', 55), (' paid by customers - at amortised cost ', 54), (' Miscellanous income ', 53), (' quota lease income ', 50), (' secondment income (tw recovery) ', 48), (' Arising from inventory of cranes ', 48), (' Net foreign losses ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' commission revenue ', 43), (' Arising from inventory of spare parts ', 43), ('other revenue ', 42), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Power purchase agreement unrelaised gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' foreign exchange gain ', 40), (' other ', 40), (' dividend from other parties ', 40), (' net other foreign exchange (losses)/gains ', 40), (' Power purchase agreement realised gain ', 40), (' plant and equipment ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' Bank charges', 40), (' Share of gain/(loss) of joint venture ', 39), (' Loss on loan refinancing ', 39), (' net foreign exchange gain ', 38), (' net foreign exchange gains/(losses) ', 38), (' net foreign exchange (loss)/gain ', 38), (' Remuneration from services linked to newly acquired entities ', 38), (' net gain / loss on disposal of property plant and equipment  ', 38), (' Net loss on disposal of property ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Net foreign exchange (loss)/gain ', 38), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' effective portion of changes in fair value of cash flow ', 33), (' net ppe disposal (loss)/gain ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Other expense - Loss on inventory obsolescence ', 33), (' Accretion expense ', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [(' Accretion expense ', 69), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' secondment income (tw recovery) ', 48), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), (' Other income - Bank guarantee ', 44), (' net gain / loss on disposal of property plant and equipment  ', 43), ('other revenue ', 42), (' government grants ', 42), (' net foreign exchange (loss)/gain ', 42), (' Power purchase agreement realised gain ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net foreign exchange (loss)/gain ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' profit from discontinued operation ', 41), (' Profit from discontinued operation ', 41), (' foreign exchange gain ', 40), (' Sub-lease rental income ', 40), (' Arising from inventory of cranes ', 40), (' Remuneration from services linked to newly acquired entities ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Loss on loan refinancing ', 39), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Arising from inventory of spare parts ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Profit on sale of assets ', 35), (' sundry income ', 33), (' Asset impairment ', 33), (' Miscellanous income ', 33), (' Commision rebate ', 33), (' net (loss)/profit on disposal of non-current assets ', 32), (' Loss on sale of disposal of assets ', 32), (' Net (loss)/profit on disposal of non-current assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' Bank charges', 30), (' margin charge income ', 28), (' share of jv income ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' Accretion expense ', 69), ('other revenue ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' net other foreign exchange (losses)/gains ', 56), (' Net other foreign exchange (losses)/gains ', 56), (' Other income - Bank guarantee ', 51), (' Interest on unwinding of discount in provisions ', 48), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net foreign losses ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' Other expense - Loss on inventory obsolescence ', 44), (' government grants ', 42), (' net foreign exchange gain ', 42), (' Investment in joint venture ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange (loss)/gain ', 41), (' plant and equipment ', 40), (' Bank charges', 40), (' secondment income (tw recovery) ', 38), (' quota lease income ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Net loss on disposal of property ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Share of gain/(loss) of joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' dividend from other parties ', 36), (' Profit on sale of assets ', 35), (' effective portion of changes in fair value of cash flow ', 33), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Loss on sale of disposal of assets ', 32), (' Arising from inventory of cranes ', 32), (' foreign exchange gain ', 30), (' Sub-lease rental income ', 30), (' Derivaties at FVTPL- net change in fair value ', 30), (' japan recoveries ', 29), (' paid by customers - at amortised cost ', 29), (' margin charge income ', 28), (' Impairment loss ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' other ', 100), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' Profit on sale of assets ', 65), (' Asset impairment ', 58), (' quota lease income ', 56), (' net (loss)/profit on disposal of non-current assets ', 56), (' Loss on loan refinancing ', 56), (' Arising from inventory of cranes ', 56), (' Net (loss)/profit on disposal of non-current assets ', 56), (' Net foreign losses ', 56), (' other income ', 55), (' plant and equipment ', 53), (' dividend from other parties ', 52), (' Power purchase agreement unrelaised gain ', 51), (' government grants ', 50), (' net foreign exchange gain ', 50), (' japan recoveries ', 50), (' Sub-lease rental income ', 50), (' Loss on sale of disposal of assets ', 50), (' Arising from inventory of spare parts ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Other income - Bank guarantee ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Miscellanous income ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' margin charge income ', 44), (' secondment income (tw recovery) ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' profit from discontinued operation ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' commission revenue ', 36), (' insurance proceeds ', 36)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' sundry income ', 67), (' Asset impairment ', 58), (' margin charge income ', 56), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Net foreign losses ', 56), (' insurance proceeds ', 55), (' plant and equipment ', 53), (' Miscellanous income ', 53), (' dividend from other parties ', 52), (' Other income - Bank guarantee ', 52), (' Power purchase agreement unrelaised gain ', 51), (' commission revenue ', 50), (' government grants ', 50), (' net foreign exchange gain ', 50), (' paid by customers - at amortised cost ', 50), (' Sub-lease rental income ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' effective portion of changes in fair value of cash flow ', 48), (' profit from discontinued operation ', 48), (' secondment income (tw recovery) ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Profit from discontinued operation ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Arising from inventory of cranes ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Arising from inventory of spare parts ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net (loss)/profit on disposal of non-current assets ', 42), (' Investment in joint venture ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Commision rebate ', 42), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' other ', 100), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' other income ', 64), (' Asset impairment ', 58), (' quota lease income ', 56), (' Net foreign losses ', 56), (' plant and equipment ', 53), (' dividend from other parties ', 52), (' Power purchase agreement unrelaised gain ', 51), (' government grants ', 50), (' net foreign exchange gain ', 50), (' Sub-lease rental income ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' Other expense - Net loss on sale or property, plant and equipment ', 49), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Other income - Bank guarantee ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Arising from inventory of spare parts ', 47), (' Miscellanous income ', 47), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' margin charge income ', 44), (' Loss on loan refinancing ', 44), (' Arising from inventory of cranes ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' effective portion of changes in fair value of cash flow ', 42), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' net (loss)/profit on disposal of non-current assets ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' insurance proceeds ', 36), (' commission revenue ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' Miscellanous income ', 60), (' Profit on sale of assets ', 59), (' Other expense - Net loss on sale or property, plant and equipment ', 59), ('other revenue ', 58), (' sundry income ', 58), (' margin charge income ', 56), (' quota lease income ', 56), (' Sub-lease rental income ', 55), (' Other expense - Loss on inventory obsolescence ', 53), (' dividend from other parties ', 52), (' profit from discontinued operation ', 52), (' Interest on unwinding of discount in provisions ', 52), (' Profit from discontinued operation ', 52), (' net other foreign exchange (losses)/gains ', 51), (' Power purchase agreement realised gain ', 51), (' Net other foreign exchange (losses)/gains ', 51), (' commission revenue ', 50), (' Loss on sale of disposal of assets ', 50), (' Loss on loan refinancing ', 50), (' Net foreign losses ', 50), (' Power purchase agreement unrelaised gain ', 49), (' secondment income (tw recovery) ', 48), (' Other income - Bank guarantee ', 48), (' net (loss)/profit on disposal of non-current assets ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Arising from inventory of cranes ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' net foreign exchange gains/(losses) ', 41), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange gains/(losses) ', 41), (' Net foreign exchange (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 39), (' Derivaties at FVTPL- net change in fair value ', 35), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 64), (' quota lease income ', 62), (' sundry income ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' Profit on sale of assets ', 53), (' Miscellanous income ', 53), (' profit from discontinued operation ', 52), (' Profit from discontinued operation ', 52), (' net (loss)/profit on disposal of non-current assets ', 51), (' Net (loss)/profit on disposal of non-current assets ', 51), (' government grants ', 50), (' Net foreign losses ', 50), (' secondment income (tw recovery) ', 48), (' Other income - Bank guarantee ', 48), (' net other foreign exchange (losses)/gains ', 47), (' Investment in joint venture ', 47), (' Net other foreign exchange (losses)/gains ', 47), (' net foreign exchange gain ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' Sub-lease rental income ', 45), (' net foreign exchange (loss)/gain ', 44), (' Loss on loan refinancing ', 44), (' Net foreign exchange (loss)/gain ', 44), (' Arising from inventory of cranes ', 44), (' japan recoveries ', 43), (' Other expense - Net loss on sale or property, plant and equipment ', 43), ('other revenue ', 42), (' paid by customers - at amortised cost ', 42), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' foreign exchange gain ', 41), (' net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' Net foreign exchange gains/(losses) ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' other ', 40), (' net gain / loss on disposal of property plant and equipment  ', 40), (' Arising from inventory of spare parts ', 40), (' Share of gain/(loss) of joint venture ', 39), (' effective portion of changes in fair value of cash flow ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' Loss on sale of disposal of assets ', 36), (' Impairment loss ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' Power purchase agreement realised gain ', 35), (' Other expense - Loss on inventory obsolescence ', 35), (' Power purchase agreement unrelaised gain ', 34), (' plant and equipment ', 33), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [(' sundry income ', 75), (' other income ', 73), (' Other income - Bank guarantee ', 67), (' share of jv income ', 64), (' Commision rebate ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' margin charge income ', 56), (' Sub-lease rental income ', 55), (' paid by customers - at amortised cost ', 54), (' Miscellanous income ', 53), (' quota lease income ', 50), (' secondment income (tw recovery) ', 48), (' Arising from inventory of cranes ', 48), (' Net foreign losses ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' commission revenue ', 43), (' Arising from inventory of spare parts ', 43), ('other revenue ', 42), (' government grants ', 42), (' net (loss)/profit on disposal of non-current assets ', 42), (' Asset impairment ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' other miscellaneous - net (loss)/gain ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Power purchase agreement unrelaised gain ', 41), (' other miscellaneous - net (loss)/gain ', 41), (' foreign exchange gain ', 40), (' other ', 40), (' dividend from other parties ', 40), (' net other foreign exchange (losses)/gains ', 40), (' Power purchase agreement realised gain ', 40), (' plant and equipment ', 40), (' Net other foreign exchange (losses)/gains ', 40), (' Bank charges', 40), (' Share of gain/(loss) of joint venture ', 39), (' Loss on loan refinancing ', 39), (' net foreign exchange gain ', 38), (' net foreign exchange gains/(losses) ', 38), (' net foreign exchange (loss)/gain ', 38), (' Remuneration from services linked to newly acquired entities ', 38), (' net gain / loss on disposal of property plant and equipment  ', 38), (' Net loss on disposal of property ', 38), (' Net foreign exchange gains/(losses) ', 38), (' Net foreign exchange (loss)/gain ', 38), (' profit from discontinued operation ', 37), (' Profit from discontinued operation ', 37), (' insurance proceeds ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' Derivaties at FVTPL- net change in fair value ', 36), (' effective portion of changes in fair value of cash flow ', 33), (' net ppe disposal (loss)/gain ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Other expense - Loss on inventory obsolescence ', 33), (' Accretion expense ', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [(' Accretion expense ', 69), (' other ', 60), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' secondment income (tw recovery) ', 48), (' plant and equipment ', 47), (' net foreign exchange gain ', 46), (' insurance proceeds ', 45), (' other income ', 45), (' net foreign exchange gains/(losses) ', 45), (' net other foreign exchange (losses)/gains ', 45), (' Net foreign exchange gains/(losses) ', 45), (' Net other foreign exchange (losses)/gains ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' quota lease income ', 44), (' Net foreign losses ', 44), (' Other income - Bank guarantee ', 44), (' net gain / loss on disposal of property plant and equipment  ', 43), ('other revenue ', 42), (' government grants ', 42), (' net foreign exchange (loss)/gain ', 42), (' Power purchase agreement realised gain ', 42), (' Power purchase agreement unrelaised gain ', 42), (' Investment in joint venture ', 42), (' Interest on unwinding of discount in provisions ', 42), (' Net loss on disposal of property ', 42), (' Net foreign exchange (loss)/gain ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' profit from discontinued operation ', 41), (' Profit from discontinued operation ', 41), (' foreign exchange gain ', 40), (' Sub-lease rental income ', 40), (' Arising from inventory of cranes ', 40), (' Remuneration from services linked to newly acquired entities ', 39), (' Share of gain/(loss) of joint venture ', 39), (' Loss on loan refinancing ', 39), (' paid by customers - at amortised cost ', 38), (' net ppe disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Net PPE disposal (loss)/gain ', 38), (' other miscellaneous - net (loss)/gain ', 38), (' Arising from inventory of spare parts ', 37), (' commission revenue ', 36), (' dividend from other parties ', 36), (' japan recoveries ', 36), (' Impairment loss ', 36), (' effective portion of changes in fair value of cash flow ', 35), (' Profit on sale of assets ', 35), (' sundry income ', 33), (' Asset impairment ', 33), (' Miscellanous income ', 33), (' Commision rebate ', 33), (' net (loss)/profit on disposal of non-current assets ', 32), (' Loss on sale of disposal of assets ', 32), (' Net (loss)/profit on disposal of non-current assets ', 32), (' Derivaties at FVTPL- net change in fair value ', 32), (' Bank charges', 30), (' margin charge income ', 28), (' share of jv income ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' Accretion expense ', 69), ('other revenue ', 58), (' net of tax ', 57), (' net of tax ', 57), (' net of tax ', 57), (' net other foreign exchange (losses)/gains ', 56), (' Net other foreign exchange (losses)/gains ', 56), (' Other income - Bank guarantee ', 51), (' Interest on unwinding of discount in provisions ', 48), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 44), (' net gain / loss on disposal of property plant and equipment  ', 44), (' other miscellaneous - net (loss)/gain ', 44), (' Net foreign losses ', 44), (' Other expense - Net loss on sale or property, plant and equipment ', 44), (' Other expense - Loss on inventory obsolescence ', 44), (' government grants ', 42), (' net foreign exchange gain ', 42), (' Investment in joint venture ', 42), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange (loss)/gain ', 41), (' plant and equipment ', 40), (' Bank charges', 40), (' secondment income (tw recovery) ', 38), (' quota lease income ', 38), (' net (loss)/profit on disposal of non-current assets ', 38), (' Net loss on disposal of property ', 38), (' Net (loss)/profit on disposal of non-current assets ', 38), (' profit from discontinued operation ', 37), (' net foreign exchange gains/(losses) ', 37), (' Remuneration from services linked to newly acquired entities ', 37), (' Power purchase agreement realised gain ', 37), (' Power purchase agreement unrelaised gain ', 37), (' Share of gain/(loss) of joint venture ', 37), (' Profit from discontinued operation ', 37), (' Net foreign exchange gains/(losses) ', 37), (' commission revenue ', 36), (' insurance proceeds ', 36), (' dividend from other parties ', 36), (' Profit on sale of assets ', 35), (' effective portion of changes in fair value of cash flow ', 33), (' net ppe disposal (loss)/gain ', 33), (' sundry income ', 33), (' Asset impairment ', 33), (' Loss on loan refinancing ', 33), (' Net PPE disposal (loss)/gain ', 33), (' Arising from inventory of spare parts ', 33), (' Loss on sale of disposal of assets ', 32), (' Arising from inventory of cranes ', 32), (' foreign exchange gain ', 30), (' Sub-lease rental income ', 30), (' Derivaties at FVTPL- net change in fair value ', 30), (' japan recoveries ', 29), (' paid by customers - at amortised cost ', 29), (' margin charge income ', 28), (' Impairment loss ', 27), (' Miscellanous income ', 27), (' Commision rebate ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' other ', 100), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' Profit on sale of assets ', 65), (' Asset impairment ', 58), (' quota lease income ', 56), (' net (loss)/profit on disposal of non-current assets ', 56), (' Loss on loan refinancing ', 56), (' Arising from inventory of cranes ', 56), (' Net (loss)/profit on disposal of non-current assets ', 56), (' Net foreign losses ', 56), (' other income ', 55), (' plant and equipment ', 53), (' dividend from other parties ', 52), (' Power purchase agreement unrelaised gain ', 51), (' government grants ', 50), (' net foreign exchange gain ', 50), (' japan recoveries ', 50), (' Sub-lease rental income ', 50), (' Loss on sale of disposal of assets ', 50), (' Arising from inventory of spare parts ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Other income - Bank guarantee ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Miscellanous income ', 47), (' Other expense - Loss on inventory obsolescence ', 47), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Other expense - Net loss on sale or property, plant and equipment ', 45), (' margin charge income ', 44), (' secondment income (tw recovery) ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' profit from discontinued operation ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' effective portion of changes in fair value of cash flow ', 40), (' commission revenue ', 36), (' insurance proceeds ', 36)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' other ', 100), (' other income ', 73), (' share of jv income ', 73), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' sundry income ', 67), (' Asset impairment ', 58), (' margin charge income ', 56), (' quota lease income ', 56), (' Loss on loan refinancing ', 56), (' Net foreign losses ', 56), (' insurance proceeds ', 55), (' plant and equipment ', 53), (' Miscellanous income ', 53), (' dividend from other parties ', 52), (' Other income - Bank guarantee ', 52), (' Power purchase agreement unrelaised gain ', 51), (' commission revenue ', 50), (' government grants ', 50), (' net foreign exchange gain ', 50), (' paid by customers - at amortised cost ', 50), (' Sub-lease rental income ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' effective portion of changes in fair value of cash flow ', 48), (' profit from discontinued operation ', 48), (' secondment income (tw recovery) ', 48), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Profit from discontinued operation ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' other miscellaneous - net (loss)/gain ', 48), (' Arising from inventory of cranes ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Arising from inventory of spare parts ', 47), (' Other expense - Net loss on sale or property, plant and equipment ', 47), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' net (loss)/profit on disposal of non-current assets ', 42), (' Investment in joint venture ', 42), (' Net (loss)/profit on disposal of non-current assets ', 42), (' Commision rebate ', 42), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' Other expense - Loss on inventory obsolescence ', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' other ', 100), (' net of tax ', 71), (' net of tax ', 71), (' net of tax ', 71), ('other revenue ', 67), (' other income ', 64), (' Asset impairment ', 58), (' quota lease income ', 56), (' Net foreign losses ', 56), (' plant and equipment ', 53), (' dividend from other parties ', 52), (' Power purchase agreement unrelaised gain ', 51), (' government grants ', 50), (' net foreign exchange gain ', 50), (' Sub-lease rental income ', 50), (' Bank charges', 50), (' net other foreign exchange (losses)/gains ', 49), (' Power purchase agreement realised gain ', 49), (' Net other foreign exchange (losses)/gains ', 49), (' Other expense - Net loss on sale or property, plant and equipment ', 49), (' net foreign exchange gains/(losses) ', 48), (' net foreign exchange (loss)/gain ', 48), (' Net foreign exchange gains/(losses) ', 48), (' Net foreign exchange (loss)/gain ', 48), (' Other income - Bank guarantee ', 48), (' net gain / loss on disposal of property plant and equipment  ', 47), (' Arising from inventory of spare parts ', 47), (' Miscellanous income ', 47), (' paid by customers - at amortised cost ', 46), (' net ppe disposal (loss)/gain ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' Net PPE disposal (loss)/gain ', 46), (' foreign exchange gain ', 45), (' share of jv income ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' Interest on unwinding of discount in provisions ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' margin charge income ', 44), (' Loss on loan refinancing ', 44), (' Arising from inventory of cranes ', 44), (' secondment income (tw recovery) ', 43), (' japan recoveries ', 43), (' Remuneration from services linked to newly acquired entities ', 43), (' effective portion of changes in fair value of cash flow ', 42), (' sundry income ', 42), (' Investment in joint venture ', 42), (' Commision rebate ', 42), (' Other expense - Loss on inventory obsolescence ', 42), (' profit from discontinued operation ', 41), (' Profit on sale of assets ', 41), (' Loss on sale of disposal of assets ', 41), (' Profit from discontinued operation ', 41), (' Derivaties at FVTPL- net change in fair value ', 41), (' net (loss)/profit on disposal of non-current assets ', 39), (' Net (loss)/profit on disposal of non-current assets ', 39), (' insurance proceeds ', 36), (' commission revenue ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' other income ', 73), (' share of jv income ', 73), (' other ', 60), (' Miscellanous income ', 60), (' Profit on sale of assets ', 59), (' Other expense - Net loss on sale or property, plant and equipment ', 59), ('other revenue ', 58), (' sundry income ', 58), (' margin charge income ', 56), (' quota lease income ', 56), (' Sub-lease rental income ', 55), (' Other expense - Loss on inventory obsolescence ', 53), (' dividend from other parties ', 52), (' profit from discontinued operation ', 52), (' Interest on unwinding of discount in provisions ', 52), (' Profit from discontinued operation ', 52), (' net other foreign exchange (losses)/gains ', 51), (' Power purchase agreement realised gain ', 51), (' Net other foreign exchange (losses)/gains ', 51), (' commission revenue ', 50), (' Loss on sale of disposal of assets ', 50), (' Loss on loan refinancing ', 50), (' Net foreign losses ', 50), (' Power purchase agreement unrelaised gain ', 49), (' secondment income (tw recovery) ', 48), (' Other income - Bank guarantee ', 48), (' net (loss)/profit on disposal of non-current assets ', 47), (' Investment in joint venture ', 47), (' plant and equipment ', 47), (' Net (loss)/profit on disposal of non-current assets ', 47), (' net foreign exchange gain ', 46), (' paid by customers - at amortised cost ', 46), (' Share of gain/(loss) of joint venture ', 46), (' Net loss on disposal of property ', 46), (' Accretion expense ', 46), (' insurance proceeds ', 45), (' foreign exchange gain ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' Impairment loss ', 45), (' other miscellaneous - net (loss)/gain ', 45), (' net gain / loss on disposal of property plant and equipment  ', 44), (' Arising from inventory of cranes ', 44), (' net of tax ', 43), (' japan recoveries ', 43), (' net of tax ', 43), (' net of tax ', 43), (' Arising from inventory of spare parts ', 43), (' government grants ', 42), (' effective portion of changes in fair value of cash flow ', 42), (' net ppe disposal (loss)/gain ', 42), (' Asset impairment ', 42), (' Net PPE disposal (loss)/gain ', 42), (' Commision rebate ', 42), (' net foreign exchange gains/(losses) ', 41), (' net foreign exchange (loss)/gain ', 41), (' Net foreign exchange gains/(losses) ', 41), (' Net foreign exchange (loss)/gain ', 41), (' Remuneration from services linked to newly acquired entities ', 39), (' Derivaties at FVTPL- net change in fair value ', 35), (' Bank charges', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('other revenue ', 0), (' commission revenue ', 0), (' government grants ', 0), (' insurance proceeds ', 0), (' foreign exchange gain ', 0), (' other ', 0), (' dividend from other parties ', 0), (' other income ', 0), (' net foreign exchange gain ', 0), (' effective portion of changes in fair value of cash flow ', 0), (' profit from discontinued operation ', 0), (' net of tax ', 0), (' share of jv income ', 0), (' secondment income (tw recovery) ', 0), (' japan recoveries ', 0), (' margin charge income ', 0), (' net foreign exchange gains/(losses) ', 0), (' paid by customers - at amortised cost ', 0), (' net foreign exchange (loss)/gain ', 0), (' net ppe disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' quota lease income ', 0), (' sundry income ', 0), (' net (loss)/profit on disposal of non-current assets ', 0), (' net other foreign exchange (losses)/gains ', 0), (' Sub-lease rental income ', 0), (' Profit on sale of assets ', 0), (' Asset impairment ', 0), (' Loss on sale of disposal of assets ', 0), (' Remuneration from services linked to newly acquired entities ', 0), (' Power purchase agreement realised gain ', 0), (' Power purchase agreement unrelaised gain ', 0), (' net gain / loss on disposal of property plant and equipment  ', 0), (' Investment in joint venture ', 0), (' Share of gain/(loss) of joint venture ', 0), (' net of tax ', 0), (' Impairment loss ', 0), (' Interest on unwinding of discount in provisions ', 0), (' Profit from discontinued operation ', 0), (' net of tax ', 0), (' Net loss on disposal of property ', 0), (' plant and equipment ', 0), (' Net foreign exchange gains/(losses) ', 0), (' Accretion expense ', 0), (' Loss on loan refinancing ', 0), (' Net foreign exchange (loss)/gain ', 0), (' Net PPE disposal (loss)/gain ', 0), (' other miscellaneous - net (loss)/gain ', 0), (' Arising from inventory of cranes ', 0), (' Arising from inventory of spare parts ', 0), (' Net (loss)/profit on disposal of non-current assets ', 0), (' Net other foreign exchange (losses)/gains ', 0), (' Miscellanous income ', 0), (' Commision rebate ', 0), (' Net foreign losses ', 0), (' Derivaties at FVTPL- net change in fair value ', 0), (' Other income - Bank guarantee ', 0), (' Other expense - Net loss on sale or property, plant and equipment ', 0), (' Other expense - Loss on inventory obsolescence ', 0), (' Bank charges', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [3, 4, 5, 6, 11, 12, 13, 14], 'score': [100, 100, 100, 100, 100, 100, 100, 100], 'value': [590.0, -585.0, -488.0, -172.0, 154.0, 320.0, 82.0, -299.0], 'label': ['None Other non-deductible expense', 'Net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset', 'Net impact due to tax treatment of finance leases and other net temporary Income tax adjustment from previous years', 'Net impact due to tax treatment of finance leases and other net temporary Effect of lower tax rate in New Zealand', 'None Other non-deductible expense', 'Net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset', 'Net impact due to tax treatment of finance leases and other net temporary Income tax adjustment from previous years', 'Net impact due to tax treatment of finance leases and other net temporary Effect of lower tax rate in New Zealand'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:53+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = oie_oi
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('NULL', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('NULL', 4)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('NULL', 6)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('NULL', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('NULL', 4)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('NULL', 6)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_taxes
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' tax (expense)/benefit', 70), (' income tax benefit/(expense)', 61), (' income tax benefit', 56), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 33), ('deferred tax', 32), (' income tax expense', 32), ('provision for taxation previous year', 31), ('current tax', 30), ('earlier year', 29), (' income tax', 26), ('prior year ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('amount transferred to retained earnings', 53), (' tax (expense)/benefit', 45), (' income tax benefit/(expense)', 40), ('earlier year', 37), ('provision for taxation previous year', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('prior year ', 28), (' income tax benefit', 28), ('current tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 38), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 27), (' income tax benefit', 25), ('current tax', 24), ('earlier year', 24), (' income tax expense', 20), ('deferred tax', 19), ('prior year ', 18), (' income tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('amount transferred to retained earnings', 45), ('minimum alternate tax credit entitlement', 37), (' income tax benefit/(expense)', 35), (' income tax expense', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('earlier year', 29), ('deferred tax', 26), (' tax (expense)/benefit', 25), ('current tax', 24), ('provision for taxation previous year', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' income tax benefit', 62), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), ('provision for taxation previous year', 55), ('minimum alternate tax credit entitlement', 48), ('deferred tax', 45), ('amount transferred to retained earnings', 45), (' tax (expense)/benefit', 45), ('current tax', 42), ('prior year ', 38), ('earlier year', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('minimum alternate tax credit entitlement', 33), (' income tax benefit/(expense)', 31), (' income tax benefit', 29), (' tax (expense)/benefit', 26), ('current tax', 23), ('prior year ', 23), (' income tax', 23), ('earlier year', 19), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('minimum alternate tax credit entitlement', 33), (' income tax benefit/(expense)', 31), (' income tax benefit', 29), (' tax (expense)/benefit', 26), ('current tax', 23), ('prior year ', 23), (' income tax', 23), ('earlier year', 19), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 43), (' income tax benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('minimum alternate tax credit entitlement', 40), (' tax (expense)/benefit', 36), ('earlier year', 30), ('deferred tax', 28), (' income tax', 28), ('current tax', 24), ('prior year ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('deferred tax', 50), (' income tax', 50), ('current tax', 43), (' income tax expense', 32), (' income tax benefit', 30), (' tax (expense)/benefit', 29), (' income tax benefit/(expense)', 22), ('provision for taxation previous year', 19), ('minimum alternate tax credit entitlement', 17), ('prior year ', 15), ('amount transferred to retained earnings', 13), ('earlier year', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax expense', 48), ('provision for taxation previous year', 45), ('amount transferred to retained earnings', 43), ('minimum alternate tax credit entitlement', 40), (' tax (expense)/benefit', 39), (' income tax', 38), ('deferred tax', 34), ('current tax', 33), ('earlier year', 32), ('prior year ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' income tax benefit/(expense)', 41), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), ('provision for taxation previous year', 38), (' income tax expense', 37), (' tax (expense)/benefit', 36), (' income tax', 31), ('current tax', 30), ('deferred tax', 28), ('earlier year', 26), ('prior year ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' income tax benefit/(expense)', 55), (' income tax benefit', 54), (' income tax expense', 51), (' income tax', 45), ('minimum alternate tax credit entitlement', 44), (' tax (expense)/benefit', 41), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 33), ('provision for taxation previous year', 33), ('earlier year', 23), ('prior year ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' income tax expense', 40), ('amount transferred to retained earnings', 39), ('provision for taxation previous year', 38), (' income tax benefit/(expense)', 36), (' income tax benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 28), ('current tax', 27), ('prior year ', 27), (' tax (expense)/benefit', 27), ('earlier year', 23), ('deferred tax', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('prior year ', 50), ('earlier year', 38), ('provision for taxation previous year', 33), (' income tax expense', 33), ('amount transferred to retained earnings', 29), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), (' income tax benefit', 26), (' income tax benefit/(expense)', 26), (' tax (expense)/benefit', 25), ('current tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 32), (' income tax benefit/(expense)', 28), (' income tax expense', 25), (' tax (expense)/benefit', 25), ('current tax', 22), ('prior year ', 22), (' income tax benefit', 22), ('earlier year', 19), ('deferred tax', 17), (' income tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 32), (' income tax benefit/(expense)', 28), (' income tax expense', 25), (' tax (expense)/benefit', 25), ('current tax', 22), ('prior year ', 22), (' income tax benefit', 22), ('earlier year', 19), ('deferred tax', 17), (' income tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 39), ('earlier year', 36), (' income tax benefit/(expense)', 35), ('minimum alternate tax credit entitlement', 34), (' income tax expense', 33), ('current tax', 32), ('prior year ', 32), (' tax (expense)/benefit', 31), (' income tax benefit', 23), (' income tax', 22), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' income tax benefit', 63), (' income tax expense', 60), (' income tax benefit/(expense)', 58), (' tax (expense)/benefit', 57), (' income tax', 55), ('minimum alternate tax credit entitlement', 43), ('deferred tax', 42), ('provision for taxation previous year', 42), ('current tax', 40), ('amount transferred to retained earnings', 39), ('prior year ', 29), ('earlier year', 28)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 31), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), (' tax (expense)/benefit', 26), ('current tax', 25), ('prior year ', 23), ('earlier year', 22), ('deferred tax', 20), (' income tax', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('prior year ', 50), ('earlier year', 38), ('provision for taxation previous year', 33), (' income tax expense', 33), ('amount transferred to retained earnings', 29), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), (' income tax benefit', 26), (' income tax benefit/(expense)', 26), (' tax (expense)/benefit', 25), ('current tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 46), (' income tax benefit', 41), (' income tax benefit/(expense)', 40), ('prior year ', 39), ('amount transferred to retained earnings', 38), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' tax (expense)/benefit', 34), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -52593.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['5'], 'line_item_value': [-52593.0]}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['current tax', 'deferred tax', 'minimum alternate tax credit entitlement', 'amount transferred to retained earnings', 'provision for taxation previous year', 'earlier year', 'prior year ', ' income tax expense', ' income tax', ' income tax benefit', ' income tax benefit/(expense)', ' tax (expense)/benefit'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('minimum alternate tax credit entitlement', 38), ('current tax', 37), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 33), (' income tax benefit', 33), (' income tax benefit/(expense)', 32), (' tax (expense)/benefit', 32), (' income tax expense', 29), (' income tax', 29), ('prior year ', 24), ('deferred tax', 20), ('earlier year', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' income tax benefit', 55), (' income tax expense', 50), (' income tax benefit/(expense)', 50), (' income tax', 48), ('minimum alternate tax credit entitlement', 32), ('amount transferred to retained earnings', 31), (' tax (expense)/benefit', 27), ('provision for taxation previous year', 20), ('deferred tax', 19), ('prior year ', 18), ('current tax', 17), ('earlier year', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' income tax', 70), (' income tax expense', 52), (' income tax benefit', 50), ('prior year ', 48), (' income tax benefit/(expense)', 40), ('provision for taxation previous year', 35), ('earlier year', 35), ('amount transferred to retained earnings', 32), (' tax (expense)/benefit', 28), ('current tax', 27), ('minimum alternate tax credit entitlement', 23), ('deferred tax', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [(' income tax', 44), ('current tax', 40), ('prior year ', 32), (' income tax expense', 32), (' income tax benefit', 31), (' tax (expense)/benefit', 30), ('earlier year', 29), ('amount transferred to retained earnings', 28), ('provision for taxation previous year', 26), (' income tax benefit/(expense)', 24), ('deferred tax', 22), ('minimum alternate tax credit entitlement', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' tax (expense)/benefit', 70), (' income tax benefit/(expense)', 61), (' income tax benefit', 56), ('minimum alternate tax credit entitlement', 37), ('amount transferred to retained earnings', 33), ('deferred tax', 32), (' income tax expense', 32), ('provision for taxation previous year', 31), ('current tax', 30), ('earlier year', 29), (' income tax', 26), ('prior year ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('amount transferred to retained earnings', 53), (' tax (expense)/benefit', 45), (' income tax benefit/(expense)', 40), ('earlier year', 37), ('provision for taxation previous year', 36), ('minimum alternate tax credit entitlement', 34), ('deferred tax', 29), (' income tax expense', 29), (' income tax', 29), ('prior year ', 28), (' income tax benefit', 28), ('current tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('minimum alternate tax credit entitlement', 44), ('amount transferred to retained earnings', 41), ('provision for taxation previous year', 38), (' income tax benefit/(expense)', 30), (' tax (expense)/benefit', 27), (' income tax benefit', 25), ('current tax', 24), ('earlier year', 24), (' income tax expense', 20), ('deferred tax', 19), ('prior year ', 18), (' income tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('amount transferred to retained earnings', 45), ('minimum alternate tax credit entitlement', 37), (' income tax benefit/(expense)', 35), (' income tax expense', 32), (' income tax', 32), ('prior year ', 31), (' income tax benefit', 31), ('earlier year', 29), ('deferred tax', 26), (' tax (expense)/benefit', 25), ('current tax', 24), ('provision for taxation previous year', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [(' income tax expense', 64), (' tax (expense)/benefit', 53), (' income tax benefit/(expense)', 50), ('earlier year', 42), ('deferred tax', 38), ('amount transferred to retained earnings', 36), ('prior year ', 36), ('current tax', 35), ('provision for taxation previous year', 34), (' income tax benefit', 34), (' income tax', 29), ('minimum alternate tax credit entitlement', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' income tax', 40), ('amount transferred to retained earnings', 37), (' income tax expense', 37), ('current tax', 36), (' income tax benefit', 36), ('prior year ', 29), (' income tax benefit/(expense)', 29), ('minimum alternate tax credit entitlement', 28), (' tax (expense)/benefit', 28), ('provision for taxation previous year', 25), ('deferred tax', 20), ('earlier year', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' income tax benefit', 67), ('provision for taxation previous year', 59), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), (' tax (expense)/benefit', 50), ('deferred tax', 45), ('current tax', 42), ('minimum alternate tax credit entitlement', 41), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('earlier year', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [(' income tax expense', 100), (' income tax benefit/(expense)', 80), (' income tax benefit', 73), (' income tax', 72), (' tax (expense)/benefit', 59), ('deferred tax', 48), ('minimum alternate tax credit entitlement', 46), ('current tax', 44), ('prior year ', 38), ('amount transferred to retained earnings', 37), ('provision for taxation previous year', 36), ('earlier year', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' income tax benefit', 62), (' income tax expense', 58), (' income tax', 58), (' income tax benefit/(expense)', 57), ('provision for taxation previous year', 55), ('minimum alternate tax credit entitlement', 48), ('deferred tax', 45), ('amount transferred to retained earnings', 45), (' tax (expense)/benefit', 45), ('current tax', 42), ('prior year ', 38), ('earlier year', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' income tax expense', 63), (' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax', 45), ('prior year ', 44), ('provision for taxation previous year', 43), ('minimum alternate tax credit entitlement', 41), ('amount transferred to retained earnings', 41), ('current tax', 36), (' tax (expense)/benefit', 30), ('earlier year', 29), ('deferred tax', 26)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('minimum alternate tax credit entitlement', 33), (' income tax benefit/(expense)', 31), (' income tax benefit', 29), (' tax (expense)/benefit', 26), ('current tax', 23), ('prior year ', 23), (' income tax', 23), ('earlier year', 19), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('provision for taxation previous year', 36), ('amount transferred to retained earnings', 34), (' income tax expense', 34), ('minimum alternate tax credit entitlement', 33), (' income tax benefit/(expense)', 31), (' income tax benefit', 29), (' tax (expense)/benefit', 26), ('current tax', 23), ('prior year ', 23), (' income tax', 23), ('earlier year', 19), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' income tax benefit/(expense)', 50), ('amount transferred to retained earnings', 43), (' income tax benefit', 43), ('provision for taxation previous year', 42), (' income tax expense', 41), ('minimum alternate tax credit entitlement', 40), (' tax (expense)/benefit', 36), ('earlier year', 30), ('deferred tax', 28), (' income tax', 28), ('current tax', 24), ('prior year ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('deferred tax', 50), (' income tax', 50), ('current tax', 43), (' income tax expense', 32), (' income tax benefit', 30), (' tax (expense)/benefit', 29), (' income tax benefit/(expense)', 22), ('provision for taxation previous year', 19), ('minimum alternate tax credit entitlement', 17), ('prior year ', 15), ('amount transferred to retained earnings', 13), ('earlier year', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' income tax benefit/(expense)', 52), (' income tax benefit', 51), (' income tax expense', 48), ('provision for taxation previous year', 45), ('amount transferred to retained earnings', 43), ('minimum alternate tax credit entitlement', 40), (' tax (expense)/benefit', 39), (' income tax', 38), ('deferred tax', 34), ('current tax', 33), ('earlier year', 32), ('prior year ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' income tax benefit/(expense)', 41), ('minimum alternate tax credit entitlement', 40), ('amount transferred to retained earnings', 39), (' income tax benefit', 39), ('provision for taxation previous year', 38), (' income tax expense', 37), (' tax (expense)/benefit', 36), (' income tax', 31), ('current tax', 30), ('deferred tax', 28), ('earlier year', 26), ('prior year ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' income tax benefit/(expense)', 55), (' income tax benefit', 54), (' income tax expense', 51), (' income tax', 45), ('minimum alternate tax credit entitlement', 44), (' tax (expense)/benefit', 41), ('deferred tax', 35), ('amount transferred to retained earnings', 34), ('current tax', 33), ('provision for taxation previous year', 33), ('earlier year', 23), ('prior year ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' income tax expense', 40), ('amount transferred to retained earnings', 39), ('provision for taxation previous year', 38), (' income tax benefit/(expense)', 36), (' income tax benefit', 33), ('minimum alternate tax credit entitlement', 32), (' income tax', 28), ('current tax', 27), ('prior year ', 27), (' tax (expense)/benefit', 27), ('earlier year', 23), ('deferred tax', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('prior year ', 50), ('earlier year', 38), ('provision for taxation previous year', 33), (' income tax expense', 33), ('amount transferred to retained earnings', 29), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), (' income tax benefit', 26), (' income tax benefit/(expense)', 26), (' tax (expense)/benefit', 25), ('current tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 32), (' income tax benefit/(expense)', 28), (' income tax expense', 25), (' tax (expense)/benefit', 25), ('current tax', 22), ('prior year ', 22), (' income tax benefit', 22), ('earlier year', 19), ('deferred tax', 17), (' income tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 32), (' income tax benefit/(expense)', 28), (' income tax expense', 25), (' tax (expense)/benefit', 25), ('current tax', 22), ('prior year ', 22), (' income tax benefit', 22), ('earlier year', 19), ('deferred tax', 17), (' income tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('amount transferred to retained earnings', 48), ('provision for taxation previous year', 39), ('earlier year', 36), (' income tax benefit/(expense)', 35), ('minimum alternate tax credit entitlement', 34), (' income tax expense', 33), ('current tax', 32), ('prior year ', 32), (' tax (expense)/benefit', 31), (' income tax benefit', 23), (' income tax', 22), ('deferred tax', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' income tax benefit', 63), (' income tax expense', 60), (' income tax benefit/(expense)', 58), (' tax (expense)/benefit', 57), (' income tax', 55), ('minimum alternate tax credit entitlement', 43), ('deferred tax', 42), ('provision for taxation previous year', 42), ('current tax', 40), ('amount transferred to retained earnings', 39), ('prior year ', 29), ('earlier year', 28)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('amount transferred to retained earnings', 38), ('provision for taxation previous year', 35), ('minimum alternate tax credit entitlement', 31), (' income tax expense', 29), (' income tax benefit', 29), (' income tax benefit/(expense)', 29), (' tax (expense)/benefit', 26), ('current tax', 25), ('prior year ', 23), ('earlier year', 22), ('deferred tax', 20), (' income tax', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('prior year ', 50), ('earlier year', 38), ('provision for taxation previous year', 33), (' income tax expense', 33), ('amount transferred to retained earnings', 29), ('deferred tax', 26), ('minimum alternate tax credit entitlement', 26), (' income tax', 26), (' income tax benefit', 26), (' income tax benefit/(expense)', 26), (' tax (expense)/benefit', 25), ('current tax', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('provision for taxation previous year', 46), (' income tax expense', 46), (' income tax benefit', 41), (' income tax benefit/(expense)', 40), ('prior year ', 39), ('amount transferred to retained earnings', 38), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' tax (expense)/benefit', 34), (' income tax', 32), ('current tax', 31), ('deferred tax', 28)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' income tax expense', 51), ('provision for taxation previous year', 47), (' income tax benefit', 46), (' income tax benefit/(expense)', 44), ('prior year ', 40), ('amount transferred to retained earnings', 39), ('earlier year', 38), ('minimum alternate tax credit entitlement', 36), (' income tax', 36), ('current tax', 35), (' tax (expense)/benefit', 34), ('deferred tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [11], 'score': 100, 'value': -57961.0, 'line_item_label': ['Income tax expense'], 'note_numbers': ['5'], 'line_item_value': [-57961.0]}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' current income tax', 100), ('income tax expense', 75), (' deferred income tax', 73), (' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 48)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' current income tax', 100), ('income tax expense', 75), (' deferred income tax', 73), (' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 50), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 40), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total tax (expense)/benefit in income statement', 65), (' current income tax', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 57), (' total income tax expense / (benefit)', 57), (' deferred income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: current income tax charge , res_fuzz_match = [(' current income tax', 100), ('income tax expense', 75), (' deferred income tax', 73), (' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 51), (' total tax (expense)/benefit in income statement', 48)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = current income tax: adjustments in respect of current income tax of previous year , res_fuzz_match = [(' current income tax', 100), ('income tax expense', 75), (' deferred income tax', 73), (' income tax expense on continuing operations', 59), (' total income tax expense / (benefit)', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' total tax (expense)/benefit in income statement', 52)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = deferred tax: relating to the origination and reversal of temporary differences , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 50), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' total tax (expense)/benefit in income statement', 40), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = income tax expense reported in the consolidated statement of profit or loss and other comprehensive income , res_fuzz_match = [('income tax expense', 100), (' income tax expense on continuing operations', 72), (' total tax (expense)/benefit in income statement', 65), (' current income tax', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 57), (' total income tax expense / (benefit)', 57), (' deferred income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 1, 3, 4, 5, 7], 'score': [100, 100, 100, 100, 100, 100], 'value': [55998.0, -737.0, 57961.0, 55494.0, -160.0, 52593.0], 'label': ['Current income tax: Current income tax charge', 'Current income tax: Adjustments in respect of current income tax of previous year', 'Income tax expense reported in the consolidated statement of profit or loss and other comprehensive income', 'Current income tax: Current income tax charge', 'Current income tax: Adjustments in respect of current income tax of previous year', 'Income tax expense reported in the consolidated statement of profit or loss and other comprehensive income'], 'year': [], 'colname_found': ['rows', 'rows', 'rows', 'rows', 'rows', 'rows']}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred income tax', 62), (' current income tax', 60), (' total tax (expense)/benefit in income statement', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), ('income tax expense', 36), (' current income tax', 36), (' deferred income tax', 36), (' total income tax expense / (benefit)', 36), (' total tax (expense)/benefit in income statement', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 43), ('income tax expense', 38), (' current income tax', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' income tax expense on continuing operations', 43), (' total income tax expense / (benefit)', 43), (' current income tax', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' deferred income tax', 40), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense / (benefit)', 34), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), ('income tax expense', 40), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), (' current income tax', 30), (' total tax (expense)/benefit in income statement', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), ('income tax expense', 38), (' income tax expense on continuing operations', 34), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 33), ('income tax expense', 31), (' current income tax', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('income tax expense', 62), (' income tax expense on continuing operations', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 55), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('income tax expense', 69), (' income tax expense on continuing operations', 63), (' total tax (expense)/benefit in income statement', 63), (' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 56), (' current income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 40), ('income tax expense', 39), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' current income tax', 41), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('income tax expense', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 60), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' current income tax', 47), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37), (' total income tax expense / (benefit)', 37), (' total tax (expense)/benefit in income statement', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [(' income tax expense on continuing operations', 39), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total tax (expense)/benefit in income statement', 35), (' total income tax expense / (benefit)', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred income tax', 62), (' current income tax', 60), (' total tax (expense)/benefit in income statement', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), ('income tax expense', 36), (' current income tax', 36), (' deferred income tax', 36), (' total income tax expense / (benefit)', 36), (' total tax (expense)/benefit in income statement', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 43), ('income tax expense', 38), (' current income tax', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' income tax expense on continuing operations', 43), (' total income tax expense / (benefit)', 43), (' current income tax', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' deferred income tax', 40), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense / (benefit)', 34), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), ('income tax expense', 40), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), (' current income tax', 30), (' total tax (expense)/benefit in income statement', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), ('income tax expense', 38), (' income tax expense on continuing operations', 34), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 33), ('income tax expense', 31), (' current income tax', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('income tax expense', 62), (' income tax expense on continuing operations', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 55), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('income tax expense', 69), (' income tax expense on continuing operations', 63), (' total tax (expense)/benefit in income statement', 63), (' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 56), (' current income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 40), ('income tax expense', 39), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' current income tax', 41), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('income tax expense', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 60), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' current income tax', 47), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37), (' total income tax expense / (benefit)', 37), (' total tax (expense)/benefit in income statement', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [(' income tax expense on continuing operations', 39), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total tax (expense)/benefit in income statement', 35), (' total income tax expense / (benefit)', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated statement of financial position $'000 , res_fuzz_match = [(' current income tax', 53), ('income tax expense', 50), (' deferred income tax', 47), (' total tax (expense)/benefit in income statement', 47), (' income tax expense on continuing operations', 45), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred income tax', 62), (' current income tax', 60), (' total tax (expense)/benefit in income statement', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), ('income tax expense', 36), (' current income tax', 36), (' deferred income tax', 36), (' total income tax expense / (benefit)', 36), (' total tax (expense)/benefit in income statement', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 43), ('income tax expense', 38), (' current income tax', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' income tax expense on continuing operations', 43), (' total income tax expense / (benefit)', 43), (' current income tax', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' deferred income tax', 40), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense / (benefit)', 34), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), ('income tax expense', 40), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), (' current income tax', 30), (' total tax (expense)/benefit in income statement', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), ('income tax expense', 38), (' income tax expense on continuing operations', 34), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 33), ('income tax expense', 31), (' current income tax', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('income tax expense', 62), (' income tax expense on continuing operations', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 55), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('income tax expense', 69), (' income tax expense on continuing operations', 63), (' total tax (expense)/benefit in income statement', 63), (' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 56), (' current income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 40), ('income tax expense', 39), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' current income tax', 41), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('income tax expense', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 60), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' current income tax', 47), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37), (' total income tax expense / (benefit)', 37), (' total tax (expense)/benefit in income statement', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [(' income tax expense on continuing operations', 39), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total tax (expense)/benefit in income statement', 35), (' total income tax expense / (benefit)', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = consolidated $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), (' total tax (expense)/benefit in income statement', 38), ('income tax expense', 25), (' current income tax', 25), (' deferred income tax', 25), (' total income tax expense / (benefit)', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none unearned income , res_fuzz_match = [(' deferred income tax', 62), (' current income tax', 60), (' total tax (expense)/benefit in income statement', 59), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 41), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none prepayments , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), ('income tax expense', 36), (' current income tax', 36), (' deferred income tax', 36), (' total income tax expense / (benefit)', 36), (' total tax (expense)/benefit in income statement', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none expected credit losses , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 43), ('income tax expense', 38), (' current income tax', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none intangibles/fixed assets , res_fuzz_match = [(' total tax (expense)/benefit in income statement', 48), (' deferred income tax', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 43), (' income tax expense on continuing operations', 43), (' total income tax expense / (benefit)', 43), (' current income tax', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none assets held for sale , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' total tax (expense)/benefit in income statement', 42), (' deferred income tax', 40), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense / (benefit)', 34), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none derivatives , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50), (' income tax expense on continuing operations', 50), ('income tax expense', 40), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), (' current income tax', 30), (' total tax (expense)/benefit in income statement', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none right-of-use assets and lease receivables , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' current income tax', 41), (' deferred income tax', 40), (' total income tax expense / (benefit)', 40), ('income tax expense', 38), (' income tax expense on continuing operations', 34), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none lease liabilities , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 38), (' total tax (expense)/benefit in income statement', 38), (' deferred income tax', 33), ('income tax expense', 31), (' current income tax', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accrued expenses and others , res_fuzz_match = [('income tax expense', 62), (' income tax expense on continuing operations', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 55), (' total tax (expense)/benefit in income statement', 48), (' current income tax', 41), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none deferred tax expense/income) , res_fuzz_match = [('income tax expense', 69), (' income tax expense on continuing operations', 63), (' total tax (expense)/benefit in income statement', 63), (' deferred income tax', 60), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 56), (' total income tax expense / (benefit)', 56), (' current income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none net deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 42), (' income tax expense on continuing operations', 42), (' total income tax expense / (benefit)', 42), (' total tax (expense)/benefit in income statement', 42), ('income tax expense', 39)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 40), ('income tax expense', 39), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax liabilities , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense / (benefit)', 37), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total tax (expense)/benefit in income statement', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), (' total income tax expense / (benefit)', 47), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: total , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: reconciliation of deferred tax assets, net , res_fuzz_match = [(' deferred income tax', 60), ('income tax expense', 44), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' total income tax expense / (benefit)', 43), (' current income tax', 41), (' income tax expense on continuing operations', 38), (' total tax (expense)/benefit in income statement', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 1 april , res_fuzz_match = [('income tax expense', 38), (' current income tax', 35), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: or tax (expense)/income during the period recognised in profit loss , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total tax (expense)/benefit in income statement', 60), (' total income tax expense / (benefit)', 57), (' current income tax', 53), (' deferred income tax', 53), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 50)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: tax expense during the period recognised in oci , res_fuzz_match = [('income tax expense', 75), (' income tax expense on continuing operations', 62), (' total income tax expense / (benefit)', 60), (' total tax (expense)/benefit in income statement', 55), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 52), (' current income tax', 47), (' deferred income tax', 40)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: exchange differences , res_fuzz_match = [('income tax expense', 38), (' income tax expense on continuing operations', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 37), (' total income tax expense / (benefit)', 37), (' total tax (expense)/benefit in income statement', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: others , res_fuzz_match = [(' income tax expense on continuing operations', 39), ('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 38), (' total income tax expense / (benefit)', 35), (' total tax (expense)/benefit in income statement', 35), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = financial position as follows: as at 31 march , res_fuzz_match = [('income tax expense', 38), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 35), (' income tax expense on continuing operations', 35), (' total tax (expense)/benefit in income statement', 35), (' total income tax expense / (benefit)', 31), (' current income tax', 29), (' deferred income tax', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = statement of profit or loss $'000 , res_fuzz_match = [(' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' income tax expense on continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense / (benefit)', 43), (' current income tax', 35), (' deferred income tax', 33), ('income tax expense', 31)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': [], 'value': [], 'label': [], 'year': [], 'colname_found': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['income tax expense', ' current income tax', ' deferred income tax', ' total income tax expense/(benefit) recognised in the current year relating to continuing operations', ' income tax expense on continuing operations', ' total income tax expense / (benefit)', ' total tax (expense)/benefit in income statement'] , match_type = partial , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' deferred income tax', 87), (' current income tax', 65), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 51), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' total income tax expense / (benefit)', 43), (' income tax expense on continuing operations', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('income tax expense', 73), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 49), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('income tax expense', 62), (' current income tax', 47), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 42)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('income tax expense', 62), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' deferred income tax', 47), (' income tax expense on continuing operations', 44), (' total tax (expense)/benefit in income statement', 41), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 45), ('income tax expense', 44)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' deferred income tax', 73), (' current income tax', 71), ('income tax expense', 69), (' income tax expense on continuing operations', 55), (' total income tax expense / (benefit)', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 45)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' total income tax expense / (benefit)', 63), ('income tax expense', 62), (' current income tax', 59), (' income tax expense on continuing operations', 59), (' total tax (expense)/benefit in income statement', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' deferred income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none accounting profit before income tax , res_fuzz_match = [(' deferred income tax', 87), (' current income tax', 65), ('income tax expense', 56), (' total tax (expense)/benefit in income statement', 51), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 46), (' total income tax expense / (benefit)', 43), (' income tax expense on continuing operations', 38)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none at australia's statutory income tax rate of 30% (2022: 30%) , res_fuzz_match = [('income tax expense', 73), (' deferred income tax', 73), (' current income tax', 71), (' total income tax expense / (benefit)', 50), (' total tax (expense)/benefit in income statement', 49), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 44), (' income tax expense on continuing operations', 41)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none non-deductible entertainment expense , res_fuzz_match = [('income tax expense', 62), (' current income tax', 47), (' deferred income tax', 47), (' total income tax expense / (benefit)', 47), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45), (' income tax expense on continuing operations', 45), (' total tax (expense)/benefit in income statement', 42)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = none other non-deductible expense , res_fuzz_match = [('income tax expense', 62), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total income tax expense / (benefit)', 48), (' deferred income tax', 47), (' income tax expense on continuing operations', 44), (' total tax (expense)/benefit in income statement', 41), (' current income tax', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary differences not raised as an asset , res_fuzz_match = [(' deferred income tax', 60), (' current income tax', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 47), (' total income tax expense / (benefit)', 47), (' income tax expense on continuing operations', 45), ('income tax expense', 44)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary income tax adjustment from previous years , res_fuzz_match = [(' deferred income tax', 73), (' current income tax', 71), ('income tax expense', 69), (' income tax expense on continuing operations', 55), (' total income tax expense / (benefit)', 53), (' total tax (expense)/benefit in income statement', 48), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 45)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = net impact due to tax treatment of finance leases and other net temporary effect of lower tax rate in new zealand , res_fuzz_match = [(' current income tax', 53), (' deferred income tax', 53), ('income tax expense', 50), (' total income tax expense / (benefit)', 50), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 48), (' total tax (expense)/benefit in income statement', 48), (' income tax expense on continuing operations', 45)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = total or tax income total loss of the in expense consolidated statement profit and other comprehensive income , res_fuzz_match = [(' total income tax expense / (benefit)', 63), ('income tax expense', 62), (' current income tax', 59), (' income tax expense on continuing operations', 59), (' total tax (expense)/benefit in income statement', 57), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 55), (' deferred income tax', 53)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_rows = $'000 , res_fuzz_match = [('income tax expense', 0), (' current income tax', 0), (' deferred income tax', 0), (' total income tax expense/(benefit) recognised in the current year relating to continuing operations', 0), (' income tax expense on continuing operations', 0), (' total income tax expense / (benefit)', 0), (' total tax (expense)/benefit in income statement', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [0, 8], 'score': [87, 87], 'value': [195367.0, 174396.0], 'label': ['None Accounting profit before income tax', 'None Accounting profit before income tax'], 'year': [], 'colname_found': ['rows', 'rows']}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:ProfitLossDataBucketing.py,  function: get_cdm_item_data_buckets
2023-08-28 10:54:53+0530 - sLogger - ERROR - error occured: unsupported operand type(s) for +: 'int' and 'str'
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['share of', 'share in']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_minority_interest
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['share of', 'share in'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('share of', 16), ('share in', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('share of', 43), ('share in', 43)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('share of', 26), ('share in', 26)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('share of', 10), ('share in', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('share of', 35), ('share in', 35)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('share of', 7), ('share in', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('share of', 22), ('share in', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('share of', 25), ('share in', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('share of', 9), ('share in', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('share of', 15), ('share in', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('share of', 12), ('share in', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('share of', 19), ('share in', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('share of', 14), ('share in', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('share of', 21), ('share in', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('share of', 17), ('share in', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('share of', 20), ('share in', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_extraordinary_gain_loss
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 29), ('exceptional ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' prior period ', 37), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 24), ('exceptional ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 39), (' prior period ', 31), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 39), (' prior period ', 31), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 27), ('exceptional ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('exceptional ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 10), (' prior period ', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 32), ('exceptional ', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 26), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 28), ('exceptional ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 30), ('exceptional ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' prior period ', 54), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 56), (' prior period ', 41), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 25), ('exceptional ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' prior period ', 54), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 34), ('exceptional ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['exceptional ', ' prior period ', ' Actuarial gains / (losses) on retirement benefit obligation'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 27), ('exceptional ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [(' prior period ', 33), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [(' prior period ', 43), (' Actuarial gains / (losses) on retirement benefit obligation', 29), ('exceptional ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('exceptional ', 27), (' Actuarial gains / (losses) on retirement benefit obligation', 26), (' prior period ', 19)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 29), ('exceptional ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [(' prior period ', 37), (' Actuarial gains / (losses) on retirement benefit obligation', 32), ('exceptional ', 25)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 48), (' prior period ', 24), ('exceptional ', 16)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('exceptional ', 44), (' prior period ', 42), (' Actuarial gains / (losses) on retirement benefit obligation', 33)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 29), (' prior period ', 26), ('exceptional ', 24)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('exceptional ', 36), (' prior period ', 36), (' Actuarial gains / (losses) on retirement benefit obligation', 30)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [(' prior period ', 47), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 29)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [(' prior period ', 41), (' Actuarial gains / (losses) on retirement benefit obligation', 41), ('exceptional ', 21)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 39), (' prior period ', 31), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 39), (' prior period ', 31), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 27), ('exceptional ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('exceptional ', 22), (' Actuarial gains / (losses) on retirement benefit obligation', 10), (' prior period ', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 37), (' prior period ', 32), ('exceptional ', 23)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 35), (' prior period ', 26), ('exceptional ', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 28), ('exceptional ', 22)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 44), (' prior period ', 30), ('exceptional ', 18)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' prior period ', 54), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 34), (' prior period ', 29), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 56), (' prior period ', 41), ('exceptional ', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [(' prior period ', 39), (' Actuarial gains / (losses) on retirement benefit obligation', 36), ('exceptional ', 27)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 38), (' prior period ', 25), ('exceptional ', 14)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [(' prior period ', 54), (' Actuarial gains / (losses) on retirement benefit obligation', 24), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 41), (' prior period ', 34), ('exceptional ', 17)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [(' Actuarial gains / (losses) on retirement benefit obligation', 42), (' prior period ', 34), ('exceptional ', 20)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_keywords
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_notes_pages_exclude_keyowrds
2023-08-28 10:54:53+0530 - sLogger - DEBUG - df_meta_keyword = smr_other
2023-08-28 10:54:53+0530 - sLogger - DEBUG - list_target_keywords = ['NULL']
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('NULL', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('NULL', 4)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('NULL', 6)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
2023-08-28 10:54:53+0530 - sLogger - DEBUG - module: Keyword Mapping , File:DatabucketingUtils.py,  function: get_main_page_line_items
2023-08-28 10:54:53+0530 - sLogger - DEBUG - keywords = ['NULL'] , match_type = NULL , conf_score_thresh =80
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = revenue from contracts with customers , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance income , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other income , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = cost of sales , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = employee benefits expense , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = depreciation and amortisation expense , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = recovery of net credit loss and impairment/net credit loss and , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = impairment) on loans and advances , res_fuzz_match = [('NULL', 15)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other expenses , res_fuzz_match = [('NULL', 12)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = finance costs , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit before income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax expense , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = profit after income tax , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive income to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = exchange differences on translation of foreign operations before income , res_fuzz_match = [('NULL', 8)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = tax , res_fuzz_match = [('NULL', 0)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on translation of foreign operations , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net increase in cash flow hedge reserve before income tax , res_fuzz_match = [('NULL', 4)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on cash flow hedge , res_fuzz_match = [('NULL', 6)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive income to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = other comprehensive loss not to be reclassified to profit or loss in subsequent periods: , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = actuarial loss on pension reserve , res_fuzz_match = [('NULL', 13)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = income tax effect on pension , res_fuzz_match = [('NULL', 7)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = net other comprehensive loss not to be reclassified to profit or loss , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = in subsequent periods , res_fuzz_match = [('NULL', 11)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total other comprehensive income for the year , res_fuzz_match = [('NULL', 9)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - txt_particular = total comprehensive income for the year , res_fuzz_match = [('NULL', 10)]
2023-08-28 10:54:53+0530 - sLogger - DEBUG - best_match = {'data_index': [], 'score': 0, 'value': 0, 'line_item_label': [], 'note_numbers': [], 'line_item_value': []}
